{"version":3,"file":"static/js/main.b9828bfd.js","mappings":"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","sources":["src/screens/placeholder/Placeholder.tsx","src/styles/stylesheet.ts","src/styles/index.ts","src/components/app-bars/BotAppBar.tsx","src/components/app-bars/TopAppBar.tsx","src/components/cards/InputCard.tsx","src/components/dialogs/SimpleDialog.tsx","src/components/wheely/WheelPicker.styles.ts","src/components/wheely/WheelPickerItem.tsx","src/components/wheely/WheelPicker.tsx","src/components/wheely/index.ts","src/components/number-picker/FloatPicker.tsx","src/components/number-picker/IntPicker.tsx","src/components/measure-slider-modal/MeasureSliderModal.tsx","src/components/cards/AtmoCard.tsx","src/components/radio-group/RadioGroup.tsx","src/components/dialogs/SimpleScrollDialog.tsx","src/components/cards/SettingsGeneralCard.tsx","src/components/cards/SettingsUnitCard.tsx","src/components/cards/WeaponCard.tsx","src/components/circular-slider/circularGeometry.ts","src/components/circular-slider/svgPaths.ts","src/components/circular-slider/CircularSliderNative.tsx","src/components/wind-dir-picker/WindDirPicker.tsx","src/components/cards/WindCard.tsx","src/screens/home/HomeScreen.tsx","src/screens/atmo/CurrentAtmo.tsx","src/screens/settings/SettingsScreen.tsx","src/screens/calculate/Calculate.tsx","src/screens/trajectory/Trajectory.tsx","src/RootNavigation.tsx","src/RootScreenManager.tsx","App.tsx","webpack/bootstrap","webpack/runtime/amd options","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import React from \"react\";\r\nimport {ScrollView} from 'react-native';\r\nimport {useTheme, Text} from 'react-native-paper';\r\nimport {StyleSheet} from \"react-native\";\r\n\r\n\r\nexport default function Placeholder({text}: { text?: string }) {\r\n\r\n    const theme = useTheme();\r\n\r\n    const styles = StyleSheet.create({\r\n        scrollViewContainer: {\r\n            backgroundColor: theme.colors.background,\r\n        },\r\n    });\r\n\r\n    return (\r\n        <ScrollView\r\n            style={styles.scrollViewContainer}\r\n            keyboardShouldPersistTaps=\"always\"\r\n            alwaysBounceVertical={false}\r\n            showsVerticalScrollIndicator={true}\r\n\r\n            contentContainerStyle={{\r\n                flex: 1,\r\n                justifyContent: 'center',\r\n            }}\r\n        >\r\n            <Text style={{textAlign: \"center\"}}>{text ? text : \"Not implemented yet\"}</Text>\r\n        </ScrollView>\r\n    );\r\n}\r\n","const styleSheet = {\r\n    grid: {\r\n        grid: {\r\n            flex: 1,\r\n        },\r\n        row: {\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n        },\r\n        col: {\r\n            flex: 1,\r\n        },\r\n    },\r\n    card: {\r\n        card: {\r\n            margin: 15,\r\n            padding: 10\r\n        },\r\n        content: {\r\n            marginHorizontal: 0,\r\n            paddingHorizontal: 10\r\n        },\r\n    },\r\n    bottomBar: {\r\n        backgroundColor: 'aquamarine',\r\n        position: 'absolute',\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n    },\r\n    fab: {\r\n        position: 'absolute',\r\n        right: 16\r\n    },\r\n    chip: {\r\n        measure: {\r\n            display: \"flex\",\r\n            // marginLeft: \"auto\",\r\n        },\r\n        measure_text: {\r\n            textAlign: \"right\"\r\n        }\r\n    },\r\n    modal: {\r\n        simple: {\r\n            container: {\r\n                display: \"flex\",\r\n                alignSelf: \"center\",\r\n                // minWidth: 280,\r\n                margin: 20,\r\n                padding: 20\r\n            },\r\n            title: {\r\n                textAlign: \"center\",\r\n                marginBottom: 10\r\n            },\r\n        },\r\n    },\r\n    numberPicker: {\r\n        container: {\r\n            position: 'relative',\r\n        },\r\n        selectedIndicator: {\r\n            position: 'absolute',\r\n            width: '100%',\r\n            backgroundColor: 'hsl(200, 8%, 94%)',\r\n            borderRadius: 5,\r\n            top: '50%',\r\n        },\r\n    }\r\n}\r\n\r\nexport default styleSheet;","import styleSheet from \"./stylesheet\";\r\n\r\nexport default styleSheet;","import React, {useEffect, useState} from 'react';\r\nimport {Appbar, FAB, useTheme} from 'react-native-paper';\r\nimport {useSafeAreaInsets} from 'react-native-safe-area-context';\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport styleSheet from \"../../styles\";\r\n\r\n\r\nconst BOTTOM_APPBAR_HEIGHT = 80;\r\nconst MEDIUM_FAB_HEIGHT = 56;\r\n\r\nconst BotAppBar = () => {\r\n    const {bottom} = useSafeAreaInsets();\r\n    const theme = useTheme();\r\n\r\n    const navigation: any = useNavigation()\r\n\r\n    const [currentRoute, setCurrentRoute] = useState('');\r\n    useEffect(() => {\r\n        return navigation.addListener('state', () => {\r\n            const currentRouteName = navigation.getCurrentRoute()?.name || '';\r\n            setCurrentRoute(currentRouteName);\r\n        });\r\n    }, [navigation]);\r\n\r\n    const onFabPress = () => {\r\n        if (!(currentRoute === \"Home\")) {\r\n            navigation.navigate(\"Home\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Appbar\r\n            elevated={true}\r\n            style={[\r\n                styleSheet.bottomBar.position,\r\n                {\r\n                    height: BOTTOM_APPBAR_HEIGHT + bottom,\r\n                    backgroundColor: theme.colors.elevation.level2,\r\n                },\r\n            ]}\r\n            safeAreaInsets={{bottom}}\r\n        >\r\n\r\n            <Appbar.Action icon=\"weather-partly-cloudy\" onPress={() => navigation.navigate(\"Atmosphere\")}/>\r\n            <Appbar.Action icon=\"calculator\" onPress={() => navigation.navigate(\"Calculate\")}/>\r\n            <Appbar.Action icon=\"table-large\" onPress={() => navigation.navigate(\"Trajectory\")}/>\r\n            <Appbar.Action icon=\"cog-outline\" onPress={() => navigation.navigate(\"Settings\")}/>\r\n\r\n            <FAB\r\n                mode=\"flat\"\r\n                size=\"medium\"\r\n                icon={currentRoute === \"Home\" ? \"plus\" : \"home\"}\r\n                onPress={onFabPress}\r\n                style={[\r\n                    styleSheet.fab,\r\n                    {top: (BOTTOM_APPBAR_HEIGHT - MEDIUM_FAB_HEIGHT) / 2},\r\n                ]}\r\n            />\r\n\r\n        </Appbar>\r\n    );\r\n};\r\n\r\n\r\nexport default BotAppBar;","import { Appbar } from 'react-native-paper';\r\nimport { Platform } from 'react-native';\r\nimport { getHeaderTitle } from '@react-navigation/elements';\r\n\r\nconst MORE_ICON = Platform.OS === 'ios' ? 'dots-horizontal' : 'dots-vertical';\r\n\r\n\r\nexport default function TopAppBar({...props}) {\r\n    const {navigation, route, options, back, params} = props;\r\n    const { nightMode, toggleNightMode } = params;\r\n    const title = getHeaderTitle(options, route.name);\r\n\r\n    return (\r\n        <Appbar.Header elevated={true} >\r\n            {back ? <Appbar.BackAction onPress={navigation.goBack} /> : null}\r\n            <Appbar.Content title={title} />\r\n            <Appbar.Action\r\n                icon={nightMode ? \"brightness-7\" : \"brightness-3\"}\r\n                onPress={() => toggleNightMode(!nightMode)}\r\n            />\r\n            {/*{route.name === \"Home\" ? <Appbar.Action icon='cog' onPress={() => navigation.navigate('Settings')} /> : null}*/}\r\n            <Appbar.Action icon={MORE_ICON} onPress={() => { }} />\r\n\r\n\r\n        </Appbar.Header>\r\n    );\r\n\r\n}\r\n","import {Card} from \"react-native-paper\";\r\nimport React from \"react\";\r\nimport styleSheet from \"../../styles\";\r\n\r\n\r\n\r\nconst InputCard = ({children, title}) => {\r\n\r\n    return (\r\n        <Card mode=\"elevated\" elevation={1}\r\n              style={[styleSheet.card.card]}\r\n        >\r\n            <Card.Title titleVariant={\"titleLarge\"} title={title}></Card.Title>\r\n            <Card.Content style={styleSheet.card.content}>\r\n                {children}\r\n            </Card.Content>\r\n        </Card>\r\n    )\r\n}\r\n\r\n\r\nexport default InputCard;","import * as React from 'react';\r\nimport {Portal, Chip, useTheme, Button, Dialog, Text, FAB, Icon} from 'react-native-paper';\r\nimport {View} from \"react-native\";\r\n\r\n\r\nconst SimpleDialog = ({\r\n                         children,\r\n                         label,\r\n                         text,\r\n                         icon = null,\r\n                         onAccept = null,\r\n                         onDecline = null\r\n                     }) => {\r\n\r\n    const [visible, setVisible] = React.useState(false);\r\n\r\n    const showDialog = () => setVisible(true);\r\n    const hideDialog = () => {\r\n        setVisible(false);\r\n    };\r\n\r\n    const onAcceptBtn = () => {\r\n        if (onAccept) onAccept();\r\n        setVisible(false);\r\n    }\r\n\r\n    const onDeclineBtn = () => {\r\n        if (onDecline) onDecline();\r\n        setVisible(false);\r\n    }\r\n\r\n    return (\r\n        <View style={{display: \"flex\", justifyContent: \"center\"}}>\r\n            <Chip icon={icon} closeIcon=\"square-edit-outline\" style={{margin: 0}} textStyle={{fontSize: 16}}\r\n                  onPress={showDialog}\r\n                  onClose={showDialog}\r\n            >\r\n                {text}\r\n            </Chip>\r\n            <Portal>\r\n\r\n                <Dialog visible={visible} onDismiss={hideDialog} style={{justifyContent: \"center\"}}>\r\n                    <Dialog.Title>{label}</Dialog.Title>\r\n\r\n                    <Dialog.Content>{children}</Dialog.Content>\r\n\r\n                    <Dialog.Actions>\r\n                        <FAB icon=\"close\" mode={\"flat\"} size={'small'} onPress={onDeclineBtn}\r\n                             variant={'tertiary'} color={useTheme().colors.tertiary}/>\r\n                        <FAB icon=\"check\" mode={\"flat\"} size={'small'} onPress={onAcceptBtn}/>\r\n                    </Dialog.Actions>\r\n                </Dialog>\r\n\r\n            </Portal>\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default SimpleDialog;","import { StyleSheet } from 'react-native';\r\n\r\nexport default StyleSheet.create({\r\n  container: {\r\n    position: 'relative',\r\n  },\r\n  selectedIndicator: {\r\n    position: 'absolute',\r\n    width: '100%',\r\n    backgroundColor: 'hsl(200, 8%, 94%)',\r\n    borderRadius: 5,\r\n    top: '50%',\r\n  },\r\n  scrollView: {\r\n    overflow: 'hidden',\r\n    flex: 1,\r\n  },\r\n  option: {\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    paddingHorizontal: 16,\r\n    zIndex: 100,\r\n  },\r\n});\r\n","import React from 'react';\r\nimport { StyleProp, TextStyle, Animated, Text, ViewStyle } from 'react-native';\r\nimport styles from './WheelPicker.styles';\r\n\r\ninterface ItemProps {\r\n  textStyle: StyleProp<TextStyle>;\r\n  style: StyleProp<ViewStyle>;\r\n  option: string | null;\r\n  height: number;\r\n  index: number;\r\n  currentScrollIndex: Animated.AnimatedAddition<any>;\r\n  visibleRest: number;\r\n  rotationFunction: (x: number) => number;\r\n  opacityFunction: (x: number) => number;\r\n  scaleFunction: (x: number) => number;\r\n}\r\n\r\nconst WheelPickerItem: React.FC<ItemProps> = ({\r\n  textStyle,\r\n  style,\r\n  height,\r\n  option,\r\n  index,\r\n  visibleRest,\r\n  currentScrollIndex,\r\n  opacityFunction,\r\n  rotationFunction,\r\n  scaleFunction\r\n}) => {\r\n  const relativeScrollIndex = Animated.subtract(index, currentScrollIndex);\r\n\r\n  const translateY = relativeScrollIndex.interpolate({\r\n    inputRange: (() => {\r\n      const range = [0];\r\n      for (let i = 1; i <= visibleRest + 1; i++) {\r\n        range.unshift(-i);\r\n        range.push(i);\r\n      }\r\n      return range;\r\n    })(),\r\n    outputRange: (() => {\r\n      const range = [0];\r\n      for (let i = 1; i <= visibleRest + 1; i++) {\r\n        let y =\r\n          (height / 2) * (1 - Math.sin(Math.PI / 2 - rotationFunction(i)));\r\n        for (let j = 1; j < i; j++) {\r\n          y += height * (1 - Math.sin(Math.PI / 2 - rotationFunction(j)));\r\n        }\r\n        range.unshift(y);\r\n        range.push(-y);\r\n      }\r\n      return range;\r\n    })(),\r\n  });\r\n\r\n  const opacity = relativeScrollIndex.interpolate({\r\n    inputRange: (() => {\r\n      const range = [0];\r\n      for (let i = 1; i <= visibleRest + 1; i++) {\r\n        range.unshift(-i);\r\n        range.push(i);\r\n      }\r\n      return range;\r\n    })(),\r\n    outputRange: (() => {\r\n      const range = [1];\r\n      for (let x = 1; x <= visibleRest + 1; x++) {\r\n        const y = opacityFunction(x);\r\n        range.unshift(y);\r\n        range.push(y);\r\n      }\r\n      return range;\r\n    })(),\r\n  });\r\n\r\n  const scale = relativeScrollIndex.interpolate({\r\n    inputRange: (() => {\r\n      const range = [0];\r\n      for (let i = 1; i <= visibleRest + 1; i++) {\r\n        range.unshift(-i);\r\n        range.push(i);\r\n      }\r\n      return range;\r\n    })(),\r\n    outputRange: (() => {\r\n      const range = [1.0];\r\n      for (let x = 1; x <= visibleRest + 1; x++) {\r\n        const y = scaleFunction(x);\r\n        range.unshift(y);\r\n        range.push(y);\r\n      }\r\n      return range;\r\n    })(),\r\n  });\r\n\r\n  const rotateX = relativeScrollIndex.interpolate({\r\n    inputRange: (() => {\r\n      const range = [0];\r\n      for (let i = 1; i <= visibleRest + 1; i++) {\r\n        range.unshift(-i);\r\n        range.push(i);\r\n      }\r\n      return range;\r\n    })(),\r\n    outputRange: (() => {\r\n      const range = ['0deg'];\r\n      for (let x = 1; x <= visibleRest + 1; x++) {\r\n        const y = rotationFunction(x);\r\n        range.unshift(`${y}deg`);\r\n        range.push(`${y}deg`);\r\n      }\r\n      return range;\r\n    })(),\r\n  });\r\n\r\n  return (\r\n    <Animated.View\r\n      style={[\r\n        styles.option,\r\n        style,\r\n        {  height, opacity, transform: [{ translateY }, { rotateX }, { scale }]},\r\n      ]}\r\n    >\r\n      <Text style={textStyle}>{option}</Text>\r\n    </Animated.View>\r\n  );\r\n};\r\n\r\nexport default React.memo(\r\n  WheelPickerItem,\r\n  /**\r\n   * We enforce that this component will not rerender after the initial render.\r\n   * Therefore props that change on every render like style objects or functions\r\n   * do not need to be wrapped into useMemo and useCallback.\r\n   */\r\n  () => true,\r\n);\r\n","import React, { useEffect, useMemo, useRef, useState } from 'react';\r\nimport {\r\n  StyleProp,\r\n  TextStyle,\r\n  NativeSyntheticEvent,\r\n  NativeScrollEvent,\r\n  Animated,\r\n  ViewStyle,\r\n  View,\r\n  ViewProps,\r\n  FlatListProps,\r\n  FlatList,\r\n  Platform\r\n} from 'react-native';\r\nimport styles from './WheelPicker.styles';\r\nimport WheelPickerItem from './WheelPickerItem';\r\n\r\ninterface Props {\r\n  selectedIndex: number;\r\n  options: string[];\r\n  onChange: (index: number) => void;\r\n  selectedIndicatorStyle?: StyleProp<ViewStyle>;\r\n  itemTextStyle?: TextStyle;\r\n  itemStyle?: ViewStyle;\r\n  itemHeight?: number;\r\n  containerStyle?: ViewStyle;\r\n  containerProps?: Omit<ViewProps, 'style'>;\r\n  scaleFunction?: (x: number) => number;\r\n  rotationFunction?: (x: number) => number;\r\n  opacityFunction?: (x: number) => number;\r\n  visibleRest?: number;\r\n  decelerationRate?: 'normal' | 'fast' | number;\r\n  flatListProps?: Omit<FlatListProps<string | null>, 'data' | 'renderItem'>;\r\n}\r\n\r\nconst WheelPicker: React.FC<Props> = ({\r\n  selectedIndex,\r\n  options,\r\n  onChange,\r\n  selectedIndicatorStyle = {},\r\n  containerStyle = {},\r\n  itemStyle = {},\r\n  itemTextStyle = {},\r\n  itemHeight = 40,\r\n  scaleFunction = (x: number) => 1.0 ** x,\r\n  rotationFunction = (x: number) => 1 - Math.pow(1 / 2, x),\r\n  opacityFunction = (x: number) => Math.pow(1 / 3, x),\r\n  visibleRest = 2,\r\n  decelerationRate = 'fast',\r\n  containerProps = {},\r\n  flatListProps = {},\r\n}) => {\r\n  const flatListRef = useRef<FlatList>(null);\r\n  const [scrollY] = useState(new Animated.Value(0));\r\n\r\n  const lastScrollTimestamp = useRef(new Date().getTime());\r\n\r\n\r\n  const containerHeight = (1 + visibleRest * 2) * itemHeight;\r\n  const [scrollIndex, setScrollIndex] = useState(selectedIndex);\r\n  const paddedOptions = useMemo(() => {\r\n    const array: (string | null)[] = [...options];\r\n    for (let i = 0; i < visibleRest; i++) {\r\n      array.unshift(null);\r\n      array.push(null);\r\n    }\r\n    return array;\r\n  }, [options, visibleRest]);\r\n\r\n  const offsets = useMemo(\r\n    () => [...Array(paddedOptions.length)].map((x, i) => i * itemHeight),\r\n    [paddedOptions, itemHeight],\r\n  );\r\n\r\n  const currentScrollIndex = useMemo(\r\n    () => Animated.add(Animated.divide(scrollY, itemHeight), visibleRest),\r\n    [visibleRest, scrollY, itemHeight],\r\n  );\r\n\r\n  const handleMomentumScrollEnd = (\r\n    event: NativeSyntheticEvent<NativeScrollEvent>,\r\n  ) => {\r\n    // Due to list bounciness when scrolling to the start or the end of the list\r\n    // the offset might be negative or over the last item.\r\n    // We therefore clamp the offset to the supported range.\r\n    const offsetY = Math.min(\r\n      itemHeight * (options.length - 1),\r\n      Math.max(event.nativeEvent.contentOffset.y, 0),\r\n    );\r\n\r\n    let index = Math.floor(Math.floor(offsetY) / itemHeight);\r\n    const last = Math.floor(offsetY % itemHeight);\r\n    if (last > itemHeight / 2) index++;\r\n\r\n    if (index !== selectedIndex) {\r\n      onChange(index);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (selectedIndex < 0 || selectedIndex >= options.length) {\r\n      throw new Error(\r\n        `Selected index ${selectedIndex} is out of bounds [0, ${\r\n          options.length - 1\r\n        }]`,\r\n      );\r\n    }\r\n  }, [selectedIndex, options]);\r\n\r\n  /**\r\n   * If selectedIndex is changed from outside (not via onChange) we need to scroll to the specified index.\r\n   * This ensures that what the user sees as selected in the picker always corresponds to the value state.\r\n   */\r\n  useEffect(() => {\r\n    flatListRef.current?.scrollToIndex({\r\n      index: selectedIndex,\r\n      animated: false,\r\n    });\r\n  }, [selectedIndex]);\r\n\r\n  useEffect(() => {\r\n    if (Platform.OS === 'web') {\r\n      const SCROLL_COOLDOWN_MILLISECONDS = 100;\r\n      const SCROLL_DID_STOP_TIMEOUT = 500;\r\n      const intervalID = setInterval(() => {\r\n        const time = new Date().getTime();\r\n        const difference = time - lastScrollTimestamp.current;\r\n        if (difference > SCROLL_DID_STOP_TIMEOUT) {\r\n          flatListRef.current?.scrollToIndex({\r\n            index: scrollIndex,\r\n            animated: true,\r\n          });\r\n        }\r\n      }, SCROLL_COOLDOWN_MILLISECONDS);\r\n      return () => {\r\n        clearInterval(intervalID);\r\n      };\r\n    }\r\n  }, [scrollIndex]);\r\n\r\n  useEffect(() => {\r\n    if (Platform.OS === 'web') {\r\n      onChange(scrollIndex);\r\n    }\r\n  }, [scrollIndex, onChange]);\r\n\r\n  const handleScroll = (event: NativeSyntheticEvent<any>) => {\r\n    if (Platform.OS === 'web') {\r\n      const positionY = event.nativeEvent.contentOffset.y;\r\n      const index = Math.round(positionY / itemHeight);\r\n      setScrollIndex(index);\r\n      lastScrollTimestamp.current = new Date().getTime();\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <View\r\n      style={[styles.container, { height: containerHeight }, containerStyle]}\r\n      {...containerProps}\r\n    >\r\n      <View\r\n        style={[\r\n          styles.selectedIndicator,\r\n          selectedIndicatorStyle,\r\n          {\r\n            transform: [{ translateY: -itemHeight / 2 }],\r\n            height: itemHeight,\r\n          },\r\n        ]}\r\n      />\r\n      <Animated.FlatList<string | null>\r\n        {...flatListProps}\r\n        ref={flatListRef}\r\n        style={styles.scrollView}\r\n        showsVerticalScrollIndicator={false}\r\n        onScroll={Animated.event(\r\n          [{ nativeEvent: { contentOffset: { y: scrollY } } }],\r\n          {\r\n            useNativeDriver: true,\r\n            listener: (event: NativeSyntheticEvent<any>\r\n            ) => handleScroll(event),\r\n          },\r\n        )}\r\n        onMomentumScrollEnd={handleMomentumScrollEnd}\r\n        snapToOffsets={offsets}\r\n        decelerationRate={decelerationRate}\r\n        initialScrollIndex={selectedIndex}\r\n        getItemLayout={(data, index) => ({\r\n          length: itemHeight,\r\n          offset: itemHeight * index,\r\n          index,\r\n        })}\r\n        data={paddedOptions}\r\n        keyExtractor={(item, index) => index.toString()}\r\n        renderItem={({ item: option, index }) => (\r\n          <WheelPickerItem\r\n            key={`option-${index}`}\r\n            index={index}\r\n            option={option}\r\n            style={itemStyle}\r\n            textStyle={itemTextStyle}\r\n            height={itemHeight}\r\n            currentScrollIndex={currentScrollIndex}\r\n            scaleFunction={scaleFunction}\r\n            rotationFunction={rotationFunction}\r\n            opacityFunction={opacityFunction}\r\n            visibleRest={visibleRest}\r\n          />\r\n        )}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default WheelPicker;\r\n","import WheelPicker from './WheelPicker';\r\n\r\nexport default WheelPicker;","import React, {useState} from 'react';\r\nimport WheelPicker from '../wheely';\r\nimport styleSheet from \"../../styles\";\r\nimport {useTheme} from \"react-native-paper\";\r\nimport {View} from \"react-native\";\r\nimport type {NumberPickerProps} from \"./NumberPickerProps\";\r\n\r\n\r\nconst IntegerWheelPicker = ({...props}: NumberPickerProps) => {\r\n    const {curValue, minValue, maxValue, onChange, wheelProps} = props\r\n\r\n    const intRange: number[] = []\r\n    for (let i = Math.floor(minValue); i <= Math.floor(maxValue); i++) {\r\n        intRange.push(i)\r\n    }\r\n\r\n    const onIndexChange = (index: number): void => {\r\n        onChange(intRange[index]);\r\n    }\r\n\r\n    return (\r\n        <WheelPicker\r\n            {...wheelProps}\r\n            selectedIndex={intRange.indexOf(curValue)}\r\n            options={intRange.map(item => `${item}`)}\r\n            onChange={onIndexChange}\r\n        />\r\n    )\r\n}\r\n\r\n\r\nconst DecimalWheelPicker = ({...props}: NumberPickerProps) => {\r\n\r\n    const {curValue, decimals, onChange, wheelProps} = props\r\n\r\n    const decimalFormat = (value: number): string => (value % 1).toFixed(decimals).slice(1);\r\n    const decimalStep = 1 / (10 ** decimals)\r\n    const createDecimalOptions = (): string[] => {\r\n        let list = []\r\n        for (let i = 0; i < 1; i += decimalStep) {\r\n            list.push(decimalFormat(i))\r\n        }\r\n        return list\r\n    }\r\n\r\n    const decimalsOptions: string[] = createDecimalOptions()\r\n\r\n    const onDecimalChange = (index: number): void => {\r\n        onChange(parseFloat(decimalsOptions[index]));\r\n    }\r\n\r\n    return (\r\n        <WheelPicker\r\n            {...wheelProps}\r\n            selectedIndex={decimalsOptions.indexOf(decimalFormat(curValue))}\r\n            options={decimalsOptions}\r\n            onChange={onDecimalChange}\r\n        />\r\n    )\r\n}\r\n\r\n\r\nexport default function FloatPicker({...props}: NumberPickerProps) {\r\n\r\n    const {curValue, minValue, maxValue, decimals, onChange} = props\r\n\r\n    const theme = useTheme()\r\n\r\n    const style = {\r\n        selectedIndicatorStyle: {\r\n            ...styleSheet.numberPicker.selectedIndicator,\r\n            borderRadius: 0, backgroundColor: theme.colors.onSecondary\r\n        },\r\n        itemTextStyle: {color: theme.colors.secondary, fontWeight: \"bold\", fontSize: 24},\r\n        containerStyle: {\r\n            ...styleSheet.numberPicker.container,\r\n            backgroundColor: theme.colors.secondaryContainer,\r\n            marginTop: 10\r\n        }\r\n    }\r\n\r\n    const intWheelProps = {\r\n        ...style,\r\n        containerStyle: {...style.containerStyle, borderTopLeftRadius: 24, borderBottomLeftRadius: 24},\r\n        itemStyle: {marginLeft: \"auto\", marginRight: 0, paddingRight: 5},\r\n    }\r\n\r\n    const decimalWheelProps = {\r\n        ...style,\r\n        containerStyle: {...style.containerStyle, borderTopRightRadius: 24, borderBottomRightRadius: 24},\r\n        itemStyle: {marginLeft: 0, marginRight: \"auto\", paddingLeft: 5},\r\n    }\r\n\r\n    const [int, setInt] = useState(Math.floor(curValue))\r\n    const [decimal, setDecimal] = useState(curValue % 1)\r\n    const onValueChange = (value: number) => {\r\n        onChange ? onChange(value + decimal) : null\r\n    }\r\n\r\n    const onIntChange = (value) => {\r\n        setInt(value)\r\n        onValueChange(value + decimal)\r\n    }\r\n\r\n    const onDecimalChange = (value) => {\r\n        setDecimal(value)\r\n        onValueChange(value + int)\r\n    }\r\n\r\n    return (\r\n        <View style={{flexDirection: \"row\", justifyContent: 'center'}}>\r\n            <IntegerWheelPicker\r\n                wheelProps={intWheelProps}\r\n                {...{...props, curValue: int}}\r\n                onChange={onIntChange}\r\n            />\r\n\r\n            <DecimalWheelPicker\r\n                wheelProps={decimalWheelProps}\r\n                {...{...props, curValue: decimal}}\r\n                onChange={onDecimalChange}\r\n            />\r\n        </View>\r\n    );\r\n}","import React from 'react';\r\nimport WheelPicker from '../wheely';\r\nimport styleSheet from \"../../styles\";\r\nimport {useTheme} from \"react-native-paper\";\r\nimport {View} from \"react-native\";\r\nimport type {NumberPickerProps} from \"./NumberPickerProps\";\r\n\r\n\r\nexport default function IntPicker({...props}: NumberPickerProps) {\r\n    const {maxValue, minValue, onChange, curValue} = props\r\n\r\n    const theme = useTheme()\r\n\r\n    const range = []\r\n    for (let i = minValue; i <= maxValue; i++) {\r\n        range.push(i)\r\n    }\r\n\r\n    const onValueChange = (index: number) => {\r\n        if (onChange) onChange(range[index]);\r\n    }\r\n\r\n    const style: any = {\r\n        selectedIndicatorStyle: {\r\n            ...styleSheet.numberPicker.selectedIndicator,\r\n            borderRadius: 0,\r\n            backgroundColor: theme.colors.onSecondary\r\n        },\r\n        containerStyle: {\r\n            ...styleSheet.numberPicker.container,\r\n            backgroundColor: theme.colors.secondaryContainer,\r\n            borderRadius: 24,\r\n            marginTop: 10\r\n        },\r\n        itemTextStyle: {color: theme.colors.secondary, fontWeight: \"bold\", fontSize: 24},\r\n    }\r\n\r\n    return (\r\n        <View style={{flexDirection: \"row\", justifyContent: 'center'}}>\r\n            <WheelPicker\r\n                {...style}\r\n                selectedIndex={range.indexOf(curValue)}\r\n                options={range}\r\n                onChange={onValueChange}\r\n            />\r\n        </View>\r\n    );\r\n}","import React, {useState} from \"react\";\r\nimport {Col, Row} from \"react-native-paper-grid\";\r\nimport styleSheet from \"../../styles\";\r\nimport {Text} from \"react-native-paper\";\r\nimport SimpleDialog from \"../dialogs/SimpleDialog\";\r\nimport {IntPicker, FloatPicker} from \"../number-picker\";\r\n\r\n\r\nexport interface MeasureField {\r\n    field: {\r\n        key: any\r\n        label: string\r\n        suffix: string\r\n        icon: string\r\n        mode: (\"int\" | \"float\")\r\n        initialValue: number\r\n        maxValue: number\r\n        minValue: number\r\n        decimals: number\r\n    }\r\n}\r\n\r\n\r\nexport default function MeasureSliderModal({field}: MeasureField) {\r\n    const [curValue, setCurValue] = useState(field.initialValue);\r\n    const [value, setValue] = useState(curValue)\r\n\r\n    const onAccept = () => {\r\n        setCurValue(value)\r\n    }\r\n\r\n    const onDecline = () => {\r\n        setValue(value)\r\n    }\r\n\r\n    const pickerProps = {\r\n        ...field,\r\n        curValue: curValue,\r\n        onChange: setValue\r\n    }\r\n\r\n    const picker =  field.mode === \"int\"\r\n        ? <IntPicker {...pickerProps}/>\r\n        : <FloatPicker {...pickerProps}/>\r\n\r\n    return (\r\n        <Row style={styleSheet.grid.row}>\r\n            <Col size={8}>\r\n                <Text style={{fontSize: 16}}>{field.label}</Text>\r\n            </Col>\r\n            <Col size={8}>\r\n                <SimpleDialog icon={field.icon} label={`${field.label}, ${field.suffix}`}\r\n                              text={`${curValue.toFixed(field.decimals)} ${field.suffix}`}\r\n                              onAccept={onAccept}\r\n                              onDecline={onDecline}>\r\n                    {picker}\r\n                </SimpleDialog>\r\n            </Col>\r\n        </Row>)\r\n}","import {Grid} from \"react-native-paper-grid\";\r\nimport React from \"react\";\r\nimport InputCard from \"./InputCard\";\r\nimport styleSheet from \"../../styles\";\r\nimport {Unit, UnitProps} from \"js-ballistics\";\r\nimport MeasureSliderModal from \"../measure-slider-modal/MeasureSliderModal\";\r\n\r\n\r\nexport default function AtmoCard() {\r\n\r\n    const fields = [\r\n        {\r\n            key: \"temp\",\r\n            label: \"Temperature\",\r\n            suffix: UnitProps[Unit.Celsius].symbol,\r\n            icon: \"thermometer\",\r\n            mode: \"int\" as const,\r\n            initialValue: 15,\r\n            maxValue: 50,\r\n            minValue: -50,\r\n            decimals: 0\r\n        },\r\n        {\r\n            key: \"pressure\",\r\n            label: \"Pressure\",\r\n            suffix: UnitProps[Unit.MmHg].symbol,\r\n            icon: \"speedometer\",\r\n            mode: \"int\" as const,\r\n            initialValue: 760,\r\n            maxValue: 1000,\r\n            minValue: 700,\r\n            decimals: 0\r\n        },\r\n        {\r\n            key: \"humidity\",\r\n            label: \"Humidity\",\r\n            suffix: \"%\",\r\n            icon: \"water\",\r\n            mode: \"int\" as const,\r\n            initialValue: 78,\r\n            maxValue: 100,\r\n            minValue: 0,\r\n            decimals: 0\r\n        },\r\n        {\r\n            key: \"altitude\",\r\n            label: \"Altitude\",\r\n            suffix: UnitProps[Unit.Meter].symbol,\r\n            icon: \"ruler\",\r\n            mode: \"int\" as const,\r\n            initialValue: 150,\r\n            maxValue: 3000,\r\n            minValue: 0,\r\n            decimals: 0,\r\n        },\r\n    ]\r\n\r\n    return (\r\n        <InputCard title={\"Current atmosphere\"}>\r\n            <Grid style={styleSheet.grid.grid}>\r\n                {fields.map(field => <MeasureSliderModal key={field.key} field={field}/>)}\r\n            </Grid>\r\n        </InputCard>\r\n    )\r\n}","import React, {useState} from \"react\";\r\nimport {List, RadioButton} from \"react-native-paper\";\r\n\r\ntype RadioItem = {\r\n    label: string\r\n    key: any\r\n    value: any\r\n}\r\n\r\n\r\ntype RadioProps = {\r\n    initialValue: any\r\n    onChange: Function|any\r\n    items: RadioItem[]\r\n}\r\n\r\n\r\nexport default function RadioGroup({initialValue, onChange, items}: RadioProps) {\r\n\r\n    const [value, setValue] = useState(initialValue);\r\n\r\n    const onValueChange = (value: number) => {\r\n        setValue(value);\r\n        if (onChange) onChange(value);\r\n    }\r\n\r\n    return (\r\n            <RadioButton.Group onValueChange={onValueChange} value={value}>\r\n                {items.map(item =>\r\n                        <RadioButton.Item key={item.value} label={item.label} value={item.value}/>\r\n                )}\r\n            </RadioButton.Group>\r\n    );\r\n\r\n}","import * as React from 'react';\r\nimport {Portal, Chip, useTheme, Button, Dialog, Text, FAB} from 'react-native-paper';\r\nimport {ScrollView, View} from \"react-native\";\r\n\r\n\r\nconst SimpleScrollDialog = ({\r\n                         children,\r\n                         title,\r\n                         text,\r\n                         icon = null,\r\n                         onAccept = null,\r\n                         onDecline = null\r\n                     }) => {\r\n\r\n    const [visible, setVisible] = React.useState(false);\r\n\r\n    const showDialog = () => setVisible(true);\r\n    const hideDialog = () => {\r\n        setVisible(false);\r\n    };\r\n\r\n    const onAcceptBtn = () => {\r\n        if (onAccept) onAccept();\r\n        setVisible(false);\r\n    }\r\n\r\n    const onDeclineBtn = () => {\r\n        if (onDecline) onDecline();\r\n        setVisible(false);\r\n    }\r\n\r\n    return (\r\n        <View style={{display: \"flex\", justifyContent: \"center\"}}>\r\n            <Chip icon={icon} closeIcon=\"square-edit-outline\" style={{margin: 0}} textStyle={{fontSize: 16}}\r\n                  onPress={showDialog}\r\n                  onClose={showDialog}\r\n                // textStyle={{fontSize: 18}}\r\n            >\r\n                {text}\r\n            </Chip>\r\n            <Portal>\r\n\r\n                <Dialog visible={visible} onDismiss={hideDialog} style={{justifyContent: \"center\"}}>\r\n                    <Dialog.Title>{title}</Dialog.Title>\r\n\r\n                    <Dialog.ScrollArea>\r\n                        <ScrollView contentContainerStyle={{padding: 24}}>\r\n                            {children}\r\n                        </ScrollView>\r\n                    </Dialog.ScrollArea>\r\n\r\n                    <Dialog.Actions>\r\n                        <FAB icon=\"close\" mode={\"flat\"} size={'small'} onPress={onDeclineBtn}\r\n                             variant={'tertiary'} color={useTheme().colors.tertiary}/>\r\n                        <FAB icon=\"check\" mode={\"flat\"} size={'small'} onPress={onAcceptBtn}/>\r\n                    </Dialog.Actions>\r\n                </Dialog>\r\n\r\n            </Portal>\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default SimpleScrollDialog;","import {Text} from \"react-native-paper\"\r\nimport {Col, Grid, Row} from \"react-native-paper-grid\";\r\nimport InputCard from \"./InputCard\";\r\nimport styleSheet from \"../../styles\";\r\n\r\nimport {useState} from \"react\";\r\nimport RadioGroup from \"../radio-group/RadioGroup\";\r\nimport {SimpleScrollDialog} from \"../dialogs\";\r\n\r\nexport default function SettingsGeneralCard() {\r\n\r\n    const languageList = [\r\n        {\r\n            label: \"English\",\r\n            value: \"EN\",\r\n            key: \"EN\"\r\n        },\r\n        {\r\n            label: \"Ukrainian\",\r\n            value: \"UA\",\r\n            key: \"UA\"\r\n        },\r\n    ];\r\n\r\n    const [curLanguage, setCurLanguage] = useState(\"EN\");\r\n    const [language, setLanguage] = useState(curLanguage);\r\n\r\n    const onAccept = () => {\r\n        setCurLanguage(language)\r\n    }\r\n\r\n    const onDecline = () => {\r\n        setLanguage(curLanguage)\r\n    }\r\n\r\n    return (\r\n        <InputCard title={\"General\"}>\r\n            <Grid style={styleSheet.grid.grid}>\r\n\r\n                <Row style={styleSheet.grid.row}>\r\n                    <Col size={9}>\r\n                        <Text style={{fontSize: 16}}>{\"Language\"}</Text>\r\n                    </Col>\r\n                    <Col size={7}>\r\n                        <SimpleScrollDialog title={\"Language\"} text={curLanguage} icon={\"translate\"}\r\n                                      onAccept={onAccept}\r\n                                      onDecline={onDecline}>\r\n                            <RadioGroup initialValue={language} onChange={setLanguage} items={languageList} />\r\n                        </SimpleScrollDialog>\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Grid>\r\n        </InputCard>\r\n    )\r\n\r\n}","import {Text} from \"react-native-paper\"\r\nimport {Col, Grid, Row} from \"react-native-paper-grid\";\r\nimport InputCard from \"./InputCard\";\r\nimport styleSheet from \"../../styles\";\r\n\r\n\r\nimport {\r\n    Unit,\r\n    UnitProps,\r\n    Measure,\r\n} from \"js-ballistics\"\r\nimport {SimpleScrollDialog} from \"../dialogs\";\r\nimport {useState} from \"react\";\r\nimport RadioGroup from \"../radio-group/RadioGroup\";\r\n\r\n\r\nconst get_unit_list = (measure: Object) =>\r\n    Object.keys(measure).map((key: string): { label: string, value: Unit } => {\r\n        return {label: UnitProps[measure[key]].name, value: measure[key]}\r\n    })\r\n\r\nconst fields = [\r\n    {\r\n        key: \"distance\",\r\n        label: \"Distance\",\r\n        list: [\r\n            {label: UnitProps[Unit.Meter].name, value: Unit.Meter},\r\n            {label: UnitProps[Unit.Foot].name, value: Unit.Foot},\r\n            {label: UnitProps[Unit.Yard].name, value: Unit.Yard},\r\n        ],\r\n        def: Unit.Meter,\r\n    },\r\n    {\r\n        key: \"velocity\",\r\n        label: \"Velocity\",\r\n        list: [\r\n            {label: UnitProps[Unit.MPS].name, value: Unit.MPS},\r\n            {label: UnitProps[Unit.FPS].name, value: Unit.FPS},\r\n        ],\r\n        def: Unit.MPS\r\n    },\r\n    {\r\n        key: \"angular\",\r\n        label: \"Angular\",\r\n        list: get_unit_list(Measure.Angular),\r\n        def: Unit.Degree\r\n    },\r\n    {\r\n      key: \"sizes\",\r\n      label: \"Sizes\",\r\n    list: [\r\n        {label: UnitProps[Unit.Inch].name, value: Unit.Inch},\r\n        {label: UnitProps[Unit.Millimeter].name, value: Unit.Millimeter},\r\n        {label: UnitProps[Unit.Centimeter].name, value: Unit.Centimeter},\r\n        {label: UnitProps[Unit.Centimeter].name, value: Unit.Line},\r\n    ],\r\n      def: Unit.Inch\r\n    },\r\n    {\r\n        key: \"weight\",\r\n        label: \"Weight\",\r\n        list: get_unit_list(Measure.Weight),\r\n        def: Unit.Grain\r\n    },\r\n    {\r\n        key: \"temperature\",\r\n        label: \"Temperature\",\r\n        list: [\r\n            {label: UnitProps[Unit.Celsius].name, value: Unit.Celsius},\r\n            {label: UnitProps[Unit.Fahrenheit].name, value: Unit.Fahrenheit},\r\n        ],\r\n        def: Unit.Celsius\r\n    },\r\n    {\r\n        key: \"pressure\",\r\n        label: \"Pressure\",\r\n        list: get_unit_list(Measure.Pressure),\r\n        def: Unit.PSI\r\n    },\r\n    {\r\n        key: \"energy\",\r\n        label: \"Energy\",\r\n        list: get_unit_list(Measure.Energy),\r\n        def: Unit.Joule\r\n    },\r\n    {\r\n        key: \"adjustment\",\r\n        label: \"Adjustment\",\r\n        list: get_unit_list(Measure.Angular),\r\n        def: Unit.MIL\r\n    },\r\n]\r\n\r\n\r\nexport default function SettingsUnitCard() {\r\n\r\n    const UnitSelector = ({field}) => {\r\n\r\n        const [curValue, setCurValue] = useState(field.def);\r\n        const [value, setValue] = useState(curValue)\r\n\r\n        const onAccept = () => {\r\n            setCurValue(value)\r\n        }\r\n\r\n        return (\r\n            <Row style={styleSheet.grid.row} key={field.key}>\r\n                <Col size={9}>\r\n                    <Text style={{fontSize: 16}}>{field.label}</Text>\r\n                </Col>\r\n                <Col size={7}>\r\n                    <SimpleScrollDialog title={field.label} text={UnitProps[curValue].name} onAccept={onAccept}>\r\n                        <RadioGroup initialValue={curValue} onChange={setValue} items={field.list} />\r\n                    </SimpleScrollDialog>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <InputCard title=\"Units of measurement\">\r\n            <Grid style={styleSheet.grid.grid}>\r\n                {fields.map(field => <UnitSelector key={field.key} field={field}/>)}\r\n            </Grid>\r\n        </InputCard>\r\n    )\r\n\r\n}","import {Text, SegmentedButtons, TextInput, useTheme} from \"react-native-paper\";\r\nimport {Col, Grid, Row} from \"react-native-paper-grid\";\r\nimport React, {useState} from \"react\";\r\nimport InputCard from \"./InputCard\";\r\nimport styleSheet from \"../../styles\";\r\nimport {SimpleDialog} from \"../dialogs\";\r\nimport MeasureSliderModal from \"../measure-slider-modal/MeasureSliderModal\";\r\n\r\n\r\nexport default function WeaponCard() {\r\n\r\n    const theme = useTheme()\r\n\r\n    const fields = [\r\n        {\r\n            key: \"diameter\",\r\n            label: \"Diameter\",\r\n            suffix: \"in\",\r\n            icon: \"diameter-variant\",\r\n            mode: \"float\" as const,\r\n            initialValue: 0.308,\r\n            maxValue: 22,\r\n            minValue: 0.001,\r\n            decimals: 3,\r\n        },\r\n        {\r\n            key: \"twist\",\r\n            label: \"Twist\",\r\n            suffix: \"in\",\r\n            icon: \"screw-flat-top\",\r\n            mode: \"float\" as const,\r\n            initialValue: 11,\r\n            maxValue: 20,\r\n            minValue: -20,\r\n            decimals: 2,\r\n        },\r\n    ]\r\n\r\n    const twistStates = [\r\n        {\r\n            value: 'Right',\r\n            label: 'Right',\r\n            icon: \"rotate-right\",\r\n            showSelectedCheck: true,\r\n            checkedColor: theme.colors.primary\r\n        },\r\n        {value: 'Left', label: 'Left', icon: \"rotate-left\", showSelectedCheck: true, checkedColor: theme.colors.primary}\r\n    ]\r\n\r\n    const [curTwistDir, setCurTwistDir] = useState(\"Right\");\r\n    const [twistDir, setTwistDir] = useState(curTwistDir);\r\n\r\n    const [curName, setCurName] = React.useState(\"My rifle\");\r\n    const [name, setName] = React.useState(curName);\r\n\r\n    const acceptTwistDir = (): void => {\r\n        setCurTwistDir(twistDir)\r\n    }\r\n\r\n    const acceptName = () => {\r\n        setCurName(name)\r\n    }\r\n\r\n    const declineName = () => {\r\n        setName(curName)\r\n    }\r\n\r\n    return (\r\n\r\n        <InputCard title={\"Weapon\"}>\r\n\r\n            <SimpleDialog label={\"Name\"} icon={\"card-bulleted-outline\"}\r\n                          text={curName}\r\n                          onAccept={acceptName}\r\n                          onDecline={declineName}\r\n            >\r\n                <TextInput value={name} onChangeText={setName} />\r\n            </SimpleDialog>\r\n\r\n            <Grid style={styleSheet.grid.grid}>\r\n\r\n                {fields.map(field => <MeasureSliderModal key={field.key} field={field}/>)}\r\n\r\n                <Row style={styleSheet.grid.row}>\r\n                    <Col size={8}>\r\n                        <Text style={{fontSize: 16}}>Twist direction</Text>\r\n                    </Col>\r\n                    <Col size={8}>\r\n                        <SimpleDialog label={\"Twist\"} icon={curTwistDir === \"Right\" ? \"rotate-right\" : \"rotate-left\"}\r\n                                      text={curTwistDir} onAccept={acceptTwistDir}>\r\n                            <SegmentedButtons\r\n                                buttons={twistStates} value={twistDir} onValueChange={setTwistDir}/>\r\n                        </SimpleDialog>\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Grid>\r\n        </InputCard>\r\n\r\n    )\r\n}","export function angleToValue(params: {\r\n    angle: number;\r\n    minValue: number;\r\n    maxValue: number;\r\n    startAngle: number;\r\n    endAngle: number;\r\n}) {\r\n    const { angle, minValue, maxValue, startAngle, endAngle } = params;\r\n    if (endAngle <= startAngle) {\r\n        // math assumes endAngle > startAngle\r\n        throw new Error(\"endAngle must be greater than startAngle\");\r\n    }\r\n\r\n    if (angle < startAngle) {\r\n        return minValue;\r\n    } else if (angle > endAngle) {\r\n        return maxValue;\r\n    } else {\r\n        const ratio = (angle - startAngle) / (endAngle - startAngle);\r\n        const value = ratio * (maxValue - minValue) + minValue;\r\n        return value;\r\n    }\r\n}\r\n\r\nexport function valueToAngle(params: {\r\n    value: number;\r\n    minValue: number;\r\n    maxValue: number;\r\n    startAngle: number;\r\n    endAngle: number;\r\n}) {\r\n    const { value, minValue, maxValue, startAngle, endAngle } = params;\r\n    if (endAngle <= startAngle) {\r\n        // math assumes endAngle > startAngle\r\n        throw new Error(\"endAngle must be greater than startAngle\");\r\n    }\r\n    const ratio = (value - minValue) / (maxValue - minValue);\r\n    const angle = ratio * (endAngle - startAngle) + startAngle;\r\n    return angle;\r\n}\r\n\r\nexport type AngleDescription = {\r\n    direction: \"cw\" | \"ccw\";\r\n    axis: \"+x\" | \"-x\" | \"+y\" | \"-y\";\r\n};\r\n\r\nexport type AngleWithDescription = {\r\n    degree: number;\r\n} & AngleDescription;\r\n\r\nfunction convertAngle(\r\n    degree: number,\r\n    from: AngleDescription,\r\n    to?: AngleDescription\r\n) {\r\n    to = to || { direction: \"ccw\", axis: \"+x\" };\r\n\r\n    if (from.direction !== to.direction) {\r\n        degree = degree === 0 ? 0 : 360 - degree;\r\n    }\r\n\r\n    if (from.axis === to.axis) {\r\n        // e.g. +x to +x\r\n        return degree;\r\n    }\r\n\r\n    if (from.axis[1] === to.axis[1]) {\r\n        // e.g. +x to -x\r\n        return (180 + degree) % 360;\r\n    }\r\n\r\n    switch (to.direction + from.axis + to.axis) {\r\n        case \"ccw+x-y\":\r\n        case \"ccw-x+y\":\r\n        case \"ccw+y+x\":\r\n        case \"ccw-y-x\":\r\n        case \"cw+y-x\":\r\n        case \"cw-y+x\":\r\n        case \"cw-x-y\":\r\n        case \"cw+x+y\":\r\n            return (90 + degree) % 360;\r\n        case \"ccw+y-x\":\r\n        case \"ccw-y+x\":\r\n        case \"ccw+x+y\":\r\n        case \"ccw-x-y\":\r\n        case \"cw+x-y\":\r\n        case \"cw-x+y\":\r\n        case \"cw+y+x\":\r\n        case \"cw-y-x\":\r\n            return (270 + degree) % 360;\r\n        default:\r\n            // This is impossible, just for TS\r\n            throw new Error(\"Unhandled conversion\");\r\n    }\r\n}\r\n\r\nexport function angleToPosition(\r\n    angle: AngleWithDescription,\r\n    radius: number,\r\n    svgSize: number\r\n) {\r\n    // js functions need radians, counterclockwise from positive x axis\r\n    const angleConverted = convertAngle(angle.degree, angle, {\r\n        direction: \"ccw\",\r\n        axis: \"+x\",\r\n    });\r\n    const angleInRad = (angleConverted / 180) * Math.PI;\r\n    let dX: number;\r\n    let dY: number;\r\n\r\n    if (angleInRad <= Math.PI) {\r\n        // we are in the upper two quadrants\r\n        if (angleInRad <= Math.PI / 2) {\r\n            dY = Math.sin(angleInRad) * radius;\r\n            dX = Math.cos(angleInRad) * radius;\r\n        } else {\r\n            dY = Math.sin(Math.PI - angleInRad) * radius;\r\n            dX = Math.cos(Math.PI - angleInRad) * radius * -1;\r\n        }\r\n    } else {\r\n        // we are in the lower two quadrants\r\n        if (angleInRad <= Math.PI * 1.5) {\r\n            dY = Math.sin(angleInRad - Math.PI) * radius * -1;\r\n            dX = Math.cos(angleInRad - Math.PI) * radius * -1;\r\n        } else {\r\n            dY = Math.sin(2 * Math.PI - angleInRad) * radius * -1;\r\n            dX = Math.cos(2 * Math.PI - angleInRad) * radius;\r\n        }\r\n    }\r\n\r\n    // dX and dY are calculated based on having (0, 0) at the center\r\n    // Now, translate dX and dY to svg coordinates, where (0, 0) is at the top left\r\n    const x = dX + svgSize / 2;\r\n    const y = svgSize / 2 - dY;\r\n\r\n    return { x, y };\r\n}\r\n\r\nexport function positionToAngle(\r\n    position: { x: number; y: number },\r\n    svgSize: number,\r\n    angleType: AngleDescription\r\n) {\r\n    const dX = position.x - svgSize / 2;\r\n    const dY = svgSize / 2 - position.y; // position.y increases downwards in svg\r\n    let theta = Math.atan2(dY, dX); // radians, counterclockwise from positive x axis\r\n    if (theta < 0) {\r\n        theta = theta + 2 * Math.PI;\r\n    }\r\n    const degree = (theta / Math.PI) * 180; // degrees, counterclockwise from positive x axis\r\n    return convertAngle(\r\n        degree,\r\n        {\r\n            direction: \"ccw\",\r\n            axis: \"+x\",\r\n        },\r\n        angleType\r\n    );\r\n}\r\n\r\nexport function semiCircle(opts: {\r\n    startAngle: number;\r\n    endAngle: number;\r\n    angleType: AngleDescription;\r\n    radius: number;\r\n    svgSize: number;\r\n    direction: \"cw\" | \"ccw\";\r\n}) {\r\n    const { startAngle, endAngle, radius, svgSize, direction, angleType } = opts;\r\n    const startPosition = angleToPosition(\r\n        { degree: startAngle, ...angleType },\r\n        radius,\r\n        svgSize\r\n    );\r\n    const endPosition = angleToPosition(\r\n        { degree: endAngle, ...angleType },\r\n        radius,\r\n        svgSize\r\n    );\r\n    return `\r\n    M ${svgSize / 2},${svgSize / 2}\r\n    L ${startPosition.x},${startPosition.y}\r\n    A ${radius} ${radius} 0 ${direction === \"cw\" ? \"1 1\" : \"0 0\"}\r\n      ${endPosition.x} ${endPosition.y}\r\n    Z\r\n  `;\r\n}","import { AngleDescription, angleToPosition } from \"./circularGeometry\";\r\n\r\nfunction getStartAndEndPosition(opts: {\r\n    startAngle: number;\r\n    endAngle: number;\r\n    angleType: AngleDescription;\r\n    radius: number;\r\n    svgSize: number;\r\n}) {\r\n    const { startAngle, endAngle, radius, svgSize, angleType } = opts;\r\n\r\n    let isCircle = false;\r\n    if (startAngle !== endAngle && startAngle % 360 === endAngle % 360) {\r\n        // if it's a full circle, we can't naively draw an arc...\r\n        // https://stackoverflow.com/questions/5737975/circle-drawing-with-svgs-arc-path\r\n        isCircle = true;\r\n    }\r\n\r\n    const startPosition = angleToPosition(\r\n        { degree: startAngle, ...angleType },\r\n        radius,\r\n        svgSize\r\n    );\r\n    const endPosition = angleToPosition(\r\n        { degree: isCircle ? endAngle - 0.001 : endAngle, ...angleType },\r\n        radius,\r\n        svgSize\r\n    );\r\n\r\n    return { startPosition, endPosition, isCircle };\r\n}\r\n\r\nexport function pieShapedPath(opts: {\r\n    startAngle: number;\r\n    endAngle: number;\r\n    angleType: AngleDescription;\r\n    radius: number;\r\n    svgSize: number;\r\n    direction: \"cw\" | \"ccw\";\r\n}) {\r\n    const { radius, svgSize, direction } = opts;\r\n    const { startPosition, endPosition } = getStartAndEndPosition(opts);\r\n    return `\r\n    M ${svgSize / 2},${svgSize / 2}\r\n    L ${startPosition.x},${startPosition.y}\r\n    A ${radius} ${radius} 0 ${direction === \"cw\" ? \"1 1\" : \"0 0\"}\r\n      ${endPosition.x} ${endPosition.y}\r\n    Z\r\n  `;\r\n}\r\n\r\nexport function arcShapedPath(opts: {\r\n    startAngle: number;\r\n    endAngle: number;\r\n    angleType: AngleDescription;\r\n    radius: number;\r\n    svgSize: number;\r\n    direction: \"cw\" | \"ccw\";\r\n}) {\r\n    const { startAngle, endAngle, radius, direction } = opts;\r\n    const { startPosition, endPosition, isCircle } = getStartAndEndPosition(opts);\r\n\r\n    const largeArc = endAngle - startAngle >= 180;\r\n\r\n    return `\r\n      M ${startPosition.x},${startPosition.y}\r\n      A ${radius} ${radius} 0\r\n        ${largeArc ? \"1\" : \"0\"}\r\n        ${direction === \"cw\" ? \"1\" : \"0\"}\r\n        ${endPosition.x} ${endPosition.y}\r\n        ${isCircle ? \"Z\" : \"\"}\r\n    `;\r\n}\r\n\r\nexport function arcPathWithRoundedEnds(opts: {\r\n    startAngle: number;\r\n    endAngle: number;\r\n    angleType: AngleDescription;\r\n    innerRadius: number;\r\n    thickness: number;\r\n    svgSize: number;\r\n    direction: \"cw\" | \"ccw\";\r\n}) {\r\n    const { startAngle, innerRadius, thickness, direction, angleType, svgSize } =\r\n        opts;\r\n    let { endAngle } = opts;\r\n\r\n    if (startAngle % 360 === endAngle % 360 && startAngle !== endAngle) {\r\n        // Drawing a full circle, slightly offset end angle\r\n        // https://stackoverflow.com/questions/5737975/circle-drawing-with-svgs-arc-path\r\n        endAngle = endAngle - 0.001;\r\n    }\r\n    const largeArc = endAngle - startAngle >= 180;\r\n    const outerRadius = innerRadius + thickness;\r\n\r\n    const innerArcStart = angleToPosition(\r\n        { degree: startAngle, ...angleType },\r\n        innerRadius,\r\n        svgSize\r\n    );\r\n    const startPoint = `\r\n    M ${innerArcStart.x},${innerArcStart.y}\r\n  `;\r\n\r\n    const innerArcEnd = angleToPosition(\r\n        { degree: endAngle, ...angleType },\r\n        innerRadius,\r\n        svgSize\r\n    );\r\n    const innerArc = `\r\n    A ${innerRadius} ${innerRadius} 0\r\n      ${largeArc ? \"1\" : \"0\"}\r\n      ${direction === \"cw\" ? \"1\" : \"0\"}\r\n      ${innerArcEnd.x} ${innerArcEnd.y}\r\n  `;\r\n\r\n    const outerArcStart = angleToPosition(\r\n        { degree: endAngle, ...angleType },\r\n        outerRadius,\r\n        svgSize\r\n    );\r\n    const firstButt = `\r\n    A ${thickness / 2} ${thickness / 2} 0\r\n      ${largeArc ? \"1\" : \"0\"}\r\n      ${direction === \"cw\" ? \"0\" : \"1\"}\r\n      ${outerArcStart.x} ${outerArcStart.y}\r\n  `;\r\n\r\n    const outerArcEnd = angleToPosition(\r\n        { degree: startAngle, ...angleType },\r\n        outerRadius,\r\n        svgSize\r\n    );\r\n    const outerArc = `\r\n    A ${outerRadius} ${outerRadius} 0\r\n      ${largeArc ? \"1\" : \"0\"}\r\n      ${direction === \"cw\" ? \"0\" : \"1\"}\r\n      ${outerArcEnd.x} ${outerArcEnd.y}\r\n  `;\r\n\r\n    const secondButt = `\r\n    A ${thickness / 2} ${thickness / 2} 0\r\n      ${largeArc ? \"1\" : \"0\"}\r\n      ${direction === \"cw\" ? \"0\" : \"1\"}\r\n      ${innerArcStart.x} ${innerArcStart.y}\r\n  `;\r\n\r\n    return startPoint + innerArc + firstButt + outerArc + secondButt + \" Z\";\r\n}\r\n\r\n\r\nexport function arcPathWithTriangleEnd(opts: {\r\n    startAngle: number;\r\n    endAngle: number;\r\n    angleType: AngleDescription;\r\n    innerRadius: number;\r\n    thickness: number;\r\n    svgSize: number;\r\n    direction: \"cw\" | \"ccw\";\r\n}) {\r\n    const { startAngle, innerRadius, thickness, direction, angleType, svgSize } =\r\n        opts;\r\n    let { endAngle } = opts;\r\n\r\n    if (startAngle % 360 === endAngle % 360 && startAngle !== endAngle) {\r\n        // Drawing a full circle, slightly offset end angle\r\n        // https://stackoverflow.com/questions/5737975/circle-drawing-with-svgs-arc-path\r\n        endAngle = endAngle - 0.001;\r\n    }\r\n    const largeArc = endAngle - startAngle >= 180;\r\n    const outerRadius = innerRadius + thickness;\r\n\r\n    const innerArcStart = angleToPosition(\r\n        { degree: startAngle, ...angleType },\r\n        innerRadius,\r\n        svgSize\r\n    );\r\n\r\n    const innerArcEnd = angleToPosition(\r\n        { degree: endAngle, ...angleType },\r\n        innerRadius,\r\n        svgSize\r\n    );\r\n\r\n    const triangleEnd = `\r\n    L ${innerArcEnd.x},${innerArcEnd.y}  // Line to the end point of the arc\r\n    L ${innerArcEnd.x - 5},${innerArcEnd.y + 10}  // Line to a point of the triangle\r\n    L ${innerArcEnd.x + 5},${innerArcEnd.y + 10}  // Line to another point of the triangle\r\n    Z  // Close the path to complete the triangle\r\n  `;\r\n\r\n    return `\r\n    M ${innerArcStart.x},${innerArcStart.y}\r\n    A ${innerRadius} ${innerRadius} 0\r\n      ${largeArc ? \"1\" : \"0\"}\r\n      ${direction === \"cw\" ? \"1\" : \"0\"}\r\n      ${innerArcEnd.x} ${innerArcEnd.y}\r\n    ${triangleEnd}\r\n  `;\r\n}\r\n","import * as React from \"react\";\r\nimport {AngleDescription, angleToPosition, angleToValue, positionToAngle, valueToAngle} from \"./circularGeometry\";\r\nimport {arcPathWithRoundedEnds} from \"./svgPaths\";\r\nimport Svg, {Circle, Line, Path, Polygon, Text} from \"react-native-svg\";\r\nimport {Platform} from \"react-native\";\r\n\r\n\r\ntype HandleProps = {\r\n    value: number;\r\n    onChange: (value: number) => void;\r\n    handleSize?: number;\r\n    handleMode?: \"circle\" | \"triangle\"\r\n}\r\n\r\n\r\ntype CircularSliderProps = {\r\n    dialDiameter?: number;\r\n    strokeWidth?: number;\r\n    minValue?: number;\r\n    maxValue?: number;\r\n    startAngle?: number; // 0 - 360 degrees\r\n    endAngle?: number; // 0 - 360 degrees\r\n    angleType: AngleDescription;\r\n    handleSize?: number;\r\n    value: number;\r\n    onChange: (value: number) => void;\r\n    handle2?: HandleProps;\r\n    onControlFinished?: () => void;\r\n    disabled?: boolean;\r\n    arcColor?: string;\r\n    arcWidth?: number,\r\n    strokeColor?: string;\r\n    coerceToInt?: boolean;\r\n    btnRadius?: number;\r\n    handleColor?: string;\r\n    meterText?: string;\r\n    meterTextColor?: string;\r\n    meterTextSize?: number;\r\n    handleMode?: \"circle\" | \"triangle\"\r\n};\r\n\r\n\r\nexport default function CircularSliderNative({...props}: CircularSliderProps) {\r\n\r\n    const {\r\n        dialDiameter = 200,\r\n        strokeWidth = 4,\r\n        value,\r\n        onChange,\r\n        handle2,\r\n        handleSize = 8,\r\n        maxValue = 0,\r\n        minValue = 360,\r\n        startAngle = 0,\r\n        endAngle = 360,\r\n        angleType = {\r\n            direction: \"cw\",\r\n            axis: \"-y\",\r\n        },\r\n        disabled,\r\n        arcColor = \"#0cd\",\r\n        strokeColor = \"#aaa\",\r\n        handleMode = 'triangle',\r\n        handleColor = \"#0cd\",\r\n        arcWidth = 10,\r\n        meterText = \"None\",\r\n        meterTextColor = \"#0cd\",\r\n        meterTextSize = 10,\r\n        coerceToInt = false,\r\n        onControlFinished\r\n    } = props;\r\n\r\n    // const svgRef = useRef<SVGSVGElement | null>(null)\r\n    // const viewRef = useRef<View | null>(null)\r\n\r\n    const onTouch = (ev: React.TouchEvent<Svg>) => {\r\n        /* This is a very simplistic touch handler. Some optimzations might be:\r\n            - Right now, the bounding box for a touch is the entire element. Having the bounding box\r\n              for touched be circular at a fixed distance around the slider would be more intuitive.\r\n            - Similarly, don't set `touchAction: 'none'` in CSS. Instead, call `ev.preventDefault()`\r\n              only when the touch is within X distance from the slider\r\n        */\r\n\r\n        // This simple touch handler can't handle multiple touches. Therefore, bail if there are either:\r\n        // - more than 1 touches currently active\r\n        // - a touchEnd event, but there is still another touch active\r\n        if (!onChange) {\r\n            // Read-only, don't bother doing calculations\r\n            return;\r\n        }\r\n\r\n        const event = ev.nativeEvent\r\n\r\n        if (\r\n            event.touches.length > 1 ||\r\n            (event.type === \"touchend\" && event.touches.length > 0)\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        // Process the new position\r\n\r\n        let x: number, y: number;\r\n\r\n        if (Platform.OS === \"web\") {\r\n            // @ts-ignore  NOTE: this reference aren't in the react-native-svg docs\r\n            const rect = ev.currentTarget.getBoundingClientRect();\r\n            const touch = event.changedTouches[0];\r\n            x = touch.clientX - rect.left;\r\n            y = touch.clientY - rect.top;\r\n\r\n        } else {\r\n            // @ts-ignore  NOTE: this reference aren't in the react-native-svg docs\r\n            x = event.locationX;\r\n            // @ts-ignore  NOTE: this reference aren't in the react-native-svg docs\r\n            y = event.locationY;\r\n        }\r\n\r\n        processSelection(x, y)\r\n\r\n        // If the touch is ending, fire onControlFinished\r\n        if (event.type === \"touchend\" || event.type === \"touchcancel\") {\r\n            if (onControlFinished) {\r\n                onControlFinished();\r\n            }\r\n        }\r\n    };\r\n\r\n    const processSelection = (x: number, y: number) => {\r\n\r\n        const coordsInSvg = {x: x, y: y}\r\n        const angle = positionToAngle(coordsInSvg, dialDiameter, angleType);\r\n\r\n        let _value = angleToValue({\r\n            angle,\r\n            minValue,\r\n            maxValue,\r\n            startAngle,\r\n            endAngle,\r\n        });\r\n        if (coerceToInt) {\r\n            _value = Math.round(_value);\r\n        }\r\n\r\n        if (!disabled) {\r\n            if (\r\n                handle2 &&\r\n                handle2.onChange &&\r\n                // make sure we're closer to handle 2 -- i.e. controlling handle2\r\n                Math.abs(_value - handle2.value) < Math.abs(_value - value)\r\n            ) {\r\n                handle2.onChange(_value);\r\n            } else {\r\n                onChange(_value);\r\n            }\r\n        }\r\n    }\r\n\r\n    const trackInnerRadius = dialDiameter / 2 - strokeWidth;\r\n    const handleAngle = valueToAngle({\r\n        value: value,\r\n        minValue,\r\n        maxValue,\r\n        startAngle,\r\n        endAngle,\r\n    });\r\n\r\n    const handle2Angle =\r\n        handle2 &&\r\n        valueToAngle({\r\n            value: handle2.value,\r\n            minValue,\r\n            maxValue,\r\n            startAngle,\r\n            endAngle,\r\n        });\r\n\r\n    const handlePosition = angleToPosition(\r\n        {degree: handleAngle, ...angleType},\r\n        trackInnerRadius + strokeWidth / 2,\r\n        dialDiameter\r\n    );\r\n\r\n    const handle2Position =\r\n        handle2Angle &&\r\n        angleToPosition(\r\n            {degree: handle2Angle, ...angleType},\r\n            trackInnerRadius + strokeWidth / 2,\r\n            dialDiameter\r\n        );\r\n\r\n    const controllable = !disabled && Boolean(onChange);\r\n\r\n    const createHandle = (handlePosition) => {\r\n        const triangleRotation = value * step + 180\r\n\r\n        if (handleMode === \"triangle\") {\r\n            return (\r\n                <Polygon\r\n                    points={`${handlePosition.x},${handlePosition.y - handleSize} \r\n             ${handlePosition.x - handleSize},${handlePosition.y + handleSize} \r\n             ${handlePosition.x + handleSize},${handlePosition.y + handleSize}`}\r\n                    fill={handleColor}\r\n                    transform={`rotate(${triangleRotation} ${handlePosition.x} ${handlePosition.y})`}\r\n                />\r\n            )\r\n        } else {\r\n            return (\r\n                <Circle\r\n                    r={handleSize}\r\n                    cx={handlePosition.x}\r\n                    cy={handlePosition.y}\r\n                    fill={handleColor}\r\n                />\r\n            )\r\n        }\r\n    }\r\n\r\n    const step = (endAngle - startAngle) / (maxValue - minValue)\r\n    const stepRad = ((step <= 36 ? step : step / 10) * Math.PI) / 180\r\n    const numX = dialDiameter / 2\r\n    const numY = numX + strokeWidth / 4\r\n    // const numR = numX - strokeWidth * 5/2\r\n    const numbers = []\r\n    for (let i = endAngle; i > startAngle; i -= step) {\r\n        numbers.push(Math.round(i / step))\r\n    }\r\n\r\n    const svgRootProps: any = {\r\n        width: dialDiameter,\r\n        height: dialDiameter,\r\n        onClick: (ev) => controllable && ev.stopPropagation(),\r\n\r\n        onTouchStart: onTouch,\r\n        onTouchEnd: onTouch,\r\n        onTouchMove: onTouch,\r\n        onTouchCancel: onTouch,\r\n\r\n        style: {touchAction: \"none\"}\r\n    }\r\n\r\n    const meterTextProps: any = {\r\n        x: dialDiameter / 2,\r\n        y: dialDiameter / 2 + 10,\r\n        fontSize: meterTextSize,\r\n        fill: meterTextColor,\r\n        textAnchor: \"middle\"\r\n    }\r\n\r\n    const pathProps: any = {\r\n        svgSize: dialDiameter,\r\n        direction: angleType.direction,\r\n        angleType: angleType,\r\n    }\r\n\r\n    const arcBackgroundProps: any = {\r\n        innerRadius: trackInnerRadius,\r\n        thickness: strokeWidth,\r\n        ...pathProps\r\n    }\r\n\r\n    const arcProps: any = {\r\n        innerRadius: (trackInnerRadius + strokeWidth / 2 - arcWidth / 2),\r\n        thickness: arcWidth,\r\n        ...pathProps\r\n    }\r\n\r\n    const numbersProps = (value: number): any => {\r\n        const sin = Math.sin(value * stepRad)\r\n        const cos = Math.cos(value * stepRad)\r\n        return ({\r\n            key: value,\r\n            x: numX + (trackInnerRadius - strokeWidth / 2) * sin,\r\n            y: numY - (trackInnerRadius - strokeWidth / 2) * cos,\r\n            fontSize: 12,\r\n            fill: handleColor,\r\n            textAnchor: \"middle\"\r\n        })\r\n    }\r\n\r\n    const ticksProps = (value: number): any => {\r\n        const sin = Math.sin(value * stepRad)\r\n        const cos = Math.cos(value * stepRad)\r\n        return ({\r\n            key: `ticks${value}`,\r\n            x1: numX + (trackInnerRadius + 2 / 3 * strokeWidth) * sin,\r\n            y1: numX - (trackInnerRadius + 2 / 3 * strokeWidth) * cos,\r\n            x2: numX + (trackInnerRadius + strokeWidth) * sin,\r\n            y2: numX - (trackInnerRadius + strokeWidth) * cos,\r\n            stroke: handleColor,\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Svg {...svgRootProps} >\r\n            {handle2Angle === undefined ? (\r\n                /* One-handle mode */\r\n                <React.Fragment>\r\n                    {/* Arc Background  */}\r\n                    <Path\r\n                        d={arcPathWithRoundedEnds({\r\n                            startAngle: handleAngle,\r\n                            endAngle,\r\n                            ...arcBackgroundProps\r\n                        })}\r\n                        fill={strokeColor}\r\n                    />\r\n                    {/* Arc (render after background so it overlays it) */}\r\n                    <Path\r\n                        d={arcPathWithRoundedEnds({\r\n                            startAngle,\r\n                            endAngle: handleAngle,\r\n                            ...arcProps\r\n                        })}\r\n                        fill={arcColor}\r\n                    />\r\n                </React.Fragment>\r\n            ) : (\r\n                /* Two-handle mode */\r\n                <React.Fragment>\r\n                    {/* Arc Background Part 1  */}\r\n                    <Path\r\n                        d={arcPathWithRoundedEnds({\r\n                            startAngle,\r\n                            endAngle: handleAngle,\r\n                            ...arcBackgroundProps\r\n                        })}\r\n                        fill={strokeColor}\r\n                    />\r\n                    {/* Arc Background Part 2  */}\r\n                    <Path\r\n                        d={arcPathWithRoundedEnds({\r\n                            startAngle: handle2Angle,\r\n                            endAngle,\r\n                            ...arcBackgroundProps\r\n                        })}\r\n                        fill={strokeColor}\r\n                    />\r\n                    {/* Arc (render after background so it overlays it) */}\r\n                    <Path\r\n                        d={arcPathWithRoundedEnds({\r\n                            startAngle: handleAngle,\r\n                            endAngle: handle2Angle,\r\n                            ...arcProps\r\n                        })}\r\n                        fill={arcColor}\r\n                    />\r\n                </React.Fragment>\r\n            )}\r\n\r\n            <Text {...meterTextProps}>{meterText}</Text>\r\n            {numbers.map(value => <Line {...ticksProps(value)} />)}\r\n            {numbers.map(value => <Text {...numbersProps(value)}>{value}</Text>)}\r\n            {controllable && <React.Fragment>{createHandle(handlePosition)}</React.Fragment>}\r\n            {handle2Position && <React.Fragment>{createHandle(handle2Position)}</React.Fragment>}\r\n        </Svg>\r\n    )\r\n}","import {useTheme} from \"react-native-paper\";\r\nimport React from \"react\";\r\nimport {View} from \"react-native\";\r\nimport {Platform} from \"react-native\";\r\nimport CircularSliderNative from \"../circular-slider/CircularSliderNative\";\r\n\r\n\r\nexport default function WindDirection({value, onChange}) {\r\n    const theme = useTheme()\r\n\r\n    const styles = {\r\n        container: {\r\n            // flex: 1,\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            paddingBottom: 40,\r\n        },\r\n        text: {\r\n            marginTop: -110,\r\n            fontWeight: \"bold\",\r\n            fontSize: 16,\r\n            textAlign: \"center\"\r\n        },\r\n        slider: {\r\n            padding: 5\r\n        },\r\n    }\r\n\r\n    const sliderProps = {\r\n        coerceToInt: true,\r\n        capMode: \"triangle\",\r\n\r\n        handleSize: 10,\r\n        arcWidth: 20,\r\n        strokeWidth: 20,\r\n        meterTextSize: 20,\r\n\r\n        handleColor: theme.colors.outline,\r\n        arcColor: theme.colors.secondaryContainer,\r\n        strokeColor: theme.colors.secondaryContainer,\r\n        meterTextColor: theme.colors.outline,\r\n    }\r\n\r\n    const sliderValues = {\r\n        minValue: 0,\r\n        maxValue: 12,\r\n        meterText: `${value * 30}° (${value}h)`\r\n    }\r\n\r\n    const sliderValueHandler = {\r\n        value: value,\r\n        onChange: onChange\r\n    }\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <CircularSliderNative\r\n                {...sliderValueHandler}\r\n                {...sliderProps}\r\n                {...sliderValues}\r\n                style={styles.slider}\r\n                dialDiameter={240}\r\n                angleType={{\r\n                    direction: \"cw\",\r\n                    axis: \"+y\"\r\n                }}\r\n            />\r\n        </View>\r\n    )\r\n}","import {Text} from \"react-native-paper\";\r\nimport {Col, Grid, Row} from \"react-native-paper-grid\";\r\nimport React, {useState} from \"react\";\r\nimport InputCard from \"./InputCard\";\r\nimport styleSheet from \"../../styles\";\r\nimport {SimpleDialog} from \"../dialogs\";\r\nimport {Unit, UnitProps} from \"js-ballistics\";\r\nimport WindDirectionPicker from \"../wind-dir-picker/WindDirPicker\";\r\nimport MeasureSliderModal from \"../measure-slider-modal/MeasureSliderModal\";\r\n\r\n\r\nexport default function WindCard() {\r\n\r\n    const fields = [\r\n        {\r\n            key: \"windSpeed\",\r\n            label: \"Wind speed\",\r\n            suffix: UnitProps[Unit.MPS].symbol,\r\n            icon: \"windsock\",\r\n            mode: \"float\" as const,\r\n            initialValue: 0,\r\n            maxValue: 100,\r\n            minValue: 0,\r\n            decimals: 1,\r\n        }\r\n    ]\r\n\r\n    const [curWindDir, setCurWindDir] = useState(0)\r\n    const [windDir, setWindDir] = useState(curWindDir / 30)\r\n\r\n    const onWindDirChange = (value) => {\r\n        setWindDir(value === 12 ? 0 : value)\r\n    }\r\n\r\n    const onWindAccept = () => {\r\n        setCurWindDir(windDir * 30)\r\n    }\r\n\r\n    const onWindDecline = () => {\r\n        setWindDir(curWindDir / 30)\r\n    }\r\n\r\n    const getWindIcon = () => {\r\n        switch (curWindDir / 30) {\r\n            case 12:\r\n                return \"clock-time-twelve-outline\";\r\n            case 11:\r\n                return \"clock-time-eleven-outline\";\r\n            case 10:\r\n                return \"clock-time-ten-outline\";\r\n            case 9:\r\n                return \"clock-time-nine-outline\";\r\n            case 8:\r\n                return \"clock-time-eight-outline\";\r\n            case 7:\r\n                return \"clock-time-seven-outline\";\r\n            case 6:\r\n                return \"clock-time-six-outline\";\r\n            case 5:\r\n                return \"clock-time-five-outline\";\r\n            case 4:\r\n                return \"clock-time-four-outline\";\r\n            case 3:\r\n                return \"clock-time-three-outline\";\r\n            case 2:\r\n                return \"clock-time-two-outline\";\r\n            case 1:\r\n                return \"clock-time-one-outline\";\r\n            case 0:\r\n                return \"clock-time-twelve-outline\";\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <InputCard title={\"Current wind\"}>\r\n            <Grid style={styleSheet.grid.grid}>\r\n                {fields.map(field => <MeasureSliderModal key={field.key} field={field}/>)}\r\n\r\n\r\n                <Row style={styleSheet.grid.row}>\r\n                    <Col>\r\n                        <Text style={{fontSize: 16}}>{\"Wind direction\"}</Text>\r\n                    </Col>\r\n                    <Col>\r\n                        <SimpleDialog label={`Wind direction, degree`}\r\n                                      text={`${curWindDir}° (${curWindDir / 30}h)`}\r\n                                      icon={getWindIcon()}\r\n                                      onAccept={onWindAccept}\r\n                                      onDecline={onWindDecline}>\r\n                            <WindDirectionPicker\r\n                                value={windDir}\r\n                                onChange={onWindDirChange}/>\r\n                        </SimpleDialog>\r\n                    </Col>\r\n                </Row>\r\n\r\n                {/*<Row>*/}\r\n                {/*    <Col>*/}\r\n                {/*        <Text>{\"Wind direction\"}</Text>*/}\r\n                {/*    </Col>*/}\r\n\r\n                {/*    <Col>*/}\r\n                {/*        <CircularSlider.tsx*/}\r\n                {/*            size={200}*/}\r\n                {/*            trackWidth={8}*/}\r\n                {/*            minValue={0}*/}\r\n                {/*            maxValue={12}*/}\r\n                {/*            startAngle={0}*/}\r\n                {/*            endAngle={360}*/}\r\n                {/*            angleType={{direction: \"cw\", axis: \"+y\"}}*/}\r\n                {/*            handleSize={10}*/}\r\n                {/*            handle1={{*/}\r\n                {/*                value: 50,*/}\r\n                {/*                onChange: () => {},*/}\r\n                {/*            }}*/}\r\n                {/*            arcBackgroundColor={\"white\"}*/}\r\n                {/*            arcColor={\"black\"}*/}\r\n                {/*            capMode={\"triangle\"}*/}\r\n                {/*        />*/}\r\n\r\n                {/*    </Col>*/}\r\n                {/*</Row>*/}\r\n\r\n            </Grid>\r\n        </InputCard>\r\n    )\r\n}","import React from \"react\";\r\nimport {ScrollView} from 'react-native';\r\nimport {useTheme} from 'react-native-paper';\r\nimport {StyleSheet} from \"react-native\";\r\nimport {WeaponCard} from \"../../components/cards\";\r\nimport TabsCard from \"../../components/cards/TabsCard\";\r\n\r\n\r\nexport default function HomeScreen({navigation}) {\r\n\r\n    const theme = useTheme();\r\n\r\n    const styles = StyleSheet.create({\r\n        scrollViewContainer: {\r\n            backgroundColor: theme.colors.background,\r\n            // height: Dimensions.get('window').height * 0.8, // Set the height as a percentage of the screen height\r\n            // marginBottom: 80\r\n        },\r\n    });\r\n\r\n    return (\r\n       <>\r\n            <ScrollView\r\n                style={styles.scrollViewContainer}\r\n                keyboardShouldPersistTaps=\"always\"\r\n                alwaysBounceVertical={false}\r\n                showsVerticalScrollIndicator={true}\r\n            >\r\n                <WeaponCard/>\r\n\r\n                {/*<TabsCard />*/}\r\n            </ScrollView>\r\n            {/*TODO: move fab to screen*/}\r\n            {/*<FAB*/}\r\n            {/*    mode=\"flat\"*/}\r\n            {/*    size=\"medium\"*/}\r\n            {/*    icon={\"plus\"}*/}\r\n            {/*    onPress={() => console.log(\"BigFabPressed\")}*/}\r\n            {/*    style={[*/}\r\n            {/*        styleSheet.fab,*/}\r\n            {/*        {bottom: (BOTTOM_APPBAR_HEIGHT - MEDIUM_FAB_HEIGHT) / 2},*/}\r\n            {/*    ]}*/}\r\n            {/*/>*/}\r\n        </>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport {ScrollView} from 'react-native';\r\nimport {useTheme} from 'react-native-paper';\r\nimport {StyleSheet} from \"react-native\";\r\nimport {AtmoCard, WindCard} from \"../../components/cards\";\r\n\r\n\r\nexport default function CurrentAtmo({ navigation }) {\r\n\r\n    const theme = useTheme();\r\n\r\n    const styles = StyleSheet.create({\r\n        scrollViewContainer: {\r\n            backgroundColor: theme.colors.background,\r\n        },\r\n    });\r\n\r\n    return (\r\n        <ScrollView\r\n            style={styles.scrollViewContainer}\r\n            keyboardShouldPersistTaps=\"always\"\r\n            alwaysBounceVertical={false}\r\n            showsVerticalScrollIndicator={true}\r\n        >\r\n            <AtmoCard />\r\n            <WindCard />\r\n        </ScrollView>\r\n    );\r\n}\r\n","import {ScrollView} from 'react-native';\r\nimport {useTheme} from 'react-native-paper';\r\nimport {SettingsUnitCard, SettingsGeneralCard} from \"../../components/cards\";\r\n\r\nexport default function SettingsScreen({props}) {\r\n\r\n    const theme = useTheme();\r\n\r\n    const styles = {\r\n        scrollViewContainer: {\r\n            backgroundColor: theme.colors.background,\r\n            // height: Dimensions.get('window').height * 0.8, // Set the height as a percentage of the screen height\r\n            // marginBottom: 80\r\n        },\r\n    }\r\n\r\n    return (\r\n        <ScrollView\r\n            style={styles.scrollViewContainer}\r\n            keyboardShouldPersistTaps=\"always\"\r\n            alwaysBounceVertical={false}\r\n            showsVerticalScrollIndicator={true}\r\n        >\r\n            <SettingsGeneralCard />\r\n            <SettingsUnitCard />\r\n        </ScrollView>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport Placeholder from \"../placeholder/Placeholder\";\r\n\r\n\r\nexport default function Calculate({ navigation }) {\r\n\r\n    return (\r\n        <Placeholder text={\"Calculator\\nnot implemented yet\"}/>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport Placeholder from \"../placeholder/Placeholder\";\r\n\r\n\r\nexport default function Trajectory({ navigation }) {\r\n\r\n    return (\r\n        <Placeholder text={\"Trajectory table\\nnot implemented yet\"}/>\r\n    );\r\n}\r\n","import { createNavigationContainerRef } from '@react-navigation/native';\r\n\r\nexport const navigationRef = createNavigationContainerRef()\r\n\r\nexport function navigate(name: never) {\r\n    if (navigationRef.isReady()) {\r\n        navigationRef.navigate(name);\r\n    }\r\n}\r\n\r\nexport function getCurrentRoute() {\r\n    if (navigationRef.isReady()) {\r\n        return navigationRef.getCurrentRoute();\r\n    }\r\n    return null;\r\n}\r\n","\r\n\r\n\r\nimport React from 'react';\r\nimport {NavigationContainer} from '@react-navigation/native';\r\nimport {createNativeStackNavigator} from '@react-navigation/native-stack';\r\n\r\nimport {TopAppBar, BotAppBar} from \"./components/app-bars\";\r\nimport {HomeScreen, CurrentAtmo, SettingsScreen, Calculate, Trajectory} from \"./screens\";\r\n\r\nimport {navigationRef} from \"./RootNavigation\";\r\n\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\n\r\nexport default function RootScreenManager({...props}) {\r\n\r\n    const {nightMode, toggleNightMode} = props\r\n\r\n    return (\r\n\r\n                <NavigationContainer ref={navigationRef}>\r\n                    <Stack.Navigator\r\n                        initialRouteName=\"Home\"\r\n                        screenOptions={{\r\n                            header: (props) => <TopAppBar {...props}\r\n                                                          params={{nightMode, toggleNightMode}}\r\n                            />,\r\n                        }}\r\n                    >\r\n\r\n                        <Stack.Screen name=\"Home\" component={HomeScreen}/>\r\n                        <Stack.Screen name=\"Atmosphere\" component={CurrentAtmo}/>\r\n                        <Stack.Screen name=\"Calculate\" component={Calculate}/>\r\n                        <Stack.Screen name=\"Trajectory\" component={Trajectory}/>\r\n                        <Stack.Screen name=\"Settings\" component={SettingsScreen}/>\r\n\r\n\r\n                    </Stack.Navigator>\r\n                    <BotAppBar/>\r\n\r\n                </NavigationContainer>\r\n\r\n    );\r\n}","import React from 'react';\r\nimport {Platform, Text} from \"react-native\";\r\nimport {useState} from 'react';\r\nimport {StatusBar} from 'expo-status-bar';\r\nimport {PaperProvider, MD3LightTheme, MD3DarkTheme} from 'react-native-paper';\r\nimport {SafeAreaProvider} from 'react-native-safe-area-context';\r\n\r\nimport {NavigationContainer} from '@react-navigation/native';\r\nimport {createNativeStackNavigator} from '@react-navigation/native-stack';\r\n\r\nimport {TopAppBar, BotAppBar} from \"./src/components/app-bars\";\r\nimport {HomeScreen, CurrentAtmo, SettingsScreen, Calculate, Trajectory} from \"./src/screens\";\r\n\r\nimport { isMobile } from 'react-device-detect';\r\n\r\n\r\n\r\nimport {navigationRef} from \"./src/RootNavigation\";\r\nimport Placeholder from \"./src/screens/placeholder/Placeholder\";\r\nimport RootScreenManager from \"./src/RootScreenManager\";\r\n\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\n\r\nexport default function App() {\r\n\r\n    const [nightMode, setNightmode] = useState(true);\r\n    const theme = nightMode ? MD3DarkTheme : MD3LightTheme\r\n\r\n    const toggleNightMode = () => {\r\n        setNightmode((prevNightMode) => !prevNightMode);\r\n    };\r\n\r\n    const styles = {\r\n        provider: {\r\n            flex: 1,\r\n            backgroundColor: theme.colors.background  // Theme Background Color\r\n        },\r\n    }\r\n\r\n    // TODO: make a design for browsers\r\n    if ((Platform.OS === \"web\") && (!isMobile)) {\r\n        return <Placeholder text={\"Oops! The app supports only mobile view\"}></Placeholder>\r\n    }\r\n\r\n    return (\r\n        <SafeAreaProvider style={styles.provider}>\r\n            <PaperProvider theme={theme}>\r\n\r\n                <RootScreenManager nightMode={nightMode} toggleNightMode={toggleNightMode}/>\r\n\r\n                {/*<NavigationContainer ref={navigationRef}>*/}\r\n                {/*    <Stack.Navigator*/}\r\n                {/*        initialRouteName=\"Home\"*/}\r\n                {/*        screenOptions={{*/}\r\n                {/*            header: (props) => <TopAppBar {...props}*/}\r\n                {/*                                          params={{nightMode, toggleNightMode}}*/}\r\n                {/*            />,*/}\r\n                {/*        }}*/}\r\n                {/*    >*/}\r\n\r\n                {/*        <Stack.Screen name=\"Home\" component={HomeScreen}/>*/}\r\n                {/*        <Stack.Screen name=\"Atmosphere\" component={CurrentAtmo}/>*/}\r\n                {/*        <Stack.Screen name=\"Calculate\" component={Calculate}/>*/}\r\n                {/*        <Stack.Screen name=\"Trajectory\" component={Trajectory}/>*/}\r\n                {/*        <Stack.Screen name=\"Settings\" component={SettingsScreen}/>*/}\r\n\r\n\r\n                {/*    </Stack.Navigator>*/}\r\n                {/*    <BotAppBar/>*/}\r\n\r\n                {/*</NavigationContainer>*/}\r\n\r\n\r\n                <StatusBar style=\"auto\"/>\r\n            </PaperProvider>\r\n        </SafeAreaProvider>\r\n    );\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/ebalistyka/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [108], () => (__webpack_require__(6271)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["Placeholder","_ref","text","theme","useTheme","styles","StyleSheet","create","scrollViewContainer","backgroundColor","colors","background","_jsx","ScrollView","style","keyboardShouldPersistTaps","alwaysBounceVertical","showsVerticalScrollIndicator","contentContainerStyle","flex","justifyContent","children","Text","textAlign","grid","row","flexDirection","alignItems","col","card","margin","padding","content","marginHorizontal","paddingHorizontal","bottomBar","position","left","right","bottom","fab","chip","measure","display","measure_text","modal","simple","container","alignSelf","title","marginBottom","numberPicker","selectedIndicator","width","borderRadius","top","useSafeAreaInsets","navigation","useNavigation","_useState","useState","_useState2","_slicedToArray","currentRoute","setCurrentRoute","useEffect","addListener","_navigation$getCurren","currentRouteName","getCurrentRoute","name","_jsxs","Appbar","elevated","styleSheet","height","elevation","level2","safeAreaInsets","Action","icon","onPress","navigate","FAB","mode","size","MORE_ICON","Platform","OS","TopAppBar","props","Object","assign","_objectDestructuringEmpty","route","options","back","params","nightMode","toggleNightMode","getHeaderTitle","Header","BackAction","goBack","Content","Card","Title","titleVariant","label","_ref$icon","_ref$onAccept","onAccept","_ref$onDecline","onDecline","_React$useState","React","_React$useState2","visible","setVisible","showDialog","View","Chip","closeIcon","textStyle","fontSize","onClose","Portal","Dialog","onDismiss","Actions","variant","color","tertiary","scrollView","overflow","option","zIndex","index","visibleRest","currentScrollIndex","opacityFunction","rotationFunction","scaleFunction","relativeScrollIndex","Animated","subtract","translateY","interpolate","inputRange","range","i","unshift","push","outputRange","y","Math","sin","PI","j","opacity","x","scale","rotateX","transform","selectedIndex","onChange","_ref$selectedIndicato","selectedIndicatorStyle","_ref$containerStyle","containerStyle","_ref$itemStyle","itemStyle","_ref$itemTextStyle","itemTextStyle","_ref$itemHeight","itemHeight","_ref$scaleFunction","_ref$rotationFunction","pow","_ref$opacityFunction","_ref$visibleRest","_ref$decelerationRate","decelerationRate","_ref$containerProps","containerProps","_ref$flatListProps","flatListProps","flatListRef","useRef","Value","scrollY","lastScrollTimestamp","Date","getTime","containerHeight","_useState3","_useState4","scrollIndex","setScrollIndex","paddedOptions","useMemo","array","_toConsumableArray","offsets","Array","length","map","add","divide","Error","_flatListRef$current","current","scrollToIndex","animated","intervalID","setInterval","_flatListRef$current2","clearInterval","_objectSpread","FlatList","ref","onScroll","event","nativeEvent","contentOffset","useNativeDriver","listener","positionY","round","handleScroll","onMomentumScrollEnd","offsetY","min","max","floor","snapToOffsets","initialScrollIndex","getItemLayout","data","offset","keyExtractor","item","toString","renderItem","_ref2","WheelPickerItem","IntegerWheelPicker","curValue","minValue","maxValue","wheelProps","intRange","WheelPicker","indexOf","DecimalWheelPicker","decimals","decimalFormat","value","toFixed","slice","decimalStep","decimalsOptions","list","createDecimalOptions","parseFloat","FloatPicker","_ref3","onSecondary","secondary","fontWeight","secondaryContainer","marginTop","intWheelProps","borderTopLeftRadius","borderBottomLeftRadius","marginLeft","marginRight","paddingRight","decimalWheelProps","borderTopRightRadius","borderBottomRightRadius","paddingLeft","int","setInt","decimal","setDecimal","onValueChange","IntPicker","MeasureSliderModal","field","initialValue","setCurValue","setValue","pickerProps","picker","Row","Col","SimpleDialog","suffix","AtmoCard","fields","key","UnitProps","Unit","Celsius","symbol","MmHg","Meter","InputCard","Grid","RadioGroup","items","RadioButton","Group","Item","ScrollArea","SettingsGeneralCard","curLanguage","setCurLanguage","language","setLanguage","SimpleScrollDialog","get_unit_list","keys","Foot","Yard","def","MPS","FPS","Measure","Angular","Degree","Inch","Millimeter","Centimeter","Line","Weight","Grain","Fahrenheit","Pressure","PSI","Energy","Joule","MIL","SettingsUnitCard","UnitSelector","WeaponCard","twistStates","showSelectedCheck","checkedColor","primary","curTwistDir","setCurTwistDir","twistDir","setTwistDir","curName","setCurName","_React$useState3","_React$useState4","setName","TextInput","onChangeText","SegmentedButtons","buttons","valueToAngle","startAngle","endAngle","convertAngle","degree","from","to","direction","axis","angleToPosition","angle","radius","svgSize","dX","dY","angleInRad","cos","arcPathWithRoundedEnds","opts","innerRadius","thickness","angleType","largeArc","outerRadius","innerArcStart","startPoint","innerArcEnd","innerArc","outerArcStart","firstButt","outerArcEnd","CircularSliderNative","_props$dialDiameter","dialDiameter","_props$strokeWidth","strokeWidth","handle2","_props$handleSize","handleSize","_props$maxValue","_props$minValue","_props$startAngle","_props$endAngle","_props$angleType","disabled","_props$arcColor","arcColor","_props$strokeColor","strokeColor","_props$handleMode","handleMode","_props$handleColor","handleColor","_props$arcWidth","arcWidth","_props$meterText","meterText","_props$meterTextColor","meterTextColor","_props$meterTextSize","meterTextSize","_props$coerceToInt","coerceToInt","onControlFinished","onTouch","ev","touches","type","rect","currentTarget","getBoundingClientRect","touch","changedTouches","clientX","clientY","locationX","locationY","processSelection","theta","atan2","positionToAngle","_value","angleToValue","abs","trackInnerRadius","handleAngle","handle2Angle","handlePosition","handle2Position","controllable","Boolean","createHandle","triangleRotation","step","Polygon","points","fill","Circle","r","cx","cy","stepRad","numX","numY","numbers","svgRootProps","onClick","stopPropagation","onTouchStart","onTouchEnd","onTouchMove","onTouchCancel","touchAction","meterTextProps","textAnchor","pathProps","arcBackgroundProps","arcProps","Svg","undefined","Path","d","x1","y1","x2","y2","stroke","ticksProps","numbersProps","WindDirection","paddingBottom","slider","sliderProps","capMode","outline","sliderValues","sliderValueHandler","WindCard","curWindDir","setCurWindDir","windDir","setWindDir","getWindIcon","WindDirectionPicker","HomeScreen","_Fragment","CurrentAtmo","SettingsScreen","Calculate","Trajectory","navigationRef","createNavigationContainerRef","Stack","createNativeStackNavigator","RootScreenManager","NavigationContainer","Navigator","initialRouteName","screenOptions","header","Screen","component","BotAppBar","App","setNightmode","MD3DarkTheme","MD3LightTheme","provider","isMobile","SafeAreaProvider","PaperProvider","prevNightMode","StatusBar","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","amdO","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","every","splice","n","getter","__esModule","a","definition","o","defineProperty","enumerable","get","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","id","chunkLoadingGlobal","self","forEach","bind","__webpack_exports__"],"sourceRoot":""}