{"version":3,"file":"static/js/main.3893d05d.js","mappings":"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","sources":["src/styles/stylesheet.ts","src/styles/index.ts","src/components/app-bars/BotAppBar.tsx","src/components/app-bars/TopAppBar.tsx","src/components/cards/InputCard.tsx","src/components/dialogs/SimpleDialog.tsx","src/components/wheely/WheelPicker.styles.ts","src/components/wheely/WheelPickerItem.tsx","src/components/wheely/WheelPicker.tsx","src/components/wheely/index.ts","src/components/number-slider/FloatPicker.tsx","src/components/number-slider/IntPicker.tsx","src/components/measure-slider-modal/MeasureSliderModal.tsx","src/components/cards/AtmoCard.tsx","src/components/radio-group/RadioGroup.tsx","src/components/dialogs/SimpleScrollDialog.tsx","src/components/cards/SettingsGeneralCard.tsx","src/components/cards/SettingsUnitCard.tsx","src/components/cards/WeaponCard.tsx","src/components/circular-slider/CircleSlider.tsx","src/components/wind-dir-picker/WindDirPicker.tsx","src/components/cards/WindCard.tsx","src/screens/placeholder/Placeholder.tsx","src/components/cards/TabsCard.tsx","src/screens/home/HomeScreen.tsx","src/screens/atmo/CurrentAtmo.tsx","src/screens/settings/SettingsScreen.tsx","src/screens/calculate/Calculate.tsx","src/screens/trajectory/Trajectory.tsx","src/RootNavigation.tsx","App.tsx","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["const styleSheet = {\r\n    grid: {\r\n        grid: {\r\n            flex: 1,\r\n        },\r\n        row: {\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n        },\r\n        col: {\r\n            flex: 1,\r\n        },\r\n    },\r\n    card: {\r\n        card: {\r\n            margin: 15,\r\n            padding: 10\r\n        },\r\n        content: {\r\n            marginHorizontal: 0,\r\n            paddingHorizontal: 10\r\n        },\r\n    },\r\n    bottomBar: {\r\n        backgroundColor: 'aquamarine',\r\n        position: 'absolute',\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n    },\r\n    fab: {\r\n        position: 'absolute',\r\n        right: 16\r\n    },\r\n    chip: {\r\n        measure: {\r\n            display: \"flex\",\r\n            // marginLeft: \"auto\",\r\n        },\r\n        measure_text: {\r\n            textAlign: \"right\"\r\n        }\r\n    },\r\n    modal: {\r\n        simple: {\r\n            container: {\r\n                display: \"flex\",\r\n                alignSelf: \"center\",\r\n                // minWidth: 280,\r\n                margin: 20,\r\n                padding: 20\r\n            },\r\n            title: {\r\n                textAlign: \"center\",\r\n                marginBottom: 10\r\n            },\r\n        },\r\n    },\r\n    numberPicker: {\r\n        container: {\r\n            position: 'relative',\r\n        },\r\n        selectedIndicator: {\r\n            position: 'absolute',\r\n            width: '100%',\r\n            backgroundColor: 'hsl(200, 8%, 94%)',\r\n            borderRadius: 5,\r\n            top: '50%',\r\n        },\r\n    }\r\n}\r\n\r\nexport default styleSheet;","import styleSheet from \"./stylesheet\";\r\n\r\nexport default styleSheet;","import React, {useEffect, useState} from 'react';\r\nimport {Appbar, FAB, useTheme} from 'react-native-paper';\r\nimport {useSafeAreaInsets} from 'react-native-safe-area-context';\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport styleSheet from \"../../styles\";\r\n\r\n\r\nconst BOTTOM_APPBAR_HEIGHT = 80;\r\nconst MEDIUM_FAB_HEIGHT = 56;\r\n\r\nconst BotAppBar = () => {\r\n    const {bottom} = useSafeAreaInsets();\r\n    const theme = useTheme();\r\n\r\n    const navigation: any = useNavigation()\r\n\r\n    const [currentRoute, setCurrentRoute] = useState('');\r\n    useEffect(() => {\r\n        return navigation.addListener('state', () => {\r\n            const currentRouteName = navigation.getCurrentRoute()?.name || '';\r\n            setCurrentRoute(currentRouteName);\r\n        });\r\n    }, [navigation]);\r\n\r\n    const onFabPress = () => {\r\n        if (!(currentRoute === \"Home\")) {\r\n            navigation.navigate(\"Home\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Appbar\r\n            elevated={true}\r\n            style={[\r\n                styleSheet.bottomBar.position,\r\n                {\r\n                    height: BOTTOM_APPBAR_HEIGHT + bottom,\r\n                    backgroundColor: theme.colors.elevation.level2,\r\n                },\r\n            ]}\r\n            safeAreaInsets={{bottom}}\r\n        >\r\n\r\n            <Appbar.Action icon=\"weather-partly-cloudy\" onPress={() => navigation.navigate(\"Atmosphere\")}/>\r\n            <Appbar.Action icon=\"calculator\" onPress={() => navigation.navigate(\"Calculate\")}/>\r\n            <Appbar.Action icon=\"table-large\" onPress={() => navigation.navigate(\"Trajectory\")}/>\r\n            <Appbar.Action icon=\"cog-outline\" onPress={() => navigation.navigate(\"Settings\")}/>\r\n\r\n            <FAB\r\n                mode=\"flat\"\r\n                size=\"medium\"\r\n                icon={currentRoute === \"Home\" ? \"plus\" : \"home\"}\r\n                onPress={onFabPress}\r\n                style={[\r\n                    styleSheet.fab,\r\n                    {top: (BOTTOM_APPBAR_HEIGHT - MEDIUM_FAB_HEIGHT) / 2},\r\n                ]}\r\n            />\r\n\r\n        </Appbar>\r\n    );\r\n};\r\n\r\n\r\nexport default BotAppBar;","import { Appbar } from 'react-native-paper';\r\nimport { Platform } from 'react-native';\r\nimport { getHeaderTitle } from '@react-navigation/elements';\r\n\r\nconst MORE_ICON = Platform.OS === 'ios' ? 'dots-horizontal' : 'dots-vertical';\r\n\r\n\r\nexport default function TopAppBar({...props}) {\r\n    const {navigation, route, options, back, params} = props;\r\n    const { nightMode, toggleNightMode } = params;\r\n    const title = getHeaderTitle(options, route.name);\r\n\r\n    return (\r\n        <Appbar.Header elevated={true} >\r\n            {back ? <Appbar.BackAction onPress={navigation.goBack} /> : null}\r\n            <Appbar.Content title={title} />\r\n            <Appbar.Action\r\n                icon={nightMode ? \"brightness-7\" : \"brightness-3\"}\r\n                onPress={() => toggleNightMode(!nightMode)}\r\n            />\r\n            {/*{route.name === \"Home\" ? <Appbar.Action icon='cog' onPress={() => navigation.navigate('Settings')} /> : null}*/}\r\n            <Appbar.Action icon={MORE_ICON} onPress={() => { }} />\r\n\r\n\r\n        </Appbar.Header>\r\n    );\r\n\r\n}\r\n","import {Card} from \"react-native-paper\";\r\nimport React from \"react\";\r\nimport styleSheet from \"../../styles\";\r\n\r\n\r\n\r\nconst InputCard = ({children, title}) => {\r\n\r\n    return (\r\n        <Card mode=\"elevated\" elevation={1}\r\n              style={[styleSheet.card.card]}\r\n        >\r\n            <Card.Title titleVariant={\"titleLarge\"} title={title}></Card.Title>\r\n            <Card.Content style={styleSheet.card.content}>\r\n                {children}\r\n            </Card.Content>\r\n        </Card>\r\n    )\r\n}\r\n\r\n\r\nexport default InputCard;","import * as React from 'react';\r\nimport {Portal, Chip, useTheme, Button, Dialog, Text, FAB, Icon} from 'react-native-paper';\r\nimport {View} from \"react-native\";\r\n\r\n\r\nconst SimpleDialog = ({\r\n                         children,\r\n                         title,\r\n                         text,\r\n                         icon = null,\r\n                         onAccept = null,\r\n                         onDecline = null\r\n                     }) => {\r\n\r\n    const [visible, setVisible] = React.useState(false);\r\n\r\n    const showDialog = () => setVisible(true);\r\n    const hideDialog = () => {\r\n        setVisible(false);\r\n    };\r\n\r\n    const onAcceptBtn = () => {\r\n        if (onAccept) onAccept();\r\n        setVisible(false);\r\n    }\r\n\r\n    const onDeclineBtn = () => {\r\n        if (onDecline) onDecline();\r\n        setVisible(false);\r\n    }\r\n\r\n    return (\r\n        <View style={{display: \"flex\", justifyContent: \"center\"}}>\r\n            <Chip icon={icon} closeIcon=\"square-edit-outline\" style={{margin: 0}} textStyle={{fontSize: 16}}\r\n                  onPress={showDialog}\r\n                  onClose={showDialog}\r\n            >\r\n                {text}\r\n            </Chip>\r\n            <Portal>\r\n\r\n                <Dialog visible={visible} onDismiss={hideDialog} style={{justifyContent: \"center\"}}>\r\n                    <Dialog.Title>{title}</Dialog.Title>\r\n\r\n                    <Dialog.Content>{children}</Dialog.Content>\r\n\r\n                    <Dialog.Actions>\r\n                        <FAB icon=\"close\" mode={\"flat\"} size={'small'} onPress={onDeclineBtn}\r\n                             variant={'tertiary'} color={useTheme().colors.tertiary}/>\r\n                        <FAB icon=\"check\" mode={\"flat\"} size={'small'} onPress={onAcceptBtn}/>\r\n                    </Dialog.Actions>\r\n                </Dialog>\r\n\r\n            </Portal>\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default SimpleDialog;","import { StyleSheet } from 'react-native';\r\n\r\nexport default StyleSheet.create({\r\n  container: {\r\n    position: 'relative',\r\n  },\r\n  selectedIndicator: {\r\n    position: 'absolute',\r\n    width: '100%',\r\n    backgroundColor: 'hsl(200, 8%, 94%)',\r\n    borderRadius: 5,\r\n    top: '50%',\r\n  },\r\n  scrollView: {\r\n    overflow: 'hidden',\r\n    flex: 1,\r\n  },\r\n  option: {\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    paddingHorizontal: 16,\r\n    zIndex: 100,\r\n  },\r\n});\r\n","import React from 'react';\r\nimport { StyleProp, TextStyle, Animated, Text, ViewStyle } from 'react-native';\r\nimport styles from './WheelPicker.styles';\r\n\r\ninterface ItemProps {\r\n  textStyle: StyleProp<TextStyle>;\r\n  style: StyleProp<ViewStyle>;\r\n  option: string | null;\r\n  height: number;\r\n  index: number;\r\n  currentScrollIndex: Animated.AnimatedAddition<any>;\r\n  visibleRest: number;\r\n  rotationFunction: (x: number) => number;\r\n  opacityFunction: (x: number) => number;\r\n  scaleFunction: (x: number) => number;\r\n}\r\n\r\nconst WheelPickerItem: React.FC<ItemProps> = ({\r\n  textStyle,\r\n  style,\r\n  height,\r\n  option,\r\n  index,\r\n  visibleRest,\r\n  currentScrollIndex,\r\n  opacityFunction,\r\n  rotationFunction,\r\n  scaleFunction\r\n}) => {\r\n  const relativeScrollIndex = Animated.subtract(index, currentScrollIndex);\r\n\r\n  const translateY = relativeScrollIndex.interpolate({\r\n    inputRange: (() => {\r\n      const range = [0];\r\n      for (let i = 1; i <= visibleRest + 1; i++) {\r\n        range.unshift(-i);\r\n        range.push(i);\r\n      }\r\n      return range;\r\n    })(),\r\n    outputRange: (() => {\r\n      const range = [0];\r\n      for (let i = 1; i <= visibleRest + 1; i++) {\r\n        let y =\r\n          (height / 2) * (1 - Math.sin(Math.PI / 2 - rotationFunction(i)));\r\n        for (let j = 1; j < i; j++) {\r\n          y += height * (1 - Math.sin(Math.PI / 2 - rotationFunction(j)));\r\n        }\r\n        range.unshift(y);\r\n        range.push(-y);\r\n      }\r\n      return range;\r\n    })(),\r\n  });\r\n\r\n  const opacity = relativeScrollIndex.interpolate({\r\n    inputRange: (() => {\r\n      const range = [0];\r\n      for (let i = 1; i <= visibleRest + 1; i++) {\r\n        range.unshift(-i);\r\n        range.push(i);\r\n      }\r\n      return range;\r\n    })(),\r\n    outputRange: (() => {\r\n      const range = [1];\r\n      for (let x = 1; x <= visibleRest + 1; x++) {\r\n        const y = opacityFunction(x);\r\n        range.unshift(y);\r\n        range.push(y);\r\n      }\r\n      return range;\r\n    })(),\r\n  });\r\n\r\n  const scale = relativeScrollIndex.interpolate({\r\n    inputRange: (() => {\r\n      const range = [0];\r\n      for (let i = 1; i <= visibleRest + 1; i++) {\r\n        range.unshift(-i);\r\n        range.push(i);\r\n      }\r\n      return range;\r\n    })(),\r\n    outputRange: (() => {\r\n      const range = [1.0];\r\n      for (let x = 1; x <= visibleRest + 1; x++) {\r\n        const y = scaleFunction(x);\r\n        range.unshift(y);\r\n        range.push(y);\r\n      }\r\n      return range;\r\n    })(),\r\n  });\r\n\r\n  const rotateX = relativeScrollIndex.interpolate({\r\n    inputRange: (() => {\r\n      const range = [0];\r\n      for (let i = 1; i <= visibleRest + 1; i++) {\r\n        range.unshift(-i);\r\n        range.push(i);\r\n      }\r\n      return range;\r\n    })(),\r\n    outputRange: (() => {\r\n      const range = ['0deg'];\r\n      for (let x = 1; x <= visibleRest + 1; x++) {\r\n        const y = rotationFunction(x);\r\n        range.unshift(`${y}deg`);\r\n        range.push(`${y}deg`);\r\n      }\r\n      return range;\r\n    })(),\r\n  });\r\n\r\n  return (\r\n    <Animated.View\r\n      style={[\r\n        styles.option,\r\n        style,\r\n        {  height, opacity, transform: [{ translateY }, { rotateX }, { scale }]},\r\n      ]}\r\n    >\r\n      <Text style={textStyle}>{option}</Text>\r\n    </Animated.View>\r\n  );\r\n};\r\n\r\nexport default React.memo(\r\n  WheelPickerItem,\r\n  /**\r\n   * We enforce that this component will not rerender after the initial render.\r\n   * Therefore props that change on every render like style objects or functions\r\n   * do not need to be wrapped into useMemo and useCallback.\r\n   */\r\n  () => true,\r\n);\r\n","import React, { useEffect, useMemo, useRef, useState } from 'react';\r\nimport {\r\n  StyleProp,\r\n  TextStyle,\r\n  NativeSyntheticEvent,\r\n  NativeScrollEvent,\r\n  Animated,\r\n  ViewStyle,\r\n  View,\r\n  ViewProps,\r\n  FlatListProps,\r\n  FlatList,\r\n  Platform\r\n} from 'react-native';\r\nimport styles from './WheelPicker.styles';\r\nimport WheelPickerItem from './WheelPickerItem';\r\n\r\ninterface Props {\r\n  selectedIndex: number;\r\n  options: string[];\r\n  onChange: (index: number) => void;\r\n  selectedIndicatorStyle?: StyleProp<ViewStyle>;\r\n  itemTextStyle?: TextStyle;\r\n  itemStyle?: ViewStyle;\r\n  itemHeight?: number;\r\n  containerStyle?: ViewStyle;\r\n  containerProps?: Omit<ViewProps, 'style'>;\r\n  scaleFunction?: (x: number) => number;\r\n  rotationFunction?: (x: number) => number;\r\n  opacityFunction?: (x: number) => number;\r\n  visibleRest?: number;\r\n  decelerationRate?: 'normal' | 'fast' | number;\r\n  flatListProps?: Omit<FlatListProps<string | null>, 'data' | 'renderItem'>;\r\n}\r\n\r\nconst WheelPicker: React.FC<Props> = ({\r\n  selectedIndex,\r\n  options,\r\n  onChange,\r\n  selectedIndicatorStyle = {},\r\n  containerStyle = {},\r\n  itemStyle = {},\r\n  itemTextStyle = {},\r\n  itemHeight = 40,\r\n  scaleFunction = (x: number) => 1.0 ** x,\r\n  rotationFunction = (x: number) => 1 - Math.pow(1 / 2, x),\r\n  opacityFunction = (x: number) => Math.pow(1 / 3, x),\r\n  visibleRest = 2,\r\n  decelerationRate = 'fast',\r\n  containerProps = {},\r\n  flatListProps = {},\r\n}) => {\r\n  const flatListRef = useRef<FlatList>(null);\r\n  const [scrollY] = useState(new Animated.Value(0));\r\n\r\n  const lastScrollTimestamp = useRef(new Date().getTime());\r\n\r\n\r\n  const containerHeight = (1 + visibleRest * 2) * itemHeight;\r\n  const [scrollIndex, setScrollIndex] = useState(selectedIndex);\r\n  const paddedOptions = useMemo(() => {\r\n    const array: (string | null)[] = [...options];\r\n    for (let i = 0; i < visibleRest; i++) {\r\n      array.unshift(null);\r\n      array.push(null);\r\n    }\r\n    return array;\r\n  }, [options, visibleRest]);\r\n\r\n  const offsets = useMemo(\r\n    () => [...Array(paddedOptions.length)].map((x, i) => i * itemHeight),\r\n    [paddedOptions, itemHeight],\r\n  );\r\n\r\n  const currentScrollIndex = useMemo(\r\n    () => Animated.add(Animated.divide(scrollY, itemHeight), visibleRest),\r\n    [visibleRest, scrollY, itemHeight],\r\n  );\r\n\r\n  const handleMomentumScrollEnd = (\r\n    event: NativeSyntheticEvent<NativeScrollEvent>,\r\n  ) => {\r\n    // Due to list bounciness when scrolling to the start or the end of the list\r\n    // the offset might be negative or over the last item.\r\n    // We therefore clamp the offset to the supported range.\r\n    const offsetY = Math.min(\r\n      itemHeight * (options.length - 1),\r\n      Math.max(event.nativeEvent.contentOffset.y, 0),\r\n    );\r\n\r\n    let index = Math.floor(Math.floor(offsetY) / itemHeight);\r\n    const last = Math.floor(offsetY % itemHeight);\r\n    if (last > itemHeight / 2) index++;\r\n\r\n    if (index !== selectedIndex) {\r\n      onChange(index);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (selectedIndex < 0 || selectedIndex >= options.length) {\r\n      throw new Error(\r\n        `Selected index ${selectedIndex} is out of bounds [0, ${\r\n          options.length - 1\r\n        }]`,\r\n      );\r\n    }\r\n  }, [selectedIndex, options]);\r\n\r\n  /**\r\n   * If selectedIndex is changed from outside (not via onChange) we need to scroll to the specified index.\r\n   * This ensures that what the user sees as selected in the picker always corresponds to the value state.\r\n   */\r\n  useEffect(() => {\r\n    flatListRef.current?.scrollToIndex({\r\n      index: selectedIndex,\r\n      animated: false,\r\n    });\r\n  }, [selectedIndex]);\r\n\r\n  useEffect(() => {\r\n    if (Platform.OS === 'web') {\r\n      const SCROLL_COOLDOWN_MILLISECONDS = 100;\r\n      const SCROLL_DID_STOP_TIMEOUT = 500;\r\n      const intervalID = setInterval(() => {\r\n        const time = new Date().getTime();\r\n        const difference = time - lastScrollTimestamp.current;\r\n        if (difference > SCROLL_DID_STOP_TIMEOUT) {\r\n          flatListRef.current?.scrollToIndex({\r\n            index: scrollIndex,\r\n            animated: true,\r\n          });\r\n        }\r\n      }, SCROLL_COOLDOWN_MILLISECONDS);\r\n      return () => {\r\n        clearInterval(intervalID);\r\n      };\r\n    }\r\n  }, [scrollIndex]);\r\n\r\n  useEffect(() => {\r\n    if (Platform.OS === 'web') {\r\n      onChange(scrollIndex);\r\n    }\r\n  }, [scrollIndex, onChange]);\r\n\r\n  const handleScroll = (event: NativeSyntheticEvent<any>) => {\r\n    if (Platform.OS === 'web') {\r\n      const positionY = event.nativeEvent.contentOffset.y;\r\n      const index = Math.round(positionY / itemHeight);\r\n      setScrollIndex(index);\r\n      lastScrollTimestamp.current = new Date().getTime();\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <View\r\n      style={[styles.container, { height: containerHeight }, containerStyle]}\r\n      {...containerProps}\r\n    >\r\n      <View\r\n        style={[\r\n          styles.selectedIndicator,\r\n          selectedIndicatorStyle,\r\n          {\r\n            transform: [{ translateY: -itemHeight / 2 }],\r\n            height: itemHeight,\r\n          },\r\n        ]}\r\n      />\r\n      <Animated.FlatList<string | null>\r\n        {...flatListProps}\r\n        ref={flatListRef}\r\n        style={styles.scrollView}\r\n        showsVerticalScrollIndicator={false}\r\n        onScroll={Animated.event(\r\n          [{ nativeEvent: { contentOffset: { y: scrollY } } }],\r\n          {\r\n            useNativeDriver: true,\r\n            listener: (event: NativeSyntheticEvent<any>\r\n            ) => handleScroll(event),\r\n          },\r\n        )}\r\n        onMomentumScrollEnd={handleMomentumScrollEnd}\r\n        snapToOffsets={offsets}\r\n        decelerationRate={decelerationRate}\r\n        initialScrollIndex={selectedIndex}\r\n        getItemLayout={(data, index) => ({\r\n          length: itemHeight,\r\n          offset: itemHeight * index,\r\n          index,\r\n        })}\r\n        data={paddedOptions}\r\n        keyExtractor={(item, index) => index.toString()}\r\n        renderItem={({ item: option, index }) => (\r\n          <WheelPickerItem\r\n            key={`option-${index}`}\r\n            index={index}\r\n            option={option}\r\n            style={itemStyle}\r\n            textStyle={itemTextStyle}\r\n            height={itemHeight}\r\n            currentScrollIndex={currentScrollIndex}\r\n            scaleFunction={scaleFunction}\r\n            rotationFunction={rotationFunction}\r\n            opacityFunction={opacityFunction}\r\n            visibleRest={visibleRest}\r\n          />\r\n        )}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default WheelPicker;\r\n","import WheelPicker from './WheelPicker';\r\n\r\nexport default WheelPicker;","import React, {useState} from 'react';\r\nimport WheelPicker from '../wheely';\r\nimport styleSheet from \"../../styles\";\r\nimport {useTheme} from \"react-native-paper\";\r\nimport {View} from \"react-native\";\r\n\r\n\r\nexport default function FloatPicker({\r\n                                        curValue = 0,\r\n                                        maxValue = 50,\r\n                                        minValue = -50,\r\n                                        decimals = 0,\r\n                                        onChange = null\r\n                                    }) {\r\n    const theme = useTheme()\r\n\r\n    const style = {\r\n        selectedIndicatorStyle: [\r\n            styleSheet.numberPicker.selectedIndicator,\r\n            {borderRadius: 0, backgroundColor: theme.colors.onSecondary}\r\n        ],\r\n\r\n        itemTextStyle: [{color: theme.colors.secondary, fontWeight: \"bold\", fontSize: 24}],\r\n\r\n    }\r\n\r\n    const containerStyle = [\r\n        styleSheet.numberPicker.container,\r\n        {\r\n            backgroundColor: theme.colors.secondaryContainer,\r\n            marginTop: 10\r\n        }\r\n    ]\r\n\r\n    const containerStyleInt = [containerStyle, {borderTopLeftRadius: 24, borderBottomLeftRadius: 24}]\r\n    const containerStyleFloat = [containerStyle, {borderTopRightRadius: 24, borderBottomRightRadius: 24}]\r\n    const itemStyleInt = [{marginLeft: \"auto\", marginRight: 0, paddingRight: 5}]\r\n    const itemStyleFloat = [{marginLeft: 0, marginRight: \"auto\", paddingLeft: 5}]\r\n\r\n    const floatDivider = 10 ** decimals\r\n    const floatFormat = (value: number): string => `.${value}`;\r\n\r\n    const floatRange: number[] = [...Array(floatDivider).keys()]\r\n    const intRange: number[] = []\r\n    for (let i = Math.floor(minValue); i <= Math.floor(maxValue); i++) {\r\n        intRange.push(i)\r\n    }\r\n    const floatRangeStrings: string[] = floatRange.map(floatFormat)\r\n\r\n    const [int, setInt] = useState(Math.floor(curValue))\r\n    const [float, setFloat] = useState(Math.floor((curValue - int) * floatDivider))\r\n\r\n    const onValueChange = (value: number) => {\r\n        if (onChange) onChange(value);\r\n    }\r\n\r\n    const onIntChange = (index: number): void => {\r\n        setInt(intRange[index]);\r\n        onValueChange(float / floatDivider + intRange[index]);\r\n    }\r\n\r\n    const onFloatChange = (index: number): void => {\r\n        setFloat(floatRange[index]);\r\n        onValueChange(floatRange[index] / floatDivider + int);\r\n    }\r\n\r\n    return (\r\n        <View style={{display: \"flex\", flexDirection: \"row\", justifyContent: 'center'}}>\r\n            <WheelPicker\r\n                {...style}\r\n                containerStyle={containerStyleInt}\r\n                itemStyle={itemStyleInt}\r\n                selectedIndex={intRange.indexOf(int)}\r\n                options={intRange.map(item => `${item}`)}\r\n                onChange={onIntChange}\r\n            />\r\n            <WheelPicker\r\n                {...style}\r\n                containerStyle={containerStyleFloat}\r\n                itemStyle={itemStyleFloat}\r\n                selectedIndex={floatRange.indexOf(float)}\r\n                options={floatRangeStrings}\r\n                onChange={onFloatChange}\r\n            />\r\n        </View>\r\n    );\r\n}","import React from 'react';\r\nimport WheelPicker from '../wheely';\r\nimport styleSheet from \"../../styles\";\r\nimport {useTheme} from \"react-native-paper\";\r\nimport {View} from \"react-native\";\r\n\r\n\r\nexport default function IntPicker({\r\n                                      maxValue = 50,\r\n                                      minValue = -50,\r\n                                      onChange = null,\r\n                                      curValue = null\r\n                                  }) {\r\n    const theme = useTheme()\r\n    const range = []\r\n    for (let i = minValue; i <= maxValue; i++) {\r\n        range.push(i)\r\n    }\r\n\r\n    const onValueChange = (index: number) => {\r\n        if (onChange) onChange(range[index]);\r\n    }\r\n\r\n    const style = {\r\n        selectedIndicatorStyle: [\r\n            styleSheet.numberPicker.selectedIndicator,\r\n            {borderRadius: 0, backgroundColor: theme.colors.onSecondary}\r\n        ],\r\n        containerStyle: [\r\n            styleSheet.numberPicker.container,\r\n            {\r\n                backgroundColor: theme.colors.secondaryContainer,\r\n                borderRadius: 24,\r\n                marginTop: 10\r\n            }\r\n        ],\r\n        itemTextStyle: [{color: theme.colors.secondary, fontWeight: \"bold\", fontSize: 24}],\r\n        itemStyle: [{}]\r\n    }\r\n\r\n    return (\r\n        <View style={{display: \"flex\", flexDirection: \"row\", justifyContent: 'center'}}>\r\n            <WheelPicker\r\n                selectedIndex={range.indexOf(curValue)}\r\n                options={range}\r\n                onChange={onValueChange}\r\n                {...style}\r\n            />\r\n\r\n        </View>\r\n    );\r\n}","import React, {useState} from \"react\";\r\nimport {Col, Row} from \"react-native-paper-grid\";\r\nimport styleSheet from \"../../styles\";\r\nimport {Text} from \"react-native-paper\";\r\nimport SimpleDialog from \"../dialogs/SimpleDialog\";\r\nimport {IntPicker, FloatPicker} from \"../number-slider\";\r\n\r\n\r\nexport interface MeasureField {\r\n    field: {\r\n        key: any\r\n        label: string\r\n        suffix: string\r\n        icon: string\r\n        inputProps: {\r\n            mode: \"int\" | \"float\"\r\n            initialValue: number\r\n            maxValue: number\r\n            minValue: number\r\n            decimals: number\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default function MeasureSliderModal({field}: MeasureField) {\r\n    const [curValue, setCurValue] = useState(field.inputProps.initialValue);\r\n    const [value, setValue] = useState(curValue)\r\n\r\n    const onAccept = () => {\r\n        setCurValue(value)\r\n    }\r\n\r\n    const onDecline = () => {\r\n        setValue(value)\r\n    }\r\n\r\n    return (\r\n        <Row style={styleSheet.grid.row}>\r\n            <Col size={8}>\r\n                <Text style={{fontSize: 16}}>{field.label}</Text>\r\n            </Col>\r\n            <Col size={8}>\r\n                <SimpleDialog icon={field.icon} title={`${field.label}, ${field.suffix}`}\r\n                              text={`${curValue.toFixed(field.inputProps.decimals)} ${field.suffix}`}\r\n                              onAccept={onAccept}\r\n                              onDecline={onDecline}>\r\n                    {\r\n                        field.inputProps.mode === \"int\"\r\n                            ? <IntPicker  {...field.inputProps} curValue={curValue} onChange={setValue}/>\r\n                            : <FloatPicker  {...field.inputProps} curValue={curValue} onChange={setValue}/>\r\n                    }\r\n                </SimpleDialog>\r\n            </Col>\r\n        </Row>)\r\n}","import {Grid} from \"react-native-paper-grid\";\r\nimport React from \"react\";\r\nimport InputCard from \"./InputCard\";\r\nimport styleSheet from \"../../styles\";\r\nimport {Unit, UnitProps} from \"js-ballistics\";\r\nimport MeasureSliderModal from \"../measure-slider-modal/MeasureSliderModal\";\r\n\r\n\r\nexport default function AtmoCard() {\r\n\r\n    const fields = [\r\n        {\r\n            key: \"temp\",\r\n            label: \"Temperature\",\r\n            suffix: UnitProps[Unit.Celsius].symbol,\r\n            icon: \"thermometer\",\r\n            inputProps: {\r\n                mode: \"int\",\r\n                initialValue: 15,\r\n                maxValue: 50,\r\n                minValue: -50,\r\n                decimals: 0\r\n            }\r\n        },\r\n        {\r\n            key: \"pressure\",\r\n            label: \"Pressure\",\r\n            suffix: UnitProps[Unit.MmHg].symbol,\r\n            icon: \"speedometer\",\r\n            inputProps: {\r\n                mode: \"int\",\r\n                initialValue: 760,\r\n                maxValue: 1000,\r\n                minValue: 700,\r\n                decimals: 0\r\n            }\r\n        },\r\n        {\r\n            key: \"humidity\",\r\n            label: \"Humidity\",\r\n            suffix: \"%\",\r\n            icon: \"water\",\r\n            inputProps: {\r\n                mode: \"int\",\r\n                initialValue: 78,\r\n                maxValue: 100,\r\n                minValue: 0,\r\n                decimals: 0\r\n            }\r\n        },\r\n        {\r\n            key: \"altitude\",\r\n            label: \"Altitude\",\r\n            suffix: UnitProps[Unit.Meter].symbol,\r\n            icon: \"ruler\",\r\n            inputProps: {\r\n                mode: \"int\",\r\n                initialValue: 150,\r\n                maxValue: 3000,\r\n                minValue: 0,\r\n                decimals: 0,\r\n            }\r\n        },\r\n    ]\r\n\r\n    return (\r\n        <InputCard title={\"Current atmosphere\"}>\r\n            <Grid style={styleSheet.grid.grid}>\r\n                {fields.map(field => <MeasureSliderModal key={field.key} field={field}/>)}\r\n            </Grid>\r\n        </InputCard>\r\n    )\r\n}","import React, {useState} from \"react\";\r\nimport {List, RadioButton} from \"react-native-paper\";\r\n\r\ntype RadioItem = {\r\n    label: string\r\n    key: any\r\n    value: any\r\n}\r\n\r\n\r\ntype RadioProps = {\r\n    initialValue: any\r\n    onChange: Function|any\r\n    items: RadioItem[]\r\n}\r\n\r\n\r\nexport default function RadioGroup({initialValue, onChange, items}: RadioProps) {\r\n\r\n    const [value, setValue] = useState(initialValue);\r\n\r\n    const onValueChange = (value: number) => {\r\n        setValue(value);\r\n        if (onChange) onChange(value);\r\n    }\r\n\r\n    return (\r\n            <RadioButton.Group onValueChange={onValueChange} value={value}>\r\n                {items.map(item =>\r\n                        <RadioButton.Item key={item.value} label={item.label} value={item.value}/>\r\n                )}\r\n            </RadioButton.Group>\r\n    );\r\n\r\n}","import * as React from 'react';\r\nimport {Portal, Chip, useTheme, Button, Dialog, Text, FAB} from 'react-native-paper';\r\nimport {ScrollView, View} from \"react-native\";\r\n\r\n\r\nconst SimpleScrollDialog = ({\r\n                         children,\r\n                         title,\r\n                         text,\r\n                         icon = null,\r\n                         onAccept = null,\r\n                         onDecline = null\r\n                     }) => {\r\n\r\n    const [visible, setVisible] = React.useState(false);\r\n\r\n    const showDialog = () => setVisible(true);\r\n    const hideDialog = () => {\r\n        setVisible(false);\r\n    };\r\n\r\n    const onAcceptBtn = () => {\r\n        if (onAccept) onAccept();\r\n        setVisible(false);\r\n    }\r\n\r\n    const onDeclineBtn = () => {\r\n        if (onDecline) onDecline();\r\n        setVisible(false);\r\n    }\r\n\r\n    return (\r\n        <View style={{display: \"flex\", justifyContent: \"center\"}}>\r\n            <Chip icon={icon} closeIcon=\"square-edit-outline\" style={{margin: 0}} textStyle={{fontSize: 16}}\r\n                  onPress={showDialog}\r\n                  onClose={showDialog}\r\n                // textStyle={{fontSize: 18}}\r\n            >\r\n                {text}\r\n            </Chip>\r\n            <Portal>\r\n\r\n                <Dialog visible={visible} onDismiss={hideDialog} style={{justifyContent: \"center\"}}>\r\n                    <Dialog.Title>{title}</Dialog.Title>\r\n\r\n                    <Dialog.ScrollArea>\r\n                        <ScrollView contentContainerStyle={{padding: 24}}>\r\n                            {children}\r\n                        </ScrollView>\r\n                    </Dialog.ScrollArea>\r\n\r\n                    <Dialog.Actions>\r\n                        <FAB icon=\"close\" mode={\"flat\"} size={'small'} onPress={onDeclineBtn}\r\n                             variant={'tertiary'} color={useTheme().colors.tertiary}/>\r\n                        <FAB icon=\"check\" mode={\"flat\"} size={'small'} onPress={onAcceptBtn}/>\r\n                    </Dialog.Actions>\r\n                </Dialog>\r\n\r\n            </Portal>\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default SimpleScrollDialog;","import {Text} from \"react-native-paper\"\r\nimport {Col, Grid, Row} from \"react-native-paper-grid\";\r\nimport InputCard from \"./InputCard\";\r\nimport styleSheet from \"../../styles\";\r\n\r\nimport {useState} from \"react\";\r\nimport RadioGroup from \"../radio-group/RadioGroup\";\r\nimport {SimpleScrollDialog} from \"../dialogs\";\r\n\r\nexport default function SettingsGeneralCard() {\r\n\r\n    const languageList = [\r\n        {\r\n            label: \"English\",\r\n            value: \"EN\",\r\n            key: \"EN\"\r\n        },\r\n        {\r\n            label: \"Ukrainian\",\r\n            value: \"UA\",\r\n            key: \"UA\"\r\n        },\r\n    ];\r\n\r\n    const [curLanguage, setCurLanguage] = useState(\"EN\");\r\n    const [language, setLanguage] = useState(curLanguage);\r\n\r\n    const onAccept = () => {\r\n        setCurLanguage(language)\r\n    }\r\n\r\n    const onDecline = () => {\r\n        setLanguage(curLanguage)\r\n    }\r\n\r\n    return (\r\n        <InputCard title={\"General\"}>\r\n            <Grid style={styleSheet.grid.grid}>\r\n\r\n                <Row style={styleSheet.grid.row}>\r\n                    <Col size={9}>\r\n                        <Text style={{fontSize: 16}}>{\"Language\"}</Text>\r\n                    </Col>\r\n                    <Col size={7}>\r\n                        <SimpleScrollDialog title={\"Language\"} text={curLanguage} icon={\"translate\"}\r\n                                      onAccept={onAccept}\r\n                                      onDecline={onDecline}>\r\n                            <RadioGroup initialValue={language} onChange={setLanguage} items={languageList} />\r\n                        </SimpleScrollDialog>\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Grid>\r\n        </InputCard>\r\n    )\r\n\r\n}","import {Text} from \"react-native-paper\"\r\nimport {Col, Grid, Row} from \"react-native-paper-grid\";\r\nimport InputCard from \"./InputCard\";\r\nimport styleSheet from \"../../styles\";\r\n\r\n\r\nimport {\r\n    Unit,\r\n    UnitProps,\r\n    Measure,\r\n} from \"js-ballistics\"\r\nimport {SimpleScrollDialog} from \"../dialogs\";\r\nimport {useState} from \"react\";\r\nimport RadioGroup from \"../radio-group/RadioGroup\";\r\n\r\n\r\nconst get_unit_list = (measure: Object) =>\r\n    Object.keys(measure).map((key: string): { label: string, value: Unit } => {\r\n        return {label: UnitProps[measure[key]].name, value: measure[key]}\r\n    })\r\n\r\nconst fields = [\r\n    {\r\n        key: \"distance\",\r\n        label: \"Distance\",\r\n        list: [\r\n            {label: UnitProps[Unit.Meter].name, value: Unit.Meter},\r\n            {label: UnitProps[Unit.Foot].name, value: Unit.Foot},\r\n            {label: UnitProps[Unit.Yard].name, value: Unit.Yard},\r\n        ],\r\n        def: Unit.Meter,\r\n    },\r\n    {\r\n        key: \"velocity\",\r\n        label: \"Velocity\",\r\n        list: [\r\n            {label: UnitProps[Unit.MPS].name, value: Unit.MPS},\r\n            {label: UnitProps[Unit.FPS].name, value: Unit.FPS},\r\n        ],\r\n        def: Unit.MPS\r\n    },\r\n    {\r\n        key: \"angular\",\r\n        label: \"Angular\",\r\n        list: get_unit_list(Measure.Angular),\r\n        def: Unit.Degree\r\n    },\r\n    {\r\n      key: \"sizes\",\r\n      label: \"Sizes\",\r\n    list: [\r\n        {label: UnitProps[Unit.Inch].name, value: Unit.Inch},\r\n        {label: UnitProps[Unit.Millimeter].name, value: Unit.Millimeter},\r\n        {label: UnitProps[Unit.Centimeter].name, value: Unit.Centimeter},\r\n        {label: UnitProps[Unit.Centimeter].name, value: Unit.Line},\r\n    ],\r\n      def: Unit.Inch\r\n    },\r\n    {\r\n        key: \"weight\",\r\n        label: \"Weight\",\r\n        list: get_unit_list(Measure.Weight),\r\n        def: Unit.Grain\r\n    },\r\n    {\r\n        key: \"temperature\",\r\n        label: \"Temperature\",\r\n        list: [\r\n            {label: UnitProps[Unit.Celsius].name, value: Unit.Celsius},\r\n            {label: UnitProps[Unit.Fahrenheit].name, value: Unit.Fahrenheit},\r\n        ],\r\n        def: Unit.Celsius\r\n    },\r\n    {\r\n        key: \"pressure\",\r\n        label: \"Pressure\",\r\n        list: get_unit_list(Measure.Pressure),\r\n        def: Unit.PSI\r\n    },\r\n    {\r\n        key: \"energy\",\r\n        label: \"Energy\",\r\n        list: get_unit_list(Measure.Energy),\r\n        def: Unit.Joule\r\n    },\r\n    {\r\n        key: \"adjustment\",\r\n        label: \"Adjustment\",\r\n        list: get_unit_list(Measure.Angular),\r\n        def: Unit.MIL\r\n    },\r\n]\r\n\r\n\r\nexport default function SettingsUnitCard() {\r\n\r\n    const UnitSelector = ({field}) => {\r\n\r\n        const [curValue, setCurValue] = useState(field.def);\r\n        const [value, setValue] = useState(curValue)\r\n\r\n        const onAccept = () => {\r\n            setCurValue(value)\r\n        }\r\n\r\n        return (\r\n            <Row style={styleSheet.grid.row} key={field.key}>\r\n                <Col size={9}>\r\n                    <Text style={{fontSize: 16}}>{field.label}</Text>\r\n                </Col>\r\n                <Col size={7}>\r\n                    <SimpleScrollDialog title={field.label} text={UnitProps[curValue].name} onAccept={onAccept}>\r\n                        <RadioGroup initialValue={curValue} onChange={setValue} items={field.list} />\r\n                    </SimpleScrollDialog>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <InputCard title=\"Units of measurement\">\r\n            <Grid style={styleSheet.grid.grid}>\r\n                {fields.map(field => <UnitSelector key={field.key} field={field}/>)}\r\n            </Grid>\r\n        </InputCard>\r\n    )\r\n\r\n}","import {Text, SegmentedButtons, TextInput, useTheme} from \"react-native-paper\";\r\nimport {Col, Grid, Row} from \"react-native-paper-grid\";\r\nimport React, {useState} from \"react\";\r\nimport InputCard from \"./InputCard\";\r\nimport styleSheet from \"../../styles\";\r\nimport {SimpleDialog} from \"../dialogs\";\r\nimport MeasureSliderModal from \"../measure-slider-modal/MeasureSliderModal\";\r\n\r\n\r\nexport default function WeaponCard() {\r\n\r\n    const theme = useTheme()\r\n\r\n    const fields = [\r\n        {\r\n            key: \"diameter\",\r\n            label: \"Diameter\",\r\n            suffix: \"in\",\r\n            icon: \"diameter-variant\",\r\n            inputProps: {\r\n                mode: \"float\",\r\n                initialValue: 0.308,\r\n                maxValue: 22,\r\n                minValue: 0.001,\r\n                maxLength: 8,\r\n                decimals: 3,\r\n            }\r\n        },\r\n        {\r\n            key: \"twist\",\r\n            label: \"Twist\",\r\n            suffix: \"in\",\r\n            icon: \"screw-flat-top\",\r\n            inputProps: {\r\n                mode: \"float\",\r\n                initialValue: 11,\r\n                maxValue: 20,\r\n                minValue: -20,\r\n                maxLength: 8,\r\n                decimals: 2,\r\n            }\r\n        },\r\n    ]\r\n\r\n    const twistStates = [\r\n        {\r\n            value: 'Right',\r\n            label: 'Right',\r\n            icon: \"rotate-right\",\r\n            showSelectedCheck: true,\r\n            checkedColor: theme.colors.primary\r\n        },\r\n        {value: 'Left', label: 'Left', icon: \"rotate-left\", showSelectedCheck: true, checkedColor: theme.colors.primary}\r\n    ]\r\n\r\n    const [curTwistDir, setCurTwistDir] = useState(\"Right\");\r\n    const [twistDir, setTwistDir] = useState(curTwistDir);\r\n\r\n    const [curName, setCurName] = React.useState(\"My rifle\");\r\n    const [name, setName] = React.useState(curName);\r\n\r\n    const acceptTwistDir = (): void => {\r\n        setCurTwistDir(twistDir)\r\n    }\r\n\r\n    const acceptName = () => {\r\n        setCurName(name)\r\n    }\r\n\r\n    const declineName = () => {\r\n        setName(curName)\r\n    }\r\n\r\n    return (\r\n\r\n        <InputCard title={\"Weapon\"}>\r\n\r\n            <SimpleDialog title={\"Name\"} icon={\"card-bulleted-outline\"}\r\n                          text={curName}\r\n                          onAccept={acceptName}\r\n                          onDecline={declineName}\r\n            >\r\n                <TextInput value={name} onChangeText={setName} />\r\n            </SimpleDialog>\r\n\r\n            <Grid style={styleSheet.grid.grid}>\r\n\r\n                {fields.map(field => <MeasureSliderModal key={field.key} field={field}/>)}\r\n\r\n                <Row style={styleSheet.grid.row}>\r\n                    <Col size={8}>\r\n                        <Text style={{fontSize: 16}}>Twist direction</Text>\r\n                    </Col>\r\n                    <Col size={8}>\r\n                        <SimpleDialog title={\"Twist\"} icon={curTwistDir === \"Right\" ? \"rotate-right\" : \"rotate-left\"}\r\n                                      text={curTwistDir} onAccept={acceptTwistDir}>\r\n                            <SegmentedButtons\r\n                                buttons={twistStates} value={twistDir} onValueChange={setTwistDir}/>\r\n                        </SimpleDialog>\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Grid>\r\n        </InputCard>\r\n\r\n    )\r\n}","import React, {FC, useState, useRef, useCallback} from \"react\";\r\nimport {PanResponder, Dimensions} from \"react-native\";\r\nimport Svg, {Path, Circle, G, Text, Polygon} from \"react-native-svg\";\r\n\r\ninterface Props {\r\n    btnRadius?: number;\r\n    btnColor?: number;\r\n    dialRadius?: number;\r\n    dialWidth?: number;\r\n    meterColor?: string;\r\n    textColor?: string;\r\n    fillColor?: string;\r\n    strokeColor?: string;\r\n    strokeWidth?: number;\r\n    textSize?: number;\r\n    value?: number;\r\n    min?: number;\r\n    max?: number;\r\n    xCenter?: number;\r\n    yCenter?: number;\r\n    onValueChange?: (x: number) => number;\r\n}\r\n\r\nconst CircleSlider: FC<Props> = ({\r\n                                     btnRadius = 15,\r\n                                     btnColor = \"#0cd\",\r\n                                     dialRadius = 130,\r\n                                     dialWidth = 5,\r\n                                     meterColor = \"#0cd\",\r\n                                     textColor = \"#fff\",\r\n                                     fillColor = \"none\",\r\n                                     strokeColor = \"#fff\",\r\n                                     strokeWidth = 0.5,\r\n                                     textSize = 10,\r\n                                     value = 0,\r\n                                     min = 0,\r\n                                     max = 359,\r\n                                     xCenter = Dimensions.get(\"window\").width / 2,\r\n                                     yCenter = Dimensions.get(\"window\").height / 2,\r\n                                     onValueChange = (x) => x,\r\n                                 }) => {\r\n    const [angle, setAngle] = useState(value);\r\n\r\n    const onChange = (value) => {\r\n        onValueChange(value)\r\n        return value\r\n    }\r\n\r\n    const panResponder = useRef(\r\n        PanResponder.create({\r\n            onStartShouldSetPanResponder: (e, gs) => true,\r\n            onStartShouldSetPanResponderCapture: (e, gs) => true,\r\n            onMoveShouldSetPanResponder: (e, gs) => true,\r\n            onMoveShouldSetPanResponderCapture: (e, gs) => true,\r\n            onPanResponderMove: (e, gs) => {\r\n                let xOrigin = xCenter - (dialRadius + btnRadius);\r\n                let yOrigin = yCenter - (dialRadius + btnRadius);\r\n                let a = cartesianToPolar(gs.moveX - xOrigin, gs.moveY - yOrigin);\r\n\r\n                if (a <= min) {\r\n                    setAngle(min);\r\n                } else if (a >= max) {\r\n                    setAngle(max);\r\n                } else {\r\n                    setAngle(a);\r\n                }\r\n            },\r\n        })\r\n    ).current;\r\n\r\n    const polarToCartesian = useCallback(\r\n        (angle) => {\r\n            let r = dialRadius;\r\n            let hC = dialRadius + btnRadius;\r\n            let a = ((angle - 90) * Math.PI) / 180.0;\r\n\r\n            let x = hC + r * Math.cos(a);\r\n            let y = hC + r * Math.sin(a);\r\n            return {x, y};\r\n        },\r\n        [dialRadius, btnRadius]\r\n    );\r\n\r\n    const cartesianToPolar = useCallback(\r\n        (x, y) => {\r\n            let hC = dialRadius + btnRadius;\r\n\r\n            if (x === 0) {\r\n                return y > hC ? 0 : 180;\r\n            } else if (y === 0) {\r\n                return x > hC ? 90 : 270;\r\n            } else {\r\n                return (\r\n                    Math.round((Math.atan((y - hC) / (x - hC)) * 180) / Math.PI) +\r\n                    (x > hC ? 90 : 270)\r\n                );\r\n            }\r\n        },\r\n        [dialRadius, btnRadius]\r\n    );\r\n\r\n    const width = (dialRadius + btnRadius) * 2;\r\n    const bR = btnRadius;\r\n    const dR = dialRadius;\r\n    const startCoord = polarToCartesian(0);\r\n    let endCoord = polarToCartesian(angle);\r\n\r\n    return (\r\n        <Svg width={width} height={width}>\r\n            <Circle\r\n                r={dR}\r\n                cx={width / 2}\r\n                cy={width / 2}\r\n                stroke={strokeColor}\r\n                strokeWidth={strokeWidth}\r\n                fill={fillColor}\r\n            />\r\n\r\n            <Path\r\n                stroke={meterColor}\r\n                strokeWidth={dialWidth}\r\n                fill=\"none\"\r\n                d={`M${startCoord.x} ${startCoord.y} A ${dR} ${dR} 0 ${\r\n                    angle > 180 ? 1 : 0\r\n                } 1 ${endCoord.x} ${endCoord.y}`}\r\n            />\r\n\r\n            <G x={endCoord.x - bR} y={endCoord.y - bR}>\r\n                {/*<Circle*/}\r\n                {/*    r={bR}*/}\r\n                {/*    cx={bR}*/}\r\n                {/*    cy={bR}*/}\r\n                {/*    fill={btnColor}*/}\r\n                {/*    {...panResponder.panHandlers}*/}\r\n                {/*/>*/}\r\n\r\n                <Polygon\r\n                    points={`\r\n                     ${bR},${bR + width / 4}\r\n                     ${bR + 1.5 * btnRadius},${bR} \r\n                     ${bR - 1.5 * btnRadius},${bR} \r\n                    `}\r\n                    fill={btnColor}\r\n                    transform={`rotate(${angle} ${bR} ${bR})`}\r\n                    {...panResponder.panHandlers}\r\n                >\r\n                    {onChange(angle) + \"\"}\r\n                </Polygon>\r\n\r\n                {/*<Polygon*/}\r\n                {/*    points={`*/}\r\n                {/*     ${bR - btnRadius},${bR+width/2 - 5*btnRadius} */}\r\n                {/*     ${bR},${bR+width/2 - btnRadius}*/}\r\n                {/*     ${bR + btnRadius},${bR+width/2 - 5*btnRadius} */}\r\n                {/*     ${bR + btnRadius},${bR} */}\r\n                {/*     ${bR - btnRadius},${bR} */}\r\n                {/*    `}*/}\r\n                {/*    fill={btnColor}*/}\r\n                {/*    transform={`rotate(${angle} ${bR} ${bR})`}*/}\r\n                {/*    {...panResponder.panHandlers}*/}\r\n                {/*>*/}\r\n                {/*    {onChange(angle) + \"\"}*/}\r\n                {/*</Polygon>*/}\r\n\r\n                {/*<Polygon*/}\r\n                {/*    points={`${bR},${bR+btnRadius} */}\r\n                {/*     ${bR + btnRadius},${bR - btnRadius} */}\r\n                {/*     ${bR - btnRadius},${bR - btnRadius} `}*/}\r\n                {/*    fill={btnColor}*/}\r\n                {/*    transform={`rotate(${angle} ${bR} ${bR})`}*/}\r\n                {/*    {...panResponder.panHandlers}*/}\r\n\r\n                {/*>*/}\r\n                {/*{onChange(angle) + \"\"}*/}\r\n                {/*</Polygon>*/}\r\n\r\n\r\n                {/*<Text*/}\r\n                {/*    x={bR - btnRadius}*/}\r\n                {/*    y={bR + textSize / 2 - btnRadius}*/}\r\n                {/*    fontSize={textSize}*/}\r\n                {/*    fill={textColor}*/}\r\n                {/*    textAnchor=\"middle\"*/}\r\n                {/*>*/}\r\n                {/*    {onChange(angle) + \"\"}*/}\r\n                {/*</Text>*/}\r\n            </G>\r\n        </Svg>\r\n    );\r\n};\r\n\r\nexport default React.memo(CircleSlider);","import {Text, useTheme} from \"react-native-paper\";\r\nimport React from \"react\";\r\nimport {View} from \"react-native\";\r\nimport CircularSlider from \"../circular-slider\";\r\nimport CircleSlider from \"../circular-slider/CircleSlider\";\r\n\r\n\r\nexport default function WindDirection({curValue, onChange}) {\r\n    const theme = useTheme()\r\n\r\n    const styles = {\r\n        container: {\r\n            // flex: 1,\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            paddingBottom: 40,\r\n        },\r\n        text: {\r\n            marginTop: -110,\r\n            fontWeight: \"bold\",\r\n            fontSize: 16\r\n        },\r\n        slider: {\r\n            padding: 5\r\n        },\r\n    }\r\n\r\n    return (\r\n\r\n        <View style={styles.container}>\r\n\r\n            <CircleSlider value={curValue}\r\n                          dialRadius={80}\r\n                          btnRadius={15}\r\n                          btnColor={theme.colors.outline}\r\n                          min={0}\r\n                          max={359}\r\n                          dialWidth={15}\r\n                          meterColor={theme.colors.secondaryContainer}\r\n                          textColor={theme.colors.onSecondaryContainer}\r\n                //           fillColor={theme.colors.secondaryContainer}\r\n                //           btnColor={theme.colors.secondaryContainer}\r\n                          strokeColor={theme.colors.secondaryContainer}\r\n                          strokeWidth={20}\r\n                          textSize={0}\r\n                          onValueChange={value => onChange(Math.round(value / 30))}\r\n                          style={styles.slider}/>\r\n\r\n\r\n            <Text style={styles.text}>{`${curValue * 30}° (${curValue}h)`}</Text>\r\n\r\n\r\n        </View>\r\n    )\r\n}","import {Text} from \"react-native-paper\";\r\nimport {Col, Grid, Row} from \"react-native-paper-grid\";\r\nimport React, {useState} from \"react\";\r\nimport InputCard from \"./InputCard\";\r\nimport styleSheet from \"../../styles\";\r\nimport {SimpleDialog} from \"../dialogs\";\r\nimport {Unit, UnitProps} from \"js-ballistics\";\r\nimport WindDirectionPicker from \"../wind-dir-picker/WindDirPicker\";\r\nimport MeasureSliderModal from \"../measure-slider-modal/MeasureSliderModal\";\r\n\r\n\r\nexport default function WindCard() {\r\n\r\n    const fields = [\r\n        {\r\n            key: \"windSpeed\",\r\n            label: \"Wind speed\",\r\n            suffix: UnitProps[Unit.MPS].symbol,\r\n            icon: \"windsock\",\r\n            inputProps: {\r\n                mode: \"float\",\r\n                initialValue: 0,\r\n                maxValue: 100,\r\n                minValue: 0,\r\n                decimals: 1,\r\n            }\r\n        }\r\n    ]\r\n\r\n    const [curWindDir, setCurWindDir] = useState(0)\r\n    const [windDir, setWindDir] = useState(curWindDir / 30)\r\n\r\n    const onWindDirChange = (value) => {\r\n        setWindDir(value === 12 ? 0 : value)\r\n    }\r\n\r\n    const onWindAccept = () => {\r\n        setCurWindDir(windDir * 30)\r\n    }\r\n\r\n    const onWindDecline = () => {\r\n        setWindDir(curWindDir / 30)\r\n    }\r\n\r\n    const getWindIcon = () => {\r\n        switch (curWindDir / 30) {\r\n            case 12:\r\n                return \"clock-time-twelve-outline\";\r\n            case 11:\r\n                return \"clock-time-eleven-outline\";\r\n            case 10:\r\n                return \"clock-time-ten-outline\";\r\n            case 9:\r\n                return \"clock-time-nine-outline\";\r\n            case 8:\r\n                return \"clock-time-eight-outline\";\r\n            case 7:\r\n                return \"clock-time-seven-outline\";\r\n            case 6:\r\n                return \"clock-time-six-outline\";\r\n            case 5:\r\n                return \"clock-time-five-outline\";\r\n            case 4:\r\n                return \"clock-time-four-outline\";\r\n            case 3:\r\n                return \"clock-time-three-outline\";\r\n            case 2:\r\n                return \"clock-time-two-outline\";\r\n            case 1:\r\n                return \"clock-time-one-outline\";\r\n            case 0:\r\n                return \"clock-time-twelve-outline\";\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <InputCard title={\"Current wind\"}>\r\n            <Grid style={styleSheet.grid.grid}>\r\n                {fields.map(field => <MeasureSliderModal key={field.key} field={field}/>)}\r\n\r\n\r\n                <Row style={styleSheet.grid.row}>\r\n                    <Col>\r\n                        <Text style={{fontSize: 16}}>{\"Wind direction\"}</Text>\r\n                    </Col>\r\n                    <Col>\r\n                        <SimpleDialog title={`WindDirection, degree`}\r\n                                      text={`${curWindDir}° (${curWindDir / 30}h)`}\r\n                                      icon={getWindIcon()}\r\n                                      onAccept={onWindAccept}\r\n                                      onDecline={onWindDecline}>\r\n                            <WindDirectionPicker\r\n                                curValue={windDir}\r\n                                onChange={onWindDirChange}/>\r\n                        </SimpleDialog>\r\n                    </Col>\r\n                </Row>\r\n\r\n                {/*<Row>*/}\r\n                {/*    <Col>*/}\r\n                {/*        <Text>{\"Wind direction\"}</Text>*/}\r\n                {/*    </Col>*/}\r\n\r\n                {/*    <Col>*/}\r\n                {/*        <CircularSlider*/}\r\n                {/*            size={200}*/}\r\n                {/*            trackWidth={8}*/}\r\n                {/*            minValue={0}*/}\r\n                {/*            maxValue={12}*/}\r\n                {/*            startAngle={0}*/}\r\n                {/*            endAngle={360}*/}\r\n                {/*            angleType={{direction: \"cw\", axis: \"+y\"}}*/}\r\n                {/*            handleSize={10}*/}\r\n                {/*            handle1={{*/}\r\n                {/*                value: 50,*/}\r\n                {/*                onChange: () => {},*/}\r\n                {/*            }}*/}\r\n                {/*            arcBackgroundColor={\"white\"}*/}\r\n                {/*            arcColor={\"black\"}*/}\r\n                {/*            capMode={\"triangle\"}*/}\r\n                {/*        />*/}\r\n\r\n                {/*    </Col>*/}\r\n                {/*</Row>*/}\r\n\r\n            </Grid>\r\n        </InputCard>\r\n    )\r\n}","import React from \"react\";\r\nimport {ScrollView} from 'react-native';\r\nimport {useTheme, Text} from 'react-native-paper';\r\nimport {StyleSheet} from \"react-native\";\r\n\r\n\r\nexport default function Placeholder({text}: { text?: string }) {\r\n\r\n    const theme = useTheme();\r\n\r\n    const styles = StyleSheet.create({\r\n        scrollViewContainer: {\r\n            backgroundColor: theme.colors.background,\r\n        },\r\n    });\r\n\r\n    return (\r\n        <ScrollView\r\n            style={styles.scrollViewContainer}\r\n            keyboardShouldPersistTaps=\"always\"\r\n            alwaysBounceVertical={false}\r\n            showsVerticalScrollIndicator={true}\r\n\r\n            contentContainerStyle={{\r\n                flex: 1,\r\n                justifyContent: 'center',\r\n            }}\r\n        >\r\n            <Text style={{textAlign: \"center\"}}>{text ? text : \"Not implemented yet\"}</Text>\r\n        </ScrollView>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {NavigationContainer} from '@react-navigation/native';\r\nimport {createNativeStackNavigator} from '@react-navigation/native-stack';\r\nimport Placeholder from \"../../screens/placeholder/Placeholder\";\r\nimport {Card} from \"react-native-paper\";\r\nimport styleSheet from \"../../styles\";\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\nexport default function TabsCard() {\r\n    return (\r\n\r\n        <Card mode=\"elevated\" elevation={1}\r\n              style={[styleSheet.card.card]}\r\n        >\r\n            <Card.Title titleVariant={\"titleLarge\"} title={\"Page\"}></Card.Title>\r\n            <Card.Content style={styleSheet.card.content}>\r\n                <NavigationContainer independent={true}>\r\n                    <Stack.Navigator initialRouteName=\"Page1\">\r\n                        <Stack.Screen name=\"Page1\" component={Placeholder} />\r\n                        <Stack.Screen name=\"Page2\" component={Placeholder} />\r\n                    </Stack.Navigator>\r\n                </NavigationContainer>\r\n            </Card.Content>\r\n        </Card>\r\n\r\n\r\n    );\r\n}","import React from \"react\";\r\nimport {ScrollView} from 'react-native';\r\nimport {FAB, useTheme} from 'react-native-paper';\r\nimport {StyleSheet} from \"react-native\";\r\nimport {WeaponCard} from \"../../components/cards\";\r\nimport styleSheet from \"../../styles\";\r\nimport TabsCard from \"../../components/cards/TabsCard\";\r\n\r\n\r\nexport default function HomeScreen({navigation}) {\r\n\r\n    const theme = useTheme();\r\n\r\n    const styles = StyleSheet.create({\r\n        scrollViewContainer: {\r\n            backgroundColor: theme.colors.background,\r\n            // height: Dimensions.get('window').height * 0.8, // Set the height as a percentage of the screen height\r\n            // marginBottom: 80\r\n        },\r\n    });\r\n\r\n    return (\r\n       <>\r\n            <ScrollView\r\n                style={styles.scrollViewContainer}\r\n                keyboardShouldPersistTaps=\"always\"\r\n                alwaysBounceVertical={false}\r\n                showsVerticalScrollIndicator={true}\r\n            >\r\n                <WeaponCard/>\r\n\r\n                <TabsCard />\r\n            </ScrollView>\r\n            {/*TODO: move fab to screen*/}\r\n            {/*<FAB*/}\r\n            {/*    mode=\"flat\"*/}\r\n            {/*    size=\"medium\"*/}\r\n            {/*    icon={\"plus\"}*/}\r\n            {/*    onPress={() => console.log(\"BigFabPressed\")}*/}\r\n            {/*    style={[*/}\r\n            {/*        styleSheet.fab,*/}\r\n            {/*        {bottom: (BOTTOM_APPBAR_HEIGHT - MEDIUM_FAB_HEIGHT) / 2},*/}\r\n            {/*    ]}*/}\r\n            {/*/>*/}\r\n        </>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport {ScrollView} from 'react-native';\r\nimport {useTheme} from 'react-native-paper';\r\nimport {StyleSheet} from \"react-native\";\r\nimport {AtmoCard, WindCard} from \"../../components/cards\";\r\n\r\n\r\nexport default function CurrentAtmo({ navigation }) {\r\n\r\n    const theme = useTheme();\r\n\r\n    const styles = StyleSheet.create({\r\n        scrollViewContainer: {\r\n            backgroundColor: theme.colors.background,\r\n        },\r\n    });\r\n\r\n    return (\r\n        <ScrollView\r\n            style={styles.scrollViewContainer}\r\n            keyboardShouldPersistTaps=\"always\"\r\n            alwaysBounceVertical={false}\r\n            showsVerticalScrollIndicator={true}\r\n        >\r\n            <AtmoCard />\r\n            <WindCard />\r\n        </ScrollView>\r\n    );\r\n}\r\n","import {ScrollView} from 'react-native';\r\nimport {useTheme} from 'react-native-paper';\r\nimport {SettingsUnitCard, SettingsGeneralCard} from \"../../components/cards\";\r\n\r\nexport default function SettingsScreen({props}) {\r\n\r\n    const theme = useTheme();\r\n\r\n    const styles = {\r\n        scrollViewContainer: {\r\n            backgroundColor: theme.colors.background,\r\n            // height: Dimensions.get('window').height * 0.8, // Set the height as a percentage of the screen height\r\n            // marginBottom: 80\r\n        },\r\n    }\r\n\r\n    return (\r\n        <ScrollView\r\n            style={styles.scrollViewContainer}\r\n            keyboardShouldPersistTaps=\"always\"\r\n            alwaysBounceVertical={false}\r\n            showsVerticalScrollIndicator={true}\r\n        >\r\n            <SettingsGeneralCard />\r\n            <SettingsUnitCard />\r\n        </ScrollView>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport Placeholder from \"../placeholder/Placeholder\";\r\n\r\n\r\nexport default function Calculate({ navigation }) {\r\n\r\n    return (\r\n        <Placeholder text={\"Calculator\\nnot implemented yet\"}/>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport Placeholder from \"../placeholder/Placeholder\";\r\n\r\n\r\nexport default function Trajectory({ navigation }) {\r\n\r\n    return (\r\n        <Placeholder text={\"Trajectory table\\nnot implemented yet\"}/>\r\n    );\r\n}\r\n","import { createNavigationContainerRef } from '@react-navigation/native';\r\n\r\nexport const navigationRef = createNavigationContainerRef()\r\n\r\nexport function navigate(name: never) {\r\n    if (navigationRef.isReady()) {\r\n        navigationRef.navigate(name);\r\n    }\r\n}\r\n\r\nexport function getCurrentRoute() {\r\n    if (navigationRef.isReady()) {\r\n        return navigationRef.getCurrentRoute();\r\n    }\r\n    return null;\r\n}\r\n","import React from 'react';\r\nimport {useState} from 'react';\r\nimport {StatusBar} from 'expo-status-bar';\r\nimport {PaperProvider, MD3LightTheme, MD3DarkTheme} from 'react-native-paper';\r\nimport {SafeAreaProvider} from 'react-native-safe-area-context';\r\n\r\nimport {NavigationContainer} from '@react-navigation/native';\r\nimport {createNativeStackNavigator} from '@react-navigation/native-stack';\r\n\r\nimport {TopAppBar, BotAppBar} from \"./src/components/app-bars\";\r\nimport {HomeScreen, CurrentAtmo, SettingsScreen, Calculate, Trajectory} from \"./src/screens\";\r\n\r\n\r\nimport {navigationRef} from \"./src/RootNavigation\";\r\n\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\n\r\nexport default function App() {\r\n\r\n    const [nightMode, setNightmode] = useState(true);\r\n    const theme = nightMode ? MD3DarkTheme : MD3LightTheme\r\n    // styles.container.backgroundColor = theme.colors.background\r\n\r\n    const toggleNightMode = () => {\r\n        setNightmode((prevNightMode) => !prevNightMode);\r\n    };\r\n\r\n    const styles = {\r\n        provider: {\r\n            flex: 1,\r\n            backgroundColor: theme.colors.background  // Theme Background Color\r\n            // alignItems: 'center',\r\n            // justifyContent: 'center',\r\n        },\r\n    }\r\n\r\n    return (\r\n        <SafeAreaProvider style={styles.provider}>\r\n            <PaperProvider theme={theme}>\r\n\r\n                <NavigationContainer ref={navigationRef}>\r\n                    <Stack.Navigator\r\n                        initialRouteName=\"Home\"\r\n                        screenOptions={{\r\n                            header: (props) => <TopAppBar {...props}\r\n                                                          params={{nightMode, toggleNightMode}}\r\n                            />,\r\n                        }}\r\n                    >\r\n\r\n                        <Stack.Screen name=\"Home\" component={HomeScreen}/>\r\n                        <Stack.Screen name=\"Atmosphere\" component={CurrentAtmo}/>\r\n                        <Stack.Screen name=\"Calculate\" component={Calculate}/>\r\n                        <Stack.Screen name=\"Trajectory\" component={Trajectory}/>\r\n                        <Stack.Screen name=\"Settings\" component={SettingsScreen}/>\r\n\r\n\r\n                    </Stack.Navigator>\r\n                    <BotAppBar/>\r\n\r\n                </NavigationContainer>\r\n\r\n\r\n                <StatusBar style=\"auto\"/>\r\n            </PaperProvider>\r\n        </SafeAreaProvider>\r\n    );\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/ebalistyka/gh-pages/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [329], () => (__webpack_require__(6271)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["grid","flex","row","flexDirection","alignItems","col","card","margin","padding","content","marginHorizontal","paddingHorizontal","bottomBar","backgroundColor","position","left","right","bottom","fab","chip","measure","display","measure_text","textAlign","modal","simple","container","alignSelf","title","marginBottom","numberPicker","selectedIndicator","width","borderRadius","top","useSafeAreaInsets","theme","useTheme","navigation","useNavigation","_useState","useState","_useState2","_slicedToArray","currentRoute","setCurrentRoute","useEffect","addListener","_navigation$getCurren","currentRouteName","getCurrentRoute","name","_jsxs","Appbar","elevated","style","styleSheet","height","colors","elevation","level2","safeAreaInsets","children","_jsx","Action","icon","onPress","navigate","FAB","mode","size","MORE_ICON","Platform","OS","TopAppBar","_ref","props","Object","assign","_objectDestructuringEmpty","route","options","back","params","nightMode","toggleNightMode","getHeaderTitle","Header","BackAction","goBack","Content","Card","Title","titleVariant","text","_ref$icon","_ref$onAccept","onAccept","_ref$onDecline","onDecline","_React$useState","React","_React$useState2","visible","setVisible","showDialog","View","justifyContent","Chip","closeIcon","textStyle","fontSize","onClose","Portal","Dialog","onDismiss","Actions","variant","color","tertiary","StyleSheet","create","scrollView","overflow","option","zIndex","index","visibleRest","currentScrollIndex","opacityFunction","rotationFunction","scaleFunction","relativeScrollIndex","Animated","subtract","translateY","interpolate","inputRange","range","i","unshift","push","outputRange","y","Math","sin","PI","j","opacity","x","scale","rotateX","styles","transform","Text","selectedIndex","onChange","_ref$selectedIndicato","selectedIndicatorStyle","_ref$containerStyle","containerStyle","_ref$itemStyle","itemStyle","_ref$itemTextStyle","itemTextStyle","_ref$itemHeight","itemHeight","_ref$scaleFunction","_ref$rotationFunction","pow","_ref$opacityFunction","_ref$visibleRest","_ref$decelerationRate","decelerationRate","_ref$containerProps","containerProps","_ref$flatListProps","flatListProps","flatListRef","useRef","Value","scrollY","lastScrollTimestamp","Date","getTime","containerHeight","_useState3","_useState4","scrollIndex","setScrollIndex","paddedOptions","useMemo","array","_toConsumableArray","offsets","Array","length","map","add","divide","Error","_flatListRef$current","current","scrollToIndex","animated","intervalID","setInterval","_flatListRef$current2","clearInterval","_objectSpread","FlatList","ref","showsVerticalScrollIndicator","onScroll","event","nativeEvent","contentOffset","useNativeDriver","listener","positionY","round","handleScroll","onMomentumScrollEnd","offsetY","min","max","floor","snapToOffsets","initialScrollIndex","getItemLayout","data","offset","keyExtractor","item","toString","renderItem","_ref2","WheelPickerItem","FloatPicker","_ref$curValue","curValue","_ref$maxValue","maxValue","_ref$minValue","minValue","_ref$decimals","decimals","_ref$onChange","onSecondary","secondary","fontWeight","secondaryContainer","marginTop","containerStyleInt","borderTopLeftRadius","borderBottomLeftRadius","containerStyleFloat","borderTopRightRadius","borderBottomRightRadius","floatDivider","floatRange","keys","intRange","floatRangeStrings","value","int","setInt","float","setFloat","onValueChange","WheelPicker","marginLeft","marginRight","paddingRight","indexOf","paddingLeft","IntPicker","MeasureSliderModal","field","inputProps","initialValue","setCurValue","setValue","Row","Col","label","SimpleDialog","suffix","toFixed","AtmoCard","fields","key","UnitProps","Unit","Celsius","symbol","MmHg","Meter","InputCard","Grid","RadioGroup","items","RadioButton","Group","Item","ScrollArea","ScrollView","contentContainerStyle","SettingsGeneralCard","curLanguage","setCurLanguage","language","setLanguage","SimpleScrollDialog","get_unit_list","list","Foot","Yard","def","MPS","FPS","Measure","Angular","Degree","Inch","Millimeter","Centimeter","Line","Weight","Grain","Fahrenheit","Pressure","PSI","Energy","Joule","MIL","SettingsUnitCard","UnitSelector","WeaponCard","twistStates","showSelectedCheck","checkedColor","primary","curTwistDir","setCurTwistDir","twistDir","setTwistDir","curName","setCurName","_React$useState3","_React$useState4","setName","TextInput","onChangeText","maxLength","SegmentedButtons","buttons","_ref$btnRadius","btnRadius","_ref$btnColor","btnColor","_ref$dialRadius","dialRadius","_ref$dialWidth","dialWidth","_ref$meterColor","meterColor","_ref$fillColor","textColor","fillColor","_ref$strokeColor","strokeColor","_ref$strokeWidth","strokeWidth","_ref$value","textSize","_ref$min","_ref$max","_ref$xCenter","xCenter","Dimensions","get","_ref$yCenter","yCenter","_ref$onValueChange","angle","setAngle","panResponder","PanResponder","onStartShouldSetPanResponder","e","gs","onStartShouldSetPanResponderCapture","onMoveShouldSetPanResponder","onMoveShouldSetPanResponderCapture","onPanResponderMove","xOrigin","yOrigin","a","cartesianToPolar","moveX","moveY","polarToCartesian","useCallback","r","hC","cos","atan","bR","dR","startCoord","endCoord","Svg","Circle","cx","cy","stroke","fill","Path","d","G","Polygon","points","panHandlers","WindDirection","paddingBottom","slider","CircleSlider","outline","onSecondaryContainer","WindCard","curWindDir","setCurWindDir","windDir","setWindDir","getWindIcon","WindDirectionPicker","Placeholder","scrollViewContainer","background","keyboardShouldPersistTaps","alwaysBounceVertical","Stack","createNativeStackNavigator","TabsCard","NavigationContainer","independent","Navigator","initialRouteName","Screen","component","HomeScreen","_Fragment","CurrentAtmo","SettingsScreen","Calculate","Trajectory","navigationRef","createNavigationContainerRef","App","setNightmode","MD3DarkTheme","MD3LightTheme","prevNightMode","provider","SafeAreaProvider","PaperProvider","screenOptions","header","BotAppBar","StatusBar","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","every","splice","n","getter","__esModule","definition","o","defineProperty","enumerable","g","globalThis","this","Function","window","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","id","chunkLoadingGlobal","self","forEach","bind","__webpack_exports__"],"sourceRoot":""}