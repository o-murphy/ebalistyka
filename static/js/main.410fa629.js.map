{"version":3,"file":"static/js/main.410fa629.js","mappings":"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","sources":["src/user-data/UserDataContext.tsx","src/screens/placeholder/Placeholder.tsx","src/styles/stylesheet.ts","src/styles/index.ts","src/components/app-bars/BotAppBar.tsx","src/translations/UseTranslate.tsx","src/translations/ukrainian.ts","src/components/app-bars/TopAppBar.tsx","src/components/cards/InputCard.tsx","src/components/dialogs/SimpleDialog.tsx","src/components/wheely/WheelPicker.styles.ts","src/components/wheely/WheelPickerItem.tsx","src/components/wheely/WheelPicker.tsx","src/components/wheely/index.ts","src/components/number-picker/FloatPicker.tsx","src/components/number-picker/IntPicker.tsx","src/components/measure-slider-modal/MeasureSliderModal.tsx","src/components/cards/AtmoCard.tsx","src/components/radio-group/RadioGroup.tsx","src/components/dialogs/SimpleScrollDialog.tsx","src/components/cards/SettingsGeneralCard.tsx","src/components/cards/SettingsUnitCard.tsx","src/components/cards/WeaponCard.tsx","src/components/circular-slider/circularGeometry.ts","src/components/circular-slider/svgPaths.ts","src/components/circular-slider/CircularSliderNative.tsx","src/components/wind-dir-picker/WindDirPicker.tsx","src/components/cards/WindCard.tsx","src/components/cards/ProjectileCard.tsx","src/RootNavigation.tsx","src/components/cards/BulletCard.tsx","src/screens/mutition/MunitionScreen.tsx","src/screens/atmo/CurrentAtmo.tsx","src/screens/settings/SettingsScreen.tsx","src/screens/calculate/Calculate.tsx","src/screens/trajectory/Trajectory.tsx","src/components/cards/drag-model-card/TableValuePicker.tsx","src/components/cards/drag-model-card/MBCTable.tsx","src/components/cards/drag-model-card/CDMTable.tsx","src/components/cards/drag-model-card/index.ts","src/components/cards/drag-model-card/DragModelCard.tsx","src/screens/drag-model/DragModelScreen.tsx","src/screens/home/HomeScreen.tsx","src/RootScreenManager.tsx","App.tsx","webpack/bootstrap","webpack/runtime/amd options","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import React, {createContext, useState, useContext, useEffect} from 'react';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nconst UserDataContext = createContext(null);\r\n\r\nexport const useUserData = () => {\r\n    const context = useContext(UserDataContext);\r\n    if (!context) {\r\n        // Optionally, throw an error or return a default value\r\n        console.error('useUserData must be used within a UserDataProvider');\r\n        return {\r\n            userData: null, saveUserData: () => {}\r\n        }; // Example default value\r\n    }\r\n    return context;\r\n};\r\n\r\nexport const UserDataProvider = ({children}) => {\r\n    const [userData, setUserData] = useState(null);\r\n\r\n    // Load user data\r\n    useEffect(() => {\r\n        const loadUserData = async () => {\r\n            try {\r\n                const jsonValue = await AsyncStorage.getItem('@user_data');\r\n                setUserData(jsonValue != null ? JSON.parse(jsonValue) : null);\r\n            } catch (e) {\r\n                console.error('Error loading user data', e);\r\n            }\r\n        };\r\n\r\n        loadUserData();\r\n    }, []);\r\n\r\n    // Save user data\r\n    const saveUserData = async (data) => {\r\n        try {\r\n            const jsonValue = JSON.stringify(data);\r\n            await AsyncStorage.setItem('@user_data', jsonValue);\r\n            setUserData(data);\r\n        } catch (e) {\r\n            console.error('Error saving user data', e);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <UserDataContext.Provider value={{userData, saveUserData}}>\r\n            {children}\r\n        </UserDataContext.Provider>\r\n    );\r\n};","import React from \"react\";\r\nimport {ScrollView} from 'react-native';\r\nimport {useTheme, Text} from 'react-native-paper';\r\nimport {StyleSheet} from \"react-native\";\r\n\r\n\r\nexport default function Placeholder({text}: { text?: string }) {\r\n\r\n    const theme = useTheme();\r\n\r\n    const styles = StyleSheet.create({\r\n        scrollViewContainer: {\r\n            backgroundColor: theme.colors.background,\r\n        },\r\n    });\r\n\r\n    return (\r\n        <ScrollView\r\n            style={styles.scrollViewContainer}\r\n            keyboardShouldPersistTaps=\"always\"\r\n            alwaysBounceVertical={false}\r\n            showsVerticalScrollIndicator={true}\r\n\r\n            contentContainerStyle={{\r\n                flex: 1,\r\n                justifyContent: 'center',\r\n            }}\r\n        >\r\n            <Text style={{textAlign: \"center\"}}>{text ? text : \"Not implemented yet\"}</Text>\r\n        </ScrollView>\r\n    );\r\n}\r\n","const styleSheet = {\r\n    grid: {\r\n        grid: {\r\n            flex: 1,\r\n        },\r\n        row: {\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n        },\r\n        col: {\r\n            flex: 1,\r\n        },\r\n    },\r\n    card: {\r\n        card: {\r\n            margin: 15,\r\n            padding: 10\r\n        },\r\n        content: {\r\n            marginHorizontal: 0,\r\n            paddingHorizontal: 10\r\n        },\r\n    },\r\n    bottomBar: {\r\n        backgroundColor: 'aquamarine',\r\n        position: 'absolute',\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n    },\r\n    fab: {\r\n        position: 'absolute',\r\n        right: 16\r\n    },\r\n    chip: {\r\n        measure: {\r\n            display: \"flex\",\r\n            // marginLeft: \"auto\",\r\n        },\r\n        measure_text: {\r\n            textAlign: \"right\"\r\n        }\r\n    },\r\n    modal: {\r\n        simple: {\r\n            container: {\r\n                display: \"flex\",\r\n                alignSelf: \"center\",\r\n                // minWidth: 280,\r\n                margin: 20,\r\n                padding: 20\r\n            },\r\n            title: {\r\n                textAlign: \"center\",\r\n                marginBottom: 10\r\n            },\r\n        },\r\n    },\r\n    numberPicker: {\r\n        container: {\r\n            position: 'relative',\r\n        },\r\n        selectedIndicator: {\r\n            position: 'absolute',\r\n            width: '100%',\r\n            backgroundColor: 'hsl(200, 8%, 94%)',\r\n            borderRadius: 5,\r\n            top: '50%',\r\n        },\r\n    }\r\n}\r\n\r\nexport default styleSheet;","import styleSheet from \"./stylesheet\";\r\n\r\nexport default styleSheet;","import React, {useEffect, useState} from 'react';\r\nimport {Appbar, FAB, useTheme} from 'react-native-paper';\r\nimport {useSafeAreaInsets} from 'react-native-safe-area-context';\r\nimport {useNavigation} from \"@react-navigation/native\";\r\nimport styleSheet from \"../../styles\";\r\n\r\n\r\nconst BOTTOM_APPBAR_HEIGHT = 80;\r\nconst MEDIUM_FAB_HEIGHT = 56;\r\n\r\nconst BotAppBar = () => {\r\n    const {bottom} = useSafeAreaInsets();\r\n    const theme = useTheme();\r\n\r\n    const navigation: any = useNavigation()\r\n\r\n    const [currentRoute, setCurrentRoute] = useState('');\r\n    useEffect(() => {\r\n        return navigation.addListener('state', () => {\r\n            const currentRouteName = navigation.getCurrentRoute()?.name || '';\r\n            setCurrentRoute(currentRouteName);\r\n        });\r\n    }, [navigation]);\r\n\r\n    const onFabPress = () => {\r\n        if (!(currentRoute === \"Home\")) {\r\n            navigation.navigate(\"Home\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Appbar\r\n            elevated={true}\r\n            style={[\r\n                styleSheet.bottomBar.position,\r\n                {\r\n                    height: BOTTOM_APPBAR_HEIGHT + bottom,\r\n                    backgroundColor: theme.colors.elevation.level2,\r\n                },\r\n            ]}\r\n            safeAreaInsets={{bottom}}\r\n        >\r\n            <Appbar.Action icon=\"ammunition\" onPress={() => navigation.navigate(\"Munition\")}/>\r\n\r\n\r\n            {\r\n                currentRoute != \"Home\" ?\r\n                    <>\r\n                        <Appbar.Action icon=\"weather-partly-cloudy\"\r\n                                       onPress={() => navigation.navigate(\"Atmosphere\")}/>\r\n                        <Appbar.Action icon=\"calculator\"\r\n                                       onPress={() => navigation.navigate(\"Calculate\")}/>\r\n                        <Appbar.Action icon=\"table-large\"\r\n                                       onPress={() => navigation.navigate(\"Trajectory\")}/>\r\n\r\n                    </>\r\n                    : null\r\n\r\n            }\r\n\r\n            <Appbar.Action icon=\"cog-outline\" onPress={() => navigation.navigate(\"Settings\")}/>\r\n\r\n\r\n            <FAB\r\n                mode=\"flat\"\r\n                size=\"medium\"\r\n                icon={currentRoute === \"Home\" ? \"plus\" : \"home\"}\r\n                onPress={onFabPress}\r\n                style={[\r\n                    styleSheet.fab,\r\n                    {top: (BOTTOM_APPBAR_HEIGHT - MEDIUM_FAB_HEIGHT) / 2},\r\n                ]}\r\n            />\r\n\r\n        </Appbar>\r\n    );\r\n};\r\n\r\n\r\nexport default BotAppBar;","// useTranslate.js\r\nimport { useUserData } from \"../user-data/UserDataContext\";\r\nimport UA from \"./ukrainian\";\r\n\r\nconst languages = {\r\n    UA: UA,\r\n    // Add other languages here\r\n};\r\n\r\nexport const useTranslate = () => {\r\n    const { userData } = useUserData();\r\n\r\n    const translate = (context, str) => {\r\n        const lang = userData?.language ? userData.language : \"EN\";\r\n        console.log(\"translator\", lang);\r\n        return languages[lang]?.[context]?.[str] ? languages[lang][context][str] : str;\r\n    };\r\n\r\n    return translate;\r\n};","const UA = {\r\n    root: {\r\n\r\n    },\r\n    TopAppBar: {\r\n      \"Home\": \"Home\",\r\n      \"Munition\": \"Профіль\",\r\n      \"Atmosphere\": \"Атмосфера\",\r\n      \"Calculate\": \"Розрахунок\",\r\n      \"Trajectory\": \"Траекторія\",\r\n      \"Settings\": \"Налаштування\",\r\n    },\r\n    SettingsGeneralCard: {\r\n        \"Language\": \"Мова\",\r\n        \"General\": \"Головні\"\r\n    },\r\n    SettingsUnitCard: {\r\n        \"Units of measurement\": \"Одиниці вимірювання\",\r\n        \"Distance\": \"Дистанція\",\r\n        \"Velocity\": \"Швидкість\",\r\n        \"Angular\": \"Кутові\",\r\n        \"Pressure\": \"Тиск\",\r\n        \"Temperature\": \"Температура\",\r\n        \"Weight\": \"Вага\",\r\n        \"Sizes\": \"Розміри\",\r\n        \"Energy\": \"Енергія\",\r\n        \"Adjustment\": \"Поправки\",\r\n    },\r\n    WeaponCard: {\r\n        \"Weapon\": \"Зброя\",\r\n        \"Name\": \"Назва\",\r\n        \"My rifle\": \"Моя гвинтівка\",\r\n        \"Diameter\": \"Діаметр\",\r\n        \"Sight height\": \"Висота прицілу\",\r\n        \"Twist\": \"Оберти\",\r\n        \"Twist direction\": \"Напрям обертів\",\r\n        \"Right\": \"Праві\",\r\n        \"Left\": \"Ліві\",\r\n    },\r\n    ProjectileCard: {\r\n        \"Projectile\": \"Патрон\",\r\n        \"Name\": \"Назва\",\r\n        \"My projectile\": \"Мій патрон\",\r\n        \"Muzzle velocity\": \"Початкова швидкість\",\r\n        \"Powder temperature\": \"Температура пороху\",\r\n        \"Temperature coefficient\": \"Температурна чутливість\",\r\n    },\r\n    BulletCard: {\r\n        \"Bullet\": \"Куля\",\r\n        \"Name\": \"Назва\",\r\n        \"My bullet\": \"Моя куля\",\r\n        \"Diameter\": \"Діаметр\",\r\n        \"Weight\": \"Вага\",\r\n        \"Length\": \"Довжина\",\r\n        \"Drag model\": \"Драг-функція\",\r\n    },\r\n    AtmoCard: {\r\n        \"Current atmosphere\": \"Поточна атмосфера\",\r\n        \"Pressure\": \"Тиск\",\r\n        \"Temperature\": \"Температура\",\r\n        \"Altitude\": \"Висота над рівнем моря\"\r\n    },\r\n    WindCard: {\r\n        \"Current wind\": \"Поточний вітер\",\r\n        \"Wind speed\": \"Швидкість вітру\",\r\n        \"Wind direction\": \"Напрямок вітру\",\r\n    }\r\n}\r\n\r\nexport default UA;","import { Appbar } from 'react-native-paper';\r\nimport { Platform } from 'react-native';\r\nimport { getHeaderTitle } from '@react-navigation/elements';\r\nimport {useTranslate} from \"../../translations/UseTranslate\";\r\n\r\nconst MORE_ICON = Platform.OS === 'ios' ? 'dots-horizontal' : 'dots-vertical';\r\n\r\n\r\nexport default function TopAppBar({...props}) {\r\n    const {navigation, route, options, back, params} = props;\r\n    const { nightMode, toggleNightMode } = params;\r\n    const title = getHeaderTitle(options, route.name);\r\n\r\n    const me = TopAppBar.name\r\n    const translator = useTranslate()\r\n    const tr = (str) => translator(me, str)\r\n\r\n    return (\r\n        <Appbar.Header elevated={true} >\r\n            {back ? <Appbar.BackAction onPress={navigation.goBack} /> : null}\r\n            <Appbar.Content title={tr(title)} />\r\n            <Appbar.Action\r\n                icon={nightMode ? \"brightness-7\" : \"brightness-3\"}\r\n                onPress={() => toggleNightMode(!nightMode)}\r\n            />\r\n            {/*{route.name === \"Home\" ? <Appbar.Action icon='cog' onPress={() => navigation.navigate('Settings')} /> : null}*/}\r\n            <Appbar.Action icon={MORE_ICON} onPress={() => { }} />\r\n\r\n\r\n        </Appbar.Header>\r\n    );\r\n\r\n}\r\n","import {Card} from \"react-native-paper\";\r\nimport React from \"react\";\r\nimport styleSheet from \"../../styles\";\r\n\r\n\r\n\r\nconst InputCard = ({children, title}) => {\r\n\r\n    return (\r\n        <Card mode=\"elevated\" elevation={1}\r\n              style={[styleSheet.card.card]}\r\n        >\r\n            <Card.Title titleVariant={\"titleLarge\"} title={title}></Card.Title>\r\n            <Card.Content style={styleSheet.card.content}>\r\n                {children}\r\n            </Card.Content>\r\n        </Card>\r\n    )\r\n}\r\n\r\n\r\nexport default InputCard;","import * as React from 'react';\r\nimport {Portal, Chip, useTheme, Button, Dialog, Text, FAB, Icon} from 'react-native-paper';\r\nimport {View} from \"react-native\";\r\n\r\n\r\nconst SimpleDialog = ({\r\n                         children,\r\n                         label,\r\n                         text,\r\n                         icon = null,\r\n                         onAccept = null,\r\n                         onDecline = null\r\n                     }) => {\r\n\r\n    const [visible, setVisible] = React.useState(false);\r\n\r\n    const showDialog = () => setVisible(true);\r\n    const hideDialog = () => {\r\n        setVisible(false);\r\n    };\r\n\r\n    const onAcceptBtn = () => {\r\n        if (onAccept) onAccept();\r\n        setVisible(false);\r\n    }\r\n\r\n    const onDeclineBtn = () => {\r\n        if (onDecline) onDecline();\r\n        setVisible(false);\r\n    }\r\n\r\n    return (\r\n        <View style={{display: \"flex\", justifyContent: \"center\"}}>\r\n            <Chip icon={icon} closeIcon=\"square-edit-outline\" style={{margin: 0}} textStyle={{fontSize: 16}}\r\n                  onPress={showDialog}\r\n                  onClose={showDialog}\r\n            >\r\n                {text}\r\n            </Chip>\r\n            <Portal>\r\n\r\n                <Dialog visible={visible} onDismiss={hideDialog} style={{justifyContent: \"center\"}}>\r\n                    <Dialog.Title>{label}</Dialog.Title>\r\n\r\n                    <Dialog.Content>{children}</Dialog.Content>\r\n\r\n                    <Dialog.Actions>\r\n                        <FAB icon=\"close\" mode={\"flat\"} size={'small'} onPress={onDeclineBtn}\r\n                             variant={'tertiary'} color={useTheme().colors.tertiary}/>\r\n                        <FAB icon=\"check\" mode={\"flat\"} size={'small'} onPress={onAcceptBtn}/>\r\n                    </Dialog.Actions>\r\n                </Dialog>\r\n\r\n            </Portal>\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default SimpleDialog;","import { StyleSheet } from 'react-native';\r\n\r\nexport default StyleSheet.create({\r\n  container: {\r\n    position: 'relative',\r\n  },\r\n  selectedIndicator: {\r\n    position: 'absolute',\r\n    width: '100%',\r\n    backgroundColor: 'hsl(200, 8%, 94%)',\r\n    borderRadius: 5,\r\n    top: '50%',\r\n  },\r\n  scrollView: {\r\n    overflow: 'hidden',\r\n    flex: 1,\r\n  },\r\n  option: {\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    paddingHorizontal: 16,\r\n    zIndex: 100,\r\n  },\r\n});\r\n","import React from 'react';\r\nimport { StyleProp, TextStyle, Animated, Text, ViewStyle } from 'react-native';\r\nimport styles from './WheelPicker.styles';\r\n\r\ninterface ItemProps {\r\n  textStyle: StyleProp<TextStyle>;\r\n  style: StyleProp<ViewStyle>;\r\n  option: string | null;\r\n  height: number;\r\n  index: number;\r\n  currentScrollIndex: Animated.AnimatedAddition<any>;\r\n  visibleRest: number;\r\n  rotationFunction: (x: number) => number;\r\n  opacityFunction: (x: number) => number;\r\n  scaleFunction: (x: number) => number;\r\n}\r\n\r\nconst WheelPickerItem: React.FC<ItemProps> = ({\r\n  textStyle,\r\n  style,\r\n  height,\r\n  option,\r\n  index,\r\n  visibleRest,\r\n  currentScrollIndex,\r\n  opacityFunction,\r\n  rotationFunction,\r\n  scaleFunction\r\n}) => {\r\n  const relativeScrollIndex = Animated.subtract(index, currentScrollIndex);\r\n\r\n  const translateY = relativeScrollIndex.interpolate({\r\n    inputRange: (() => {\r\n      const range = [0];\r\n      for (let i = 1; i <= visibleRest + 1; i++) {\r\n        range.unshift(-i);\r\n        range.push(i);\r\n      }\r\n      return range;\r\n    })(),\r\n    outputRange: (() => {\r\n      const range = [0];\r\n      for (let i = 1; i <= visibleRest + 1; i++) {\r\n        let y =\r\n          (height / 2) * (1 - Math.sin(Math.PI / 2 - rotationFunction(i)));\r\n        for (let j = 1; j < i; j++) {\r\n          y += height * (1 - Math.sin(Math.PI / 2 - rotationFunction(j)));\r\n        }\r\n        range.unshift(y);\r\n        range.push(-y);\r\n      }\r\n      return range;\r\n    })(),\r\n  });\r\n\r\n  const opacity = relativeScrollIndex.interpolate({\r\n    inputRange: (() => {\r\n      const range = [0];\r\n      for (let i = 1; i <= visibleRest + 1; i++) {\r\n        range.unshift(-i);\r\n        range.push(i);\r\n      }\r\n      return range;\r\n    })(),\r\n    outputRange: (() => {\r\n      const range = [1];\r\n      for (let x = 1; x <= visibleRest + 1; x++) {\r\n        const y = opacityFunction(x);\r\n        range.unshift(y);\r\n        range.push(y);\r\n      }\r\n      return range;\r\n    })(),\r\n  });\r\n\r\n  const scale = relativeScrollIndex.interpolate({\r\n    inputRange: (() => {\r\n      const range = [0];\r\n      for (let i = 1; i <= visibleRest + 1; i++) {\r\n        range.unshift(-i);\r\n        range.push(i);\r\n      }\r\n      return range;\r\n    })(),\r\n    outputRange: (() => {\r\n      const range = [1.0];\r\n      for (let x = 1; x <= visibleRest + 1; x++) {\r\n        const y = scaleFunction(x);\r\n        range.unshift(y);\r\n        range.push(y);\r\n      }\r\n      return range;\r\n    })(),\r\n  });\r\n\r\n  const rotateX = relativeScrollIndex.interpolate({\r\n    inputRange: (() => {\r\n      const range = [0];\r\n      for (let i = 1; i <= visibleRest + 1; i++) {\r\n        range.unshift(-i);\r\n        range.push(i);\r\n      }\r\n      return range;\r\n    })(),\r\n    outputRange: (() => {\r\n      const range = ['0deg'];\r\n      for (let x = 1; x <= visibleRest + 1; x++) {\r\n        const y = rotationFunction(x);\r\n        range.unshift(`${y}deg`);\r\n        range.push(`${y}deg`);\r\n      }\r\n      return range;\r\n    })(),\r\n  });\r\n\r\n  return (\r\n    <Animated.View\r\n      style={[\r\n        styles.option,\r\n        style,\r\n        {  height, opacity, transform: [{ translateY }, { rotateX }, { scale }]},\r\n      ]}\r\n    >\r\n      <Text style={textStyle}>{option}</Text>\r\n    </Animated.View>\r\n  );\r\n};\r\n\r\nexport default React.memo(\r\n  WheelPickerItem,\r\n  /**\r\n   * We enforce that this component will not rerender after the initial render.\r\n   * Therefore props that change on every render like style objects or functions\r\n   * do not need to be wrapped into useMemo and useCallback.\r\n   */\r\n  () => true,\r\n);\r\n","import React, { useEffect, useMemo, useRef, useState } from 'react';\r\nimport {\r\n  StyleProp,\r\n  TextStyle,\r\n  NativeSyntheticEvent,\r\n  NativeScrollEvent,\r\n  Animated,\r\n  ViewStyle,\r\n  View,\r\n  ViewProps,\r\n  FlatListProps,\r\n  FlatList,\r\n  Platform\r\n} from 'react-native';\r\nimport styles from './WheelPicker.styles';\r\nimport WheelPickerItem from './WheelPickerItem';\r\n\r\ninterface Props {\r\n  selectedIndex: number;\r\n  options: string[];\r\n  onChange: (index: number) => void;\r\n  selectedIndicatorStyle?: StyleProp<ViewStyle>;\r\n  itemTextStyle?: TextStyle;\r\n  itemStyle?: ViewStyle;\r\n  itemHeight?: number;\r\n  containerStyle?: ViewStyle;\r\n  containerProps?: Omit<ViewProps, 'style'>;\r\n  scaleFunction?: (x: number) => number;\r\n  rotationFunction?: (x: number) => number;\r\n  opacityFunction?: (x: number) => number;\r\n  visibleRest?: number;\r\n  decelerationRate?: 'normal' | 'fast' | number;\r\n  flatListProps?: Omit<FlatListProps<string | null>, 'data' | 'renderItem'>;\r\n}\r\n\r\nconst WheelPicker: React.FC<Props> = ({\r\n  selectedIndex,\r\n  options,\r\n  onChange,\r\n  selectedIndicatorStyle = {},\r\n  containerStyle = {},\r\n  itemStyle = {},\r\n  itemTextStyle = {},\r\n  itemHeight = 40,\r\n  scaleFunction = (x: number) => 1.0 ** x,\r\n  rotationFunction = (x: number) => 1 - Math.pow(1 / 2, x),\r\n  opacityFunction = (x: number) => Math.pow(1 / 3, x),\r\n  visibleRest = 2,\r\n  decelerationRate = 'fast',\r\n  containerProps = {},\r\n  flatListProps = {},\r\n}) => {\r\n  const flatListRef = useRef<FlatList>(null);\r\n  const [scrollY] = useState(new Animated.Value(0));\r\n\r\n  const lastScrollTimestamp = useRef(new Date().getTime());\r\n\r\n\r\n  const containerHeight = (1 + visibleRest * 2) * itemHeight;\r\n  const [scrollIndex, setScrollIndex] = useState(selectedIndex);\r\n  const paddedOptions = useMemo(() => {\r\n    const array: (string | null)[] = [...options];\r\n    for (let i = 0; i < visibleRest; i++) {\r\n      array.unshift(null);\r\n      array.push(null);\r\n    }\r\n    return array;\r\n  }, [options, visibleRest]);\r\n\r\n  const offsets = useMemo(\r\n    () => [...Array(paddedOptions.length)].map((x, i) => i * itemHeight),\r\n    [paddedOptions, itemHeight],\r\n  );\r\n\r\n  const currentScrollIndex = useMemo(\r\n    () => Animated.add(Animated.divide(scrollY, itemHeight), visibleRest),\r\n    [visibleRest, scrollY, itemHeight],\r\n  );\r\n\r\n  const handleMomentumScrollEnd = (\r\n    event: NativeSyntheticEvent<NativeScrollEvent>,\r\n  ) => {\r\n    // Due to list bounciness when scrolling to the start or the end of the list\r\n    // the offset might be negative or over the last item.\r\n    // We therefore clamp the offset to the supported range.\r\n    const offsetY = Math.min(\r\n      itemHeight * (options.length - 1),\r\n      Math.max(event.nativeEvent.contentOffset.y, 0),\r\n    );\r\n\r\n    let index = Math.floor(Math.floor(offsetY) / itemHeight);\r\n    const last = Math.floor(offsetY % itemHeight);\r\n    if (last > itemHeight / 2) index++;\r\n\r\n    if (index !== selectedIndex) {\r\n      onChange(index);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (selectedIndex < 0 || selectedIndex >= options.length) {\r\n      throw new Error(\r\n        `Selected index ${selectedIndex} is out of bounds [0, ${\r\n          options.length - 1\r\n        }]`,\r\n      );\r\n    }\r\n  }, [selectedIndex, options]);\r\n\r\n  /**\r\n   * If selectedIndex is changed from outside (not via onChange) we need to scroll to the specified index.\r\n   * This ensures that what the user sees as selected in the picker always corresponds to the value state.\r\n   */\r\n  useEffect(() => {\r\n    flatListRef.current?.scrollToIndex({\r\n      index: selectedIndex,\r\n      animated: false,\r\n    });\r\n  }, [selectedIndex]);\r\n\r\n  useEffect(() => {\r\n    if (Platform.OS === 'web') {\r\n      const SCROLL_COOLDOWN_MILLISECONDS = 100;\r\n      const SCROLL_DID_STOP_TIMEOUT = 500;\r\n      const intervalID = setInterval(() => {\r\n        const time = new Date().getTime();\r\n        const difference = time - lastScrollTimestamp.current;\r\n        if (difference > SCROLL_DID_STOP_TIMEOUT) {\r\n          flatListRef.current?.scrollToIndex({\r\n            index: scrollIndex,\r\n            animated: true,\r\n          });\r\n        }\r\n      }, SCROLL_COOLDOWN_MILLISECONDS);\r\n      return () => {\r\n        clearInterval(intervalID);\r\n      };\r\n    }\r\n  }, [scrollIndex]);\r\n\r\n  useEffect(() => {\r\n    if (Platform.OS === 'web') {\r\n      onChange(scrollIndex);\r\n    }\r\n  }, [scrollIndex, onChange]);\r\n\r\n  const handleScroll = (event: NativeSyntheticEvent<any>) => {\r\n    if (Platform.OS === 'web') {\r\n      const positionY = event.nativeEvent.contentOffset.y;\r\n      const index = Math.round(positionY / itemHeight);\r\n      setScrollIndex(index);\r\n      lastScrollTimestamp.current = new Date().getTime();\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <View\r\n      style={[styles.container, { height: containerHeight }, containerStyle]}\r\n      {...containerProps}\r\n    >\r\n      <View\r\n        style={[\r\n          styles.selectedIndicator,\r\n          selectedIndicatorStyle,\r\n          {\r\n            transform: [{ translateY: -itemHeight / 2 }],\r\n            height: itemHeight,\r\n          },\r\n        ]}\r\n      />\r\n      <Animated.FlatList<string | null>\r\n        {...flatListProps}\r\n        ref={flatListRef}\r\n        style={styles.scrollView}\r\n        showsVerticalScrollIndicator={false}\r\n        onScroll={Animated.event(\r\n          [{ nativeEvent: { contentOffset: { y: scrollY } } }],\r\n          {\r\n            useNativeDriver: true,\r\n            listener: (event: NativeSyntheticEvent<any>\r\n            ) => handleScroll(event),\r\n          },\r\n        )}\r\n        onMomentumScrollEnd={handleMomentumScrollEnd}\r\n        snapToOffsets={offsets}\r\n        decelerationRate={decelerationRate}\r\n        initialScrollIndex={selectedIndex}\r\n        getItemLayout={(data, index) => ({\r\n          length: itemHeight,\r\n          offset: itemHeight * index,\r\n          index,\r\n        })}\r\n        data={paddedOptions}\r\n        keyExtractor={(item, index) => index.toString()}\r\n        renderItem={({ item: option, index }) => (\r\n          <WheelPickerItem\r\n            key={`option-${index}`}\r\n            index={index}\r\n            option={option}\r\n            style={itemStyle}\r\n            textStyle={itemTextStyle}\r\n            height={itemHeight}\r\n            currentScrollIndex={currentScrollIndex}\r\n            scaleFunction={scaleFunction}\r\n            rotationFunction={rotationFunction}\r\n            opacityFunction={opacityFunction}\r\n            visibleRest={visibleRest}\r\n          />\r\n        )}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default WheelPicker;\r\n","import WheelPicker from './WheelPicker';\r\n\r\nexport default WheelPicker;","import React, {useState} from 'react';\r\nimport WheelPicker from '../wheely';\r\nimport styleSheet from \"../../styles\";\r\nimport {useTheme} from \"react-native-paper\";\r\nimport {View} from \"react-native\";\r\nimport type {NumberPickerProps} from \"./NumberPickerProps\";\r\n\r\n\r\nconst IntegerWheelPicker = ({...props}: NumberPickerProps) => {\r\n    const {curValue, minValue, maxValue, onChange, wheelProps} = props\r\n\r\n    const intRange: number[] = []\r\n    for (let i = Math.floor(minValue); i <= Math.floor(maxValue); i++) {\r\n        intRange.push(i)\r\n    }\r\n\r\n    const onIndexChange = (index: number): void => {\r\n        onChange(intRange[index]);\r\n    }\r\n\r\n    return (\r\n        <WheelPicker\r\n            {...wheelProps}\r\n            selectedIndex={intRange.indexOf(curValue)}\r\n            options={intRange.map(item => `${item}`)}\r\n            onChange={onIndexChange}\r\n        />\r\n    )\r\n}\r\n\r\n\r\nconst DecimalWheelPicker = ({...props}: NumberPickerProps) => {\r\n\r\n    const {curValue, decimals, onChange, wheelProps} = props\r\n\r\n    const decimalFormat = (value: number): string => (value % 1).toFixed(decimals).slice(1);\r\n    const decimalStep = 1 / (10 ** decimals)\r\n    const createDecimalOptions = (): string[] => {\r\n        let list = []\r\n        for (let i = 0; i < 1; i += decimalStep) {\r\n            list.push(decimalFormat(i))\r\n        }\r\n        return list\r\n    }\r\n\r\n    const decimalsOptions: string[] = createDecimalOptions()\r\n\r\n    const onDecimalChange = (index: number): void => {\r\n        onChange(parseFloat(decimalsOptions[index]));\r\n    }\r\n\r\n    return (\r\n        <WheelPicker\r\n            {...wheelProps}\r\n            selectedIndex={decimalsOptions.indexOf(decimalFormat(curValue))}\r\n            options={decimalsOptions}\r\n            onChange={onDecimalChange}\r\n        />\r\n    )\r\n}\r\n\r\n\r\nexport default function FloatPicker({...props}: NumberPickerProps) {\r\n\r\n    const {curValue, minValue, maxValue, decimals, onChange} = props\r\n\r\n    const theme = useTheme()\r\n\r\n    const style = {\r\n        selectedIndicatorStyle: {\r\n            ...styleSheet.numberPicker.selectedIndicator,\r\n            borderRadius: 0, backgroundColor: theme.colors.onSecondary\r\n        },\r\n        itemTextStyle: {color: theme.colors.secondary, fontWeight: \"bold\", fontSize: 24},\r\n        containerStyle: {\r\n            ...styleSheet.numberPicker.container,\r\n            backgroundColor: theme.colors.secondaryContainer,\r\n            marginTop: 10\r\n        }\r\n    }\r\n\r\n    const intWheelProps = {\r\n        ...style,\r\n        containerStyle: {...style.containerStyle, borderTopLeftRadius: 24, borderBottomLeftRadius: 24},\r\n        itemStyle: {marginLeft: \"auto\", marginRight: 0, paddingRight: 5},\r\n    }\r\n\r\n    const decimalWheelProps = {\r\n        ...style,\r\n        containerStyle: {...style.containerStyle, borderTopRightRadius: 24, borderBottomRightRadius: 24},\r\n        itemStyle: {marginLeft: 0, marginRight: \"auto\", paddingLeft: 5},\r\n    }\r\n\r\n    const [int, setInt] = useState(Math.floor(curValue))\r\n    const [decimal, setDecimal] = useState(curValue % 1)\r\n    const onValueChange = (value: number) => {\r\n        onChange ? onChange(value) : null\r\n    }\r\n\r\n    const onIntChange = (value) => {\r\n        setInt(value)\r\n        onValueChange(value + decimal)\r\n    }\r\n\r\n    const onDecimalChange = (value) => {\r\n        setDecimal(value)\r\n        onValueChange(value + int)\r\n    }\r\n\r\n    return (\r\n        <View style={{flexDirection: \"row\", justifyContent: 'center'}}>\r\n            <IntegerWheelPicker\r\n                wheelProps={intWheelProps}\r\n                {...{...props, curValue: int}}\r\n                onChange={onIntChange}\r\n            />\r\n\r\n            <DecimalWheelPicker\r\n                wheelProps={decimalWheelProps}\r\n                {...{...props, curValue: decimal}}\r\n                onChange={onDecimalChange}\r\n            />\r\n        </View>\r\n    );\r\n}","import React from 'react';\r\nimport WheelPicker from '../wheely';\r\nimport styleSheet from \"../../styles\";\r\nimport {useTheme} from \"react-native-paper\";\r\nimport {View} from \"react-native\";\r\nimport type {NumberPickerProps} from \"./NumberPickerProps\";\r\n\r\n\r\nexport default function IntPicker({...props}: NumberPickerProps) {\r\n    const {maxValue, minValue, onChange, curValue} = props\r\n\r\n    const theme = useTheme()\r\n\r\n    const range = []\r\n    for (let i = minValue; i <= maxValue; i++) {\r\n        range.push(i)\r\n    }\r\n\r\n    const onValueChange = (index: number) => {\r\n        if (onChange) onChange(range[index]);\r\n    }\r\n\r\n    const style: any = {\r\n        selectedIndicatorStyle: {\r\n            ...styleSheet.numberPicker.selectedIndicator,\r\n            borderRadius: 0,\r\n            backgroundColor: theme.colors.onSecondary\r\n        },\r\n        containerStyle: {\r\n            ...styleSheet.numberPicker.container,\r\n            backgroundColor: theme.colors.secondaryContainer,\r\n            borderRadius: 24,\r\n            marginTop: 10\r\n        },\r\n        itemTextStyle: {color: theme.colors.secondary, fontWeight: \"bold\", fontSize: 24},\r\n    }\r\n\r\n    return (\r\n        <View style={{flexDirection: \"row\", justifyContent: 'center'}}>\r\n            <WheelPicker\r\n                {...style}\r\n                selectedIndex={range.indexOf(curValue)}\r\n                options={range}\r\n                onChange={onValueChange}\r\n            />\r\n        </View>\r\n    );\r\n}","import React, {useState} from \"react\";\r\nimport {Col, Row} from \"react-native-paper-grid\";\r\nimport styleSheet from \"../../styles\";\r\nimport {Text} from \"react-native-paper\";\r\nimport SimpleDialog from \"../dialogs/SimpleDialog\";\r\nimport {IntPicker, FloatPicker} from \"../number-picker\";\r\n\r\n\r\nexport interface MeasureField {\r\n    field: {\r\n        key: any\r\n        label: string\r\n        suffix: string\r\n        icon: string\r\n        mode: (\"int\" | \"float\")\r\n        initialValue: number\r\n        maxValue: number\r\n        minValue: number\r\n        decimals: number\r\n    }\r\n}\r\n\r\n\r\nexport default function MeasureSliderModal({field}: MeasureField) {\r\n    const [curValue, setCurValue] = useState(field.initialValue);\r\n    const [value, setValue] = useState(curValue)\r\n\r\n    const onAccept = () => {\r\n        setCurValue(value)\r\n    }\r\n\r\n    const onDecline = () => {\r\n        setValue(value)\r\n    }\r\n\r\n    const pickerProps = {\r\n        ...field,\r\n        curValue: curValue,\r\n        onChange: setValue\r\n    }\r\n\r\n    const picker = field.mode === \"int\"\r\n        ? <IntPicker {...pickerProps}/>\r\n        : <FloatPicker {...pickerProps}/>\r\n\r\n    return (\r\n        <Row style={styleSheet.grid.row}>\r\n            <Col size={8}>\r\n                <Text style={{fontSize: 16}}>{field.label}</Text>\r\n            </Col>\r\n            <Col size={8}>\r\n                <SimpleDialog icon={field.icon} label={`${field.label}, ${field.suffix}`}\r\n                              text={`${curValue.toFixed(field.decimals)} ${field.suffix}`}\r\n                              onAccept={onAccept}\r\n                              onDecline={onDecline}>\r\n                    {picker}\r\n                </SimpleDialog>\r\n            </Col>\r\n        </Row>)\r\n}","import {Grid} from \"react-native-paper-grid\";\r\nimport React from \"react\";\r\nimport InputCard from \"./InputCard\";\r\nimport styleSheet from \"../../styles\";\r\nimport {Unit, UnitProps} from \"js-ballistics\";\r\nimport MeasureSliderModal from \"../measure-slider-modal/MeasureSliderModal\";\r\nimport {useTranslate} from \"../../translations/UseTranslate\";\r\n\r\n\r\nexport default function AtmoCard() {\r\n\r\n    const me = AtmoCard.name\r\n    const translator = useTranslate()\r\n    const tr = (str) => translator(me, str)\r\n\r\n    const fields = [\r\n        {\r\n            key: \"temp\",\r\n            label: tr(\"Temperature\"),\r\n            suffix: UnitProps[Unit.Celsius].symbol,\r\n            icon: \"thermometer\",\r\n            mode: \"int\" as const,\r\n            initialValue: 15,\r\n            maxValue: 50,\r\n            minValue: -50,\r\n            decimals: 0\r\n        },\r\n        {\r\n            key: \"pressure\",\r\n            label: tr(\"Pressure\"),\r\n            suffix: UnitProps[Unit.MmHg].symbol,\r\n            icon: \"speedometer\",\r\n            mode: \"int\" as const,\r\n            initialValue: 760,\r\n            maxValue: 1000,\r\n            minValue: 700,\r\n            decimals: 0\r\n        },\r\n        {\r\n            key: \"humidity\",\r\n            label: tr(\"Humidity\"),\r\n            suffix: \"%\",\r\n            icon: \"water\",\r\n            mode: \"int\" as const,\r\n            initialValue: 78,\r\n            maxValue: 100,\r\n            minValue: 0,\r\n            decimals: 0\r\n        },\r\n        {\r\n            key: \"altitude\",\r\n            label: tr(\"Altitude\"),\r\n            suffix: UnitProps[Unit.Meter].symbol,\r\n            icon: \"ruler\",\r\n            mode: \"int\" as const,\r\n            initialValue: 150,\r\n            maxValue: 3000,\r\n            minValue: 0,\r\n            decimals: 0,\r\n        },\r\n    ]\r\n\r\n    return (\r\n        <InputCard title={tr(\"Current atmosphere\")}>\r\n            <Grid style={styleSheet.grid.grid}>\r\n                {fields.map(field => <MeasureSliderModal key={field.key} field={field}/>)}\r\n            </Grid>\r\n        </InputCard>\r\n    )\r\n}","import React, {useState} from \"react\";\r\nimport {List, RadioButton} from \"react-native-paper\";\r\n\r\ntype RadioItem = {\r\n    label: string\r\n    key: any\r\n    value: any\r\n}\r\n\r\n\r\ntype RadioProps = {\r\n    initialValue: any\r\n    onChange: Function|any\r\n    items: RadioItem[]\r\n}\r\n\r\n\r\nexport default function RadioGroup({initialValue, onChange, items}: RadioProps) {\r\n\r\n    const [value, setValue] = useState(initialValue);\r\n\r\n    const onValueChange = (value: number) => {\r\n        setValue(value);\r\n        if (onChange) onChange(value);\r\n    }\r\n\r\n    return (\r\n            <RadioButton.Group onValueChange={onValueChange} value={value}>\r\n                {items.map(item =>\r\n                        <RadioButton.Item key={item.value} label={item.label} value={item.value}/>\r\n                )}\r\n            </RadioButton.Group>\r\n    );\r\n\r\n}","import * as React from 'react';\r\nimport {Portal, Chip, useTheme, Button, Dialog, Text, FAB} from 'react-native-paper';\r\nimport {ScrollView, View} from \"react-native\";\r\n\r\n\r\nconst SimpleScrollDialog = ({\r\n                         children,\r\n                         title,\r\n                         text,\r\n                         icon = null,\r\n                         onAccept = null,\r\n                         onDecline = null\r\n                     }) => {\r\n\r\n    const [visible, setVisible] = React.useState(false);\r\n\r\n    const showDialog = () => setVisible(true);\r\n    const hideDialog = () => {\r\n        setVisible(false);\r\n    };\r\n\r\n    const onAcceptBtn = () => {\r\n        if (onAccept) onAccept();\r\n        setVisible(false);\r\n    }\r\n\r\n    const onDeclineBtn = () => {\r\n        if (onDecline) onDecline();\r\n        setVisible(false);\r\n    }\r\n\r\n    return (\r\n        <View style={{display: \"flex\", justifyContent: \"center\"}}>\r\n            <Chip icon={icon} closeIcon=\"square-edit-outline\" style={{margin: 0}} textStyle={{fontSize: 16}}\r\n                  onPress={showDialog}\r\n                  onClose={showDialog}\r\n                // textStyle={{fontSize: 18}}\r\n            >\r\n                {text}\r\n            </Chip>\r\n            <Portal>\r\n\r\n                <Dialog visible={visible} onDismiss={hideDialog} style={{justifyContent: \"center\"}}>\r\n                    <Dialog.Title>{title}</Dialog.Title>\r\n\r\n                    <Dialog.ScrollArea>\r\n                        <ScrollView contentContainerStyle={{padding: 24}}>\r\n                            {children}\r\n                        </ScrollView>\r\n                    </Dialog.ScrollArea>\r\n\r\n                    <Dialog.Actions>\r\n                        <FAB icon=\"close\" mode={\"flat\"} size={'small'} onPress={onDeclineBtn}\r\n                             variant={'tertiary'} color={useTheme().colors.tertiary}/>\r\n                        <FAB icon=\"check\" mode={\"flat\"} size={'small'} onPress={onAcceptBtn}/>\r\n                    </Dialog.Actions>\r\n                </Dialog>\r\n\r\n            </Portal>\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default SimpleScrollDialog;","import {Text} from \"react-native-paper\"\r\nimport {Col, Grid, Row} from \"react-native-paper-grid\";\r\nimport InputCard from \"./InputCard\";\r\nimport styleSheet from \"../../styles\";\r\n\r\nimport {useState} from \"react\";\r\nimport RadioGroup from \"../radio-group/RadioGroup\";\r\nimport {SimpleScrollDialog} from \"../dialogs\";\r\nimport {useTranslate} from \"../../translations/UseTranslate\";\r\nimport {useUserData, UserDataProvider} from \"../../user-data/UserDataContext\";\r\n\r\nexport default function SettingsGeneralCard() {\r\n\r\n    // translator\r\n    const me = SettingsGeneralCard.name\r\n    const translator = useTranslate()\r\n    const tr = (str) => translator(me, str)\r\n\r\n\r\n    const {userData, saveUserData} = useUserData();\r\n    if (userData?.language) {\r\n\r\n    }\r\n\r\n    const curLanguage = () => {\r\n        return userData?.language ? userData.language : \"EN\"\r\n    }\r\n    const setCurLanguage = (language) => {\r\n        const updatedData = {...userData, language: language}; // Modify as needed\r\n        saveUserData(updatedData);\r\n    }\r\n\r\n    const languageList = [\r\n        {\r\n            label: \"English\",\r\n            value: \"EN\",\r\n            key: \"EN\"\r\n        },\r\n        {\r\n            label: \"Українська\",\r\n            value: \"UA\",\r\n            key: \"UA\"\r\n        },\r\n    ];\r\n\r\n    const [language, setLanguage] = useState(curLanguage());\r\n\r\n    const onAccept = () => {\r\n        setCurLanguage(language)\r\n    }\r\n\r\n    const onDecline = () => {\r\n        setLanguage(curLanguage())\r\n    }\r\n\r\n    return (\r\n\r\n        <InputCard title={tr(\"General\")}>\r\n            <Grid style={styleSheet.grid.grid}>\r\n\r\n                <Row style={styleSheet.grid.row}>\r\n                    <Col size={9}>\r\n                        <Text style={{fontSize: 16}}>{tr(\"Language\")}</Text>\r\n                    </Col>\r\n                    <Col size={7}>\r\n                        <SimpleScrollDialog title={tr(\"Language\")} text={curLanguage()} icon={\"translate\"}\r\n                                            onAccept={onAccept}\r\n                                            onDecline={onDecline}>\r\n                            <RadioGroup initialValue={curLanguage()} onChange={setLanguage} items={languageList}/>\r\n                        </SimpleScrollDialog>\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Grid>\r\n        </InputCard>\r\n    )\r\n\r\n}\r\n","import {Text} from \"react-native-paper\"\r\nimport {Col, Grid, Row} from \"react-native-paper-grid\";\r\nimport InputCard from \"./InputCard\";\r\nimport styleSheet from \"../../styles\";\r\n\r\n\r\nimport {\r\n    Unit,\r\n    UnitProps,\r\n    Measure,\r\n} from \"js-ballistics\"\r\nimport {SimpleScrollDialog} from \"../dialogs\";\r\nimport {useState} from \"react\";\r\nimport RadioGroup from \"../radio-group/RadioGroup\";\r\nimport {useTranslate} from \"../../translations/UseTranslate\";\r\n\r\n\r\nconst get_unit_list = (measure: Object) =>\r\n    Object.keys(measure).map((key: string): { label: string, value: Unit } => {\r\n        return {label: UnitProps[measure[key]].name, value: measure[key]}\r\n    })\r\n\r\n\r\nexport default function SettingsUnitCard() {\r\n    // translator\r\n    const me = SettingsUnitCard.name\r\n    const translator = useTranslate()\r\n    const tr = (str) => translator(me, str)\r\n\r\n    const fields = [\r\n        {\r\n            key: \"distance\",\r\n            label: tr(\"Distance\"),\r\n            list: [\r\n                {label: UnitProps[Unit.Meter].name, value: Unit.Meter},\r\n                {label: UnitProps[Unit.Foot].name, value: Unit.Foot},\r\n                {label: UnitProps[Unit.Yard].name, value: Unit.Yard},\r\n            ],\r\n            def: Unit.Meter,\r\n        },\r\n        {\r\n            key: \"velocity\",\r\n            label: tr(\"Velocity\"),\r\n            list: [\r\n                {label: UnitProps[Unit.MPS].name, value: Unit.MPS},\r\n                {label: UnitProps[Unit.FPS].name, value: Unit.FPS},\r\n            ],\r\n            def: Unit.MPS\r\n        },\r\n        {\r\n            key: \"angular\",\r\n            label: tr(\"Angular\"),\r\n            list: get_unit_list(Measure.Angular),\r\n            def: Unit.Degree\r\n        },\r\n        {\r\n            key: \"sizes\",\r\n            label: tr(\"Sizes\"),\r\n            list: [\r\n                {label: UnitProps[Unit.Inch].name, value: Unit.Inch},\r\n                {label: UnitProps[Unit.Millimeter].name, value: Unit.Millimeter},\r\n                {label: UnitProps[Unit.Centimeter].name, value: Unit.Centimeter},\r\n                {label: UnitProps[Unit.Centimeter].name, value: Unit.Line},\r\n            ],\r\n            def: Unit.Inch\r\n        },\r\n        {\r\n            key: \"weight\",\r\n            label: tr(\"Weight\"),\r\n            list: get_unit_list(Measure.Weight),\r\n            def: Unit.Grain\r\n        },\r\n        {\r\n            key: \"temperature\",\r\n            label: tr(\"Temperature\"),\r\n            list: [\r\n                {label: UnitProps[Unit.Celsius].name, value: Unit.Celsius},\r\n                {label: UnitProps[Unit.Fahrenheit].name, value: Unit.Fahrenheit},\r\n            ],\r\n            def: Unit.Celsius\r\n        },\r\n        {\r\n            key: \"pressure\",\r\n            label: tr(\"Pressure\"),\r\n            list: get_unit_list(Measure.Pressure),\r\n            def: Unit.PSI\r\n        },\r\n        {\r\n            key: \"energy\",\r\n            label: tr(\"Energy\"),\r\n            list: get_unit_list(Measure.Energy),\r\n            def: Unit.Joule\r\n        },\r\n        {\r\n            key: \"adjustment\",\r\n            label: tr(\"Adjustment\"),\r\n            list: get_unit_list(Measure.Angular),\r\n            def: Unit.MIL\r\n        },\r\n    ]\r\n\r\n\r\n    const UnitSelector = ({field}) => {\r\n\r\n        const [curValue, setCurValue] = useState(field.def);\r\n        const [value, setValue] = useState(curValue)\r\n\r\n        const onAccept = () => {\r\n            setCurValue(value)\r\n        }\r\n\r\n        return (\r\n            <Row style={styleSheet.grid.row} key={field.key}>\r\n                <Col size={9}>\r\n                    <Text style={{fontSize: 16}}>{field.label}</Text>\r\n                </Col>\r\n                <Col size={7}>\r\n                    <SimpleScrollDialog title={field.label} text={UnitProps[curValue].name} onAccept={onAccept}>\r\n                        <RadioGroup initialValue={curValue} onChange={setValue} items={field.list} />\r\n                    </SimpleScrollDialog>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <InputCard title={tr(\"Units of measurement\")}>\r\n            <Grid style={styleSheet.grid.grid}>\r\n                {fields.map(field => <UnitSelector key={field.key} field={field}/>)}\r\n            </Grid>\r\n        </InputCard>\r\n    )\r\n\r\n}","import {Text, SegmentedButtons, TextInput, useTheme} from \"react-native-paper\";\r\nimport {Col, Grid, Row} from \"react-native-paper-grid\";\r\nimport React, {useState} from \"react\";\r\nimport InputCard from \"./InputCard\";\r\nimport styleSheet from \"../../styles\";\r\nimport {SimpleDialog} from \"../dialogs\";\r\nimport MeasureSliderModal from \"../measure-slider-modal/MeasureSliderModal\";\r\nimport {Unit, UnitProps} from \"js-ballistics\";\r\nimport {useTranslate} from \"../../translations/UseTranslate\";\r\n\r\n\r\nexport default function WeaponCard() {\r\n\r\n    const me = WeaponCard.name\r\n    const translator = useTranslate()\r\n    const tr = (str) => translator(me, str)\r\n\r\n    const theme = useTheme()\r\n\r\n    const fields = [\r\n        {\r\n            key: \"diameter\",\r\n            label: tr(\"Diameter\"),\r\n            suffix: UnitProps[Unit.Inch].symbol,\r\n            icon: \"diameter-variant\",\r\n            mode: \"float\" as const,\r\n            initialValue: 0.308,\r\n            maxValue: 22,\r\n            minValue: 0.001,\r\n            decimals: 3,\r\n        },\r\n        {\r\n            key: \"sight_height\",\r\n            label: tr(\"Sight height\"),\r\n            suffix: UnitProps[Unit.Inch].symbol,\r\n            icon: \"crosshairs\",\r\n            mode: \"float\" as const,\r\n            initialValue: 3,\r\n            maxValue: 5,\r\n            minValue: 0,\r\n            decimals: 1,\r\n        },\r\n        {\r\n            key: \"twist\",\r\n            label: tr(\"Twist\"),\r\n            suffix: UnitProps[Unit.Inch].symbol,\r\n            icon: \"screw-flat-top\",\r\n            mode: \"float\" as const,\r\n            initialValue: 11,\r\n            maxValue: 20,\r\n            minValue: -20,\r\n            decimals: 2,\r\n        },\r\n    ]\r\n\r\n    const twistStates = [\r\n        {\r\n            value: 'Right',\r\n            label: tr('Right'),\r\n            icon: \"rotate-right\",\r\n            showSelectedCheck: true,\r\n            checkedColor: theme.colors.primary\r\n        },\r\n        {\r\n            value: 'Left',\r\n            label: tr('Left'),\r\n            icon: \"rotate-left\",\r\n            showSelectedCheck: true,\r\n            checkedColor: theme.colors.primary\r\n        }\r\n    ]\r\n\r\n    const [curTwistDir, setCurTwistDir] = useState(\"Right\");\r\n    const [twistDir, setTwistDir] = useState(curTwistDir);\r\n\r\n    const [curName, setCurName] = React.useState(\"My rifle\");\r\n    const [name, setName] = React.useState(curName);\r\n\r\n    const acceptTwistDir = (): void => {\r\n        setCurTwistDir(twistDir)\r\n    }\r\n\r\n    const declineTwistDir = (): void => {\r\n        setTwistDir(curTwistDir)\r\n    }\r\n\r\n    const acceptName = () => {\r\n        setCurName(name)\r\n    }\r\n\r\n    const declineName = () => {\r\n        setName(curName)\r\n    }\r\n\r\n    return (\r\n\r\n        <InputCard title={tr(\"Weapon\")}>\r\n\r\n            <SimpleDialog label={tr(\"Name\")} icon={\"card-bulleted-outline\"}\r\n                          text={tr(curName)}\r\n                          onAccept={acceptName}\r\n                          onDecline={declineName}\r\n            >\r\n                <TextInput value={name} onChangeText={setName} />\r\n            </SimpleDialog>\r\n\r\n            <Grid style={styleSheet.grid.grid}>\r\n\r\n                {fields.map(field => <MeasureSliderModal key={field.key} field={field}/>)}\r\n\r\n                <Row style={styleSheet.grid.row}>\r\n                    <Col size={8}>\r\n                        <Text style={{fontSize: 16}}>{tr(\"Twist direction\")}</Text>\r\n                    </Col>\r\n                    <Col size={8}>\r\n                        <SimpleDialog label={tr(\"Twist direction\")} icon={curTwistDir === \"Right\" ? \"rotate-right\" : \"rotate-left\"}\r\n                                      text={tr(curTwistDir)} onAccept={acceptTwistDir} onDecline={declineTwistDir}>\r\n                            <SegmentedButtons\r\n                                buttons={twistStates} value={twistDir} onValueChange={setTwistDir}/>\r\n                        </SimpleDialog>\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Grid>\r\n        </InputCard>\r\n\r\n    )\r\n}","export function angleToValue(params: {\r\n    angle: number;\r\n    minValue: number;\r\n    maxValue: number;\r\n    startAngle: number;\r\n    endAngle: number;\r\n}) {\r\n    const { angle, minValue, maxValue, startAngle, endAngle } = params;\r\n    if (endAngle <= startAngle) {\r\n        // math assumes endAngle > startAngle\r\n        throw new Error(\"endAngle must be greater than startAngle\");\r\n    }\r\n\r\n    if (angle < startAngle) {\r\n        return minValue;\r\n    } else if (angle > endAngle) {\r\n        return maxValue;\r\n    } else {\r\n        const ratio = (angle - startAngle) / (endAngle - startAngle);\r\n        const value = ratio * (maxValue - minValue) + minValue;\r\n        return value;\r\n    }\r\n}\r\n\r\nexport function valueToAngle(params: {\r\n    value: number;\r\n    minValue: number;\r\n    maxValue: number;\r\n    startAngle: number;\r\n    endAngle: number;\r\n}) {\r\n    const { value, minValue, maxValue, startAngle, endAngle } = params;\r\n    if (endAngle <= startAngle) {\r\n        // math assumes endAngle > startAngle\r\n        throw new Error(\"endAngle must be greater than startAngle\");\r\n    }\r\n    const ratio = (value - minValue) / (maxValue - minValue);\r\n    const angle = ratio * (endAngle - startAngle) + startAngle;\r\n    return angle;\r\n}\r\n\r\nexport type AngleDescription = {\r\n    direction: \"cw\" | \"ccw\";\r\n    axis: \"+x\" | \"-x\" | \"+y\" | \"-y\";\r\n};\r\n\r\nexport type AngleWithDescription = {\r\n    degree: number;\r\n} & AngleDescription;\r\n\r\nfunction convertAngle(\r\n    degree: number,\r\n    from: AngleDescription,\r\n    to?: AngleDescription\r\n) {\r\n    to = to || { direction: \"ccw\", axis: \"+x\" };\r\n\r\n    if (from.direction !== to.direction) {\r\n        degree = degree === 0 ? 0 : 360 - degree;\r\n    }\r\n\r\n    if (from.axis === to.axis) {\r\n        // e.g. +x to +x\r\n        return degree;\r\n    }\r\n\r\n    if (from.axis[1] === to.axis[1]) {\r\n        // e.g. +x to -x\r\n        return (180 + degree) % 360;\r\n    }\r\n\r\n    switch (to.direction + from.axis + to.axis) {\r\n        case \"ccw+x-y\":\r\n        case \"ccw-x+y\":\r\n        case \"ccw+y+x\":\r\n        case \"ccw-y-x\":\r\n        case \"cw+y-x\":\r\n        case \"cw-y+x\":\r\n        case \"cw-x-y\":\r\n        case \"cw+x+y\":\r\n            return (90 + degree) % 360;\r\n        case \"ccw+y-x\":\r\n        case \"ccw-y+x\":\r\n        case \"ccw+x+y\":\r\n        case \"ccw-x-y\":\r\n        case \"cw+x-y\":\r\n        case \"cw-x+y\":\r\n        case \"cw+y+x\":\r\n        case \"cw-y-x\":\r\n            return (270 + degree) % 360;\r\n        default:\r\n            // This is impossible, just for TS\r\n            throw new Error(\"Unhandled conversion\");\r\n    }\r\n}\r\n\r\nexport function angleToPosition(\r\n    angle: AngleWithDescription,\r\n    radius: number,\r\n    svgSize: number\r\n) {\r\n    // js functions need radians, counterclockwise from positive x axis\r\n    const angleConverted = convertAngle(angle.degree, angle, {\r\n        direction: \"ccw\",\r\n        axis: \"+x\",\r\n    });\r\n    const angleInRad = (angleConverted / 180) * Math.PI;\r\n    let dX: number;\r\n    let dY: number;\r\n\r\n    if (angleInRad <= Math.PI) {\r\n        // we are in the upper two quadrants\r\n        if (angleInRad <= Math.PI / 2) {\r\n            dY = Math.sin(angleInRad) * radius;\r\n            dX = Math.cos(angleInRad) * radius;\r\n        } else {\r\n            dY = Math.sin(Math.PI - angleInRad) * radius;\r\n            dX = Math.cos(Math.PI - angleInRad) * radius * -1;\r\n        }\r\n    } else {\r\n        // we are in the lower two quadrants\r\n        if (angleInRad <= Math.PI * 1.5) {\r\n            dY = Math.sin(angleInRad - Math.PI) * radius * -1;\r\n            dX = Math.cos(angleInRad - Math.PI) * radius * -1;\r\n        } else {\r\n            dY = Math.sin(2 * Math.PI - angleInRad) * radius * -1;\r\n            dX = Math.cos(2 * Math.PI - angleInRad) * radius;\r\n        }\r\n    }\r\n\r\n    // dX and dY are calculated based on having (0, 0) at the center\r\n    // Now, translate dX and dY to svg coordinates, where (0, 0) is at the top left\r\n    const x = dX + svgSize / 2;\r\n    const y = svgSize / 2 - dY;\r\n\r\n    return { x, y };\r\n}\r\n\r\nexport function positionToAngle(\r\n    position: { x: number; y: number },\r\n    svgSize: number,\r\n    angleType: AngleDescription\r\n) {\r\n    const dX = position.x - svgSize / 2;\r\n    const dY = svgSize / 2 - position.y; // position.y increases downwards in svg\r\n    let theta = Math.atan2(dY, dX); // radians, counterclockwise from positive x axis\r\n    if (theta < 0) {\r\n        theta = theta + 2 * Math.PI;\r\n    }\r\n    const degree = (theta / Math.PI) * 180; // degrees, counterclockwise from positive x axis\r\n    return convertAngle(\r\n        degree,\r\n        {\r\n            direction: \"ccw\",\r\n            axis: \"+x\",\r\n        },\r\n        angleType\r\n    );\r\n}\r\n\r\nexport function semiCircle(opts: {\r\n    startAngle: number;\r\n    endAngle: number;\r\n    angleType: AngleDescription;\r\n    radius: number;\r\n    svgSize: number;\r\n    direction: \"cw\" | \"ccw\";\r\n}) {\r\n    const { startAngle, endAngle, radius, svgSize, direction, angleType } = opts;\r\n    const startPosition = angleToPosition(\r\n        { degree: startAngle, ...angleType },\r\n        radius,\r\n        svgSize\r\n    );\r\n    const endPosition = angleToPosition(\r\n        { degree: endAngle, ...angleType },\r\n        radius,\r\n        svgSize\r\n    );\r\n    return `\r\n    M ${svgSize / 2},${svgSize / 2}\r\n    L ${startPosition.x},${startPosition.y}\r\n    A ${radius} ${radius} 0 ${direction === \"cw\" ? \"1 1\" : \"0 0\"}\r\n      ${endPosition.x} ${endPosition.y}\r\n    Z\r\n  `;\r\n}","import { AngleDescription, angleToPosition } from \"./circularGeometry\";\r\n\r\nfunction getStartAndEndPosition(opts: {\r\n    startAngle: number;\r\n    endAngle: number;\r\n    angleType: AngleDescription;\r\n    radius: number;\r\n    svgSize: number;\r\n}) {\r\n    const { startAngle, endAngle, radius, svgSize, angleType } = opts;\r\n\r\n    let isCircle = false;\r\n    if (startAngle !== endAngle && startAngle % 360 === endAngle % 360) {\r\n        // if it's a full circle, we can't naively draw an arc...\r\n        // https://stackoverflow.com/questions/5737975/circle-drawing-with-svgs-arc-path\r\n        isCircle = true;\r\n    }\r\n\r\n    const startPosition = angleToPosition(\r\n        { degree: startAngle, ...angleType },\r\n        radius,\r\n        svgSize\r\n    );\r\n    const endPosition = angleToPosition(\r\n        { degree: isCircle ? endAngle - 0.001 : endAngle, ...angleType },\r\n        radius,\r\n        svgSize\r\n    );\r\n\r\n    return { startPosition, endPosition, isCircle };\r\n}\r\n\r\nexport function pieShapedPath(opts: {\r\n    startAngle: number;\r\n    endAngle: number;\r\n    angleType: AngleDescription;\r\n    radius: number;\r\n    svgSize: number;\r\n    direction: \"cw\" | \"ccw\";\r\n}) {\r\n    const { radius, svgSize, direction } = opts;\r\n    const { startPosition, endPosition } = getStartAndEndPosition(opts);\r\n    return `\r\n    M ${svgSize / 2},${svgSize / 2}\r\n    L ${startPosition.x},${startPosition.y}\r\n    A ${radius} ${radius} 0 ${direction === \"cw\" ? \"1 1\" : \"0 0\"}\r\n      ${endPosition.x} ${endPosition.y}\r\n    Z\r\n  `;\r\n}\r\n\r\nexport function arcShapedPath(opts: {\r\n    startAngle: number;\r\n    endAngle: number;\r\n    angleType: AngleDescription;\r\n    radius: number;\r\n    svgSize: number;\r\n    direction: \"cw\" | \"ccw\";\r\n}) {\r\n    const { startAngle, endAngle, radius, direction } = opts;\r\n    const { startPosition, endPosition, isCircle } = getStartAndEndPosition(opts);\r\n\r\n    const largeArc = endAngle - startAngle >= 180;\r\n\r\n    return `\r\n      M ${startPosition.x},${startPosition.y}\r\n      A ${radius} ${radius} 0\r\n        ${largeArc ? \"1\" : \"0\"}\r\n        ${direction === \"cw\" ? \"1\" : \"0\"}\r\n        ${endPosition.x} ${endPosition.y}\r\n        ${isCircle ? \"Z\" : \"\"}\r\n    `;\r\n}\r\n\r\nexport function arcPathWithRoundedEnds(opts: {\r\n    startAngle: number;\r\n    endAngle: number;\r\n    angleType: AngleDescription;\r\n    innerRadius: number;\r\n    thickness: number;\r\n    svgSize: number;\r\n    direction: \"cw\" | \"ccw\";\r\n}) {\r\n    const { startAngle, innerRadius, thickness, direction, angleType, svgSize } =\r\n        opts;\r\n    let { endAngle } = opts;\r\n\r\n    if (startAngle % 360 === endAngle % 360 && startAngle !== endAngle) {\r\n        // Drawing a full circle, slightly offset end angle\r\n        // https://stackoverflow.com/questions/5737975/circle-drawing-with-svgs-arc-path\r\n        endAngle = endAngle - 0.001;\r\n    }\r\n    const largeArc = endAngle - startAngle >= 180;\r\n    const outerRadius = innerRadius + thickness;\r\n\r\n    const innerArcStart = angleToPosition(\r\n        { degree: startAngle, ...angleType },\r\n        innerRadius,\r\n        svgSize\r\n    );\r\n    const startPoint = `\r\n    M ${innerArcStart.x},${innerArcStart.y}\r\n  `;\r\n\r\n    const innerArcEnd = angleToPosition(\r\n        { degree: endAngle, ...angleType },\r\n        innerRadius,\r\n        svgSize\r\n    );\r\n    const innerArc = `\r\n    A ${innerRadius} ${innerRadius} 0\r\n      ${largeArc ? \"1\" : \"0\"}\r\n      ${direction === \"cw\" ? \"1\" : \"0\"}\r\n      ${innerArcEnd.x} ${innerArcEnd.y}\r\n  `;\r\n\r\n    const outerArcStart = angleToPosition(\r\n        { degree: endAngle, ...angleType },\r\n        outerRadius,\r\n        svgSize\r\n    );\r\n    const firstButt = `\r\n    A ${thickness / 2} ${thickness / 2} 0\r\n      ${largeArc ? \"1\" : \"0\"}\r\n      ${direction === \"cw\" ? \"0\" : \"1\"}\r\n      ${outerArcStart.x} ${outerArcStart.y}\r\n  `;\r\n\r\n    const outerArcEnd = angleToPosition(\r\n        { degree: startAngle, ...angleType },\r\n        outerRadius,\r\n        svgSize\r\n    );\r\n    const outerArc = `\r\n    A ${outerRadius} ${outerRadius} 0\r\n      ${largeArc ? \"1\" : \"0\"}\r\n      ${direction === \"cw\" ? \"0\" : \"1\"}\r\n      ${outerArcEnd.x} ${outerArcEnd.y}\r\n  `;\r\n\r\n    const secondButt = `\r\n    A ${thickness / 2} ${thickness / 2} 0\r\n      ${largeArc ? \"1\" : \"0\"}\r\n      ${direction === \"cw\" ? \"0\" : \"1\"}\r\n      ${innerArcStart.x} ${innerArcStart.y}\r\n  `;\r\n\r\n    return startPoint + innerArc + firstButt + outerArc + secondButt + \" Z\";\r\n}\r\n\r\n\r\nexport function arcPathWithTriangleEnd(opts: {\r\n    startAngle: number;\r\n    endAngle: number;\r\n    angleType: AngleDescription;\r\n    innerRadius: number;\r\n    thickness: number;\r\n    svgSize: number;\r\n    direction: \"cw\" | \"ccw\";\r\n}) {\r\n    const { startAngle, innerRadius, thickness, direction, angleType, svgSize } =\r\n        opts;\r\n    let { endAngle } = opts;\r\n\r\n    if (startAngle % 360 === endAngle % 360 && startAngle !== endAngle) {\r\n        // Drawing a full circle, slightly offset end angle\r\n        // https://stackoverflow.com/questions/5737975/circle-drawing-with-svgs-arc-path\r\n        endAngle = endAngle - 0.001;\r\n    }\r\n    const largeArc = endAngle - startAngle >= 180;\r\n    const outerRadius = innerRadius + thickness;\r\n\r\n    const innerArcStart = angleToPosition(\r\n        { degree: startAngle, ...angleType },\r\n        innerRadius,\r\n        svgSize\r\n    );\r\n\r\n    const innerArcEnd = angleToPosition(\r\n        { degree: endAngle, ...angleType },\r\n        innerRadius,\r\n        svgSize\r\n    );\r\n\r\n    const triangleEnd = `\r\n    L ${innerArcEnd.x},${innerArcEnd.y}  // Line to the end point of the arc\r\n    L ${innerArcEnd.x - 5},${innerArcEnd.y + 10}  // Line to a point of the triangle\r\n    L ${innerArcEnd.x + 5},${innerArcEnd.y + 10}  // Line to another point of the triangle\r\n    Z  // Close the path to complete the triangle\r\n  `;\r\n\r\n    return `\r\n    M ${innerArcStart.x},${innerArcStart.y}\r\n    A ${innerRadius} ${innerRadius} 0\r\n      ${largeArc ? \"1\" : \"0\"}\r\n      ${direction === \"cw\" ? \"1\" : \"0\"}\r\n      ${innerArcEnd.x} ${innerArcEnd.y}\r\n    ${triangleEnd}\r\n  `;\r\n}\r\n","import * as React from \"react\";\r\nimport {AngleDescription, angleToPosition, angleToValue, positionToAngle, valueToAngle} from \"./circularGeometry\";\r\nimport {arcPathWithRoundedEnds} from \"./svgPaths\";\r\nimport Svg, {Circle, Line, Path, Polygon, Text} from \"react-native-svg\";\r\nimport {Platform} from \"react-native\";\r\n\r\n\r\ntype HandleProps = {\r\n    value: number;\r\n    onChange: (value: number) => void;\r\n    handleSize?: number;\r\n    handleMode?: \"circle\" | \"triangle\"\r\n}\r\n\r\n\r\ntype CircularSliderProps = {\r\n    dialDiameter?: number;\r\n    strokeWidth?: number;\r\n    minValue?: number;\r\n    maxValue?: number;\r\n    startAngle?: number; // 0 - 360 degrees\r\n    endAngle?: number; // 0 - 360 degrees\r\n    angleType: AngleDescription;\r\n    handleSize?: number;\r\n    value: number;\r\n    onChange: (value: number) => void;\r\n    handle2?: HandleProps;\r\n    onControlFinished?: () => void;\r\n    disabled?: boolean;\r\n    arcColor?: string;\r\n    arcWidth?: number,\r\n    strokeColor?: string;\r\n    coerceToInt?: boolean;\r\n    btnRadius?: number;\r\n    handleColor?: string;\r\n    meterText?: string;\r\n    meterTextColor?: string;\r\n    meterTextSize?: number;\r\n    handleMode?: \"circle\" | \"triangle\"\r\n};\r\n\r\n\r\nexport default function CircularSliderNative({...props}: CircularSliderProps) {\r\n\r\n    const {\r\n        dialDiameter = 200,\r\n        strokeWidth = 4,\r\n        value,\r\n        onChange,\r\n        handle2,\r\n        handleSize = 8,\r\n        maxValue = 0,\r\n        minValue = 360,\r\n        startAngle = 0,\r\n        endAngle = 360,\r\n        angleType = {\r\n            direction: \"cw\",\r\n            axis: \"-y\",\r\n        },\r\n        disabled,\r\n        arcColor = \"#0cd\",\r\n        strokeColor = \"#aaa\",\r\n        handleMode = 'triangle',\r\n        handleColor = \"#0cd\",\r\n        arcWidth = 10,\r\n        meterText = \"None\",\r\n        meterTextColor = \"#0cd\",\r\n        meterTextSize = 10,\r\n        coerceToInt = false,\r\n        onControlFinished\r\n    } = props;\r\n\r\n    // const svgRef = useRef<SVGSVGElement | null>(null)\r\n    // const viewRef = useRef<View | null>(null)\r\n\r\n    const onTouch = (ev: React.TouchEvent<Svg>) => {\r\n        /* This is a very simplistic touch handler. Some optimzations might be:\r\n            - Right now, the bounding box for a touch is the entire element. Having the bounding box\r\n              for touched be circular at a fixed distance around the slider would be more intuitive.\r\n            - Similarly, don't set `touchAction: 'none'` in CSS. Instead, call `ev.preventDefault()`\r\n              only when the touch is within X distance from the slider\r\n        */\r\n\r\n        // This simple touch handler can't handle multiple touches. Therefore, bail if there are either:\r\n        // - more than 1 touches currently active\r\n        // - a touchEnd event, but there is still another touch active\r\n        if (!onChange) {\r\n            // Read-only, don't bother doing calculations\r\n            return;\r\n        }\r\n\r\n        const event = ev.nativeEvent\r\n\r\n        if (\r\n            event.touches.length > 1 ||\r\n            (event.type === \"touchend\" && event.touches.length > 0)\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        // Process the new position\r\n\r\n        let x: number, y: number;\r\n\r\n        if (Platform.OS === \"web\") {\r\n            // @ts-ignore  NOTE: this reference aren't in the react-native-svg docs\r\n            const rect = ev.currentTarget.getBoundingClientRect();\r\n            const touch = event.changedTouches[0];\r\n            x = touch.clientX - rect.left;\r\n            y = touch.clientY - rect.top;\r\n\r\n        } else {\r\n            // @ts-ignore  NOTE: this reference aren't in the react-native-svg docs\r\n            x = event.locationX;\r\n            // @ts-ignore  NOTE: this reference aren't in the react-native-svg docs\r\n            y = event.locationY;\r\n        }\r\n\r\n        processSelection(x, y)\r\n\r\n        // If the touch is ending, fire onControlFinished\r\n        if (event.type === \"touchend\" || event.type === \"touchcancel\") {\r\n            if (onControlFinished) {\r\n                onControlFinished();\r\n            }\r\n        }\r\n    };\r\n\r\n    const processSelection = (x: number, y: number) => {\r\n\r\n        const coordsInSvg = {x: x, y: y}\r\n        const angle = positionToAngle(coordsInSvg, dialDiameter, angleType);\r\n\r\n        let _value = angleToValue({\r\n            angle,\r\n            minValue,\r\n            maxValue,\r\n            startAngle,\r\n            endAngle,\r\n        });\r\n        if (coerceToInt) {\r\n            _value = Math.round(_value);\r\n        }\r\n\r\n        if (!disabled) {\r\n            if (\r\n                handle2 &&\r\n                handle2.onChange &&\r\n                // make sure we're closer to handle 2 -- i.e. controlling handle2\r\n                Math.abs(_value - handle2.value) < Math.abs(_value - value)\r\n            ) {\r\n                handle2.onChange(_value);\r\n            } else {\r\n                onChange(_value);\r\n            }\r\n        }\r\n    }\r\n\r\n    const trackInnerRadius = dialDiameter / 2 - strokeWidth;\r\n    const handleAngle = valueToAngle({\r\n        value: value,\r\n        minValue,\r\n        maxValue,\r\n        startAngle,\r\n        endAngle,\r\n    });\r\n\r\n    const handle2Angle =\r\n        handle2 &&\r\n        valueToAngle({\r\n            value: handle2.value,\r\n            minValue,\r\n            maxValue,\r\n            startAngle,\r\n            endAngle,\r\n        });\r\n\r\n    const handlePosition = angleToPosition(\r\n        {degree: handleAngle, ...angleType},\r\n        trackInnerRadius + strokeWidth / 2,\r\n        dialDiameter\r\n    );\r\n\r\n    const handle2Position =\r\n        handle2Angle &&\r\n        angleToPosition(\r\n            {degree: handle2Angle, ...angleType},\r\n            trackInnerRadius + strokeWidth / 2,\r\n            dialDiameter\r\n        );\r\n\r\n    const controllable = !disabled && Boolean(onChange);\r\n\r\n    const createHandle = (handlePosition) => {\r\n        const triangleRotation = value * step + 180\r\n\r\n        if (handleMode === \"triangle\") {\r\n            return (\r\n                <Polygon\r\n                    points={`${handlePosition.x},${handlePosition.y - handleSize} \r\n             ${handlePosition.x - handleSize},${handlePosition.y + handleSize} \r\n             ${handlePosition.x + handleSize},${handlePosition.y + handleSize}`}\r\n                    fill={handleColor}\r\n                    transform={`rotate(${triangleRotation} ${handlePosition.x} ${handlePosition.y})`}\r\n                />\r\n            )\r\n        } else {\r\n            return (\r\n                <Circle\r\n                    r={handleSize}\r\n                    cx={handlePosition.x}\r\n                    cy={handlePosition.y}\r\n                    fill={handleColor}\r\n                />\r\n            )\r\n        }\r\n    }\r\n\r\n    const step = (endAngle - startAngle) / (maxValue - minValue)\r\n    const stepRad = ((step <= 36 ? step : step / 10) * Math.PI) / 180\r\n    const numX = dialDiameter / 2\r\n    const numY = numX + strokeWidth / 4\r\n    // const numR = numX - strokeWidth * 5/2\r\n    const numbers = []\r\n    for (let i = endAngle; i > startAngle; i -= step) {\r\n        numbers.push(Math.round(i / step))\r\n    }\r\n\r\n    const svgRootProps: any = {\r\n        width: dialDiameter,\r\n        height: dialDiameter,\r\n        onClick: (ev) => controllable && ev.stopPropagation(),\r\n\r\n        onTouchStart: onTouch,\r\n        onTouchEnd: onTouch,\r\n        onTouchMove: onTouch,\r\n        onTouchCancel: onTouch,\r\n\r\n        style: {touchAction: \"none\"}\r\n    }\r\n\r\n    const meterTextProps: any = {\r\n        x: dialDiameter / 2,\r\n        y: dialDiameter / 2 + 10,\r\n        fontSize: meterTextSize,\r\n        fill: meterTextColor,\r\n        textAnchor: \"middle\"\r\n    }\r\n\r\n    const pathProps: any = {\r\n        svgSize: dialDiameter,\r\n        direction: angleType.direction,\r\n        angleType: angleType,\r\n    }\r\n\r\n    const arcBackgroundProps: any = {\r\n        innerRadius: trackInnerRadius,\r\n        thickness: strokeWidth,\r\n        ...pathProps\r\n    }\r\n\r\n    const arcProps: any = {\r\n        innerRadius: (trackInnerRadius + strokeWidth / 2 - arcWidth / 2),\r\n        thickness: arcWidth,\r\n        ...pathProps\r\n    }\r\n\r\n    const numbersProps = (value: number): any => {\r\n        const sin = Math.sin(value * stepRad)\r\n        const cos = Math.cos(value * stepRad)\r\n        return ({\r\n            key: value,\r\n            x: numX + (trackInnerRadius - strokeWidth / 2) * sin,\r\n            y: numY - (trackInnerRadius - strokeWidth / 2) * cos,\r\n            fontSize: 12,\r\n            fill: handleColor,\r\n            textAnchor: \"middle\"\r\n        })\r\n    }\r\n\r\n    const ticksProps = (value: number): any => {\r\n        const sin = Math.sin(value * stepRad)\r\n        const cos = Math.cos(value * stepRad)\r\n        return ({\r\n            key: `ticks${value}`,\r\n            x1: numX + (trackInnerRadius + 2 / 3 * strokeWidth) * sin,\r\n            y1: numX - (trackInnerRadius + 2 / 3 * strokeWidth) * cos,\r\n            x2: numX + (trackInnerRadius + strokeWidth) * sin,\r\n            y2: numX - (trackInnerRadius + strokeWidth) * cos,\r\n            stroke: handleColor,\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Svg {...svgRootProps} >\r\n            {handle2Angle === undefined ? (\r\n                /* One-handle mode */\r\n                <React.Fragment>\r\n                    {/* Arc Background  */}\r\n                    <Path\r\n                        d={arcPathWithRoundedEnds({\r\n                            startAngle: handleAngle,\r\n                            endAngle,\r\n                            ...arcBackgroundProps\r\n                        })}\r\n                        fill={strokeColor}\r\n                    />\r\n                    {/* Arc (render after background so it overlays it) */}\r\n                    <Path\r\n                        d={arcPathWithRoundedEnds({\r\n                            startAngle,\r\n                            endAngle: handleAngle,\r\n                            ...arcProps\r\n                        })}\r\n                        fill={arcColor}\r\n                    />\r\n                </React.Fragment>\r\n            ) : (\r\n                /* Two-handle mode */\r\n                <React.Fragment>\r\n                    {/* Arc Background Part 1  */}\r\n                    <Path\r\n                        d={arcPathWithRoundedEnds({\r\n                            startAngle,\r\n                            endAngle: handleAngle,\r\n                            ...arcBackgroundProps\r\n                        })}\r\n                        fill={strokeColor}\r\n                    />\r\n                    {/* Arc Background Part 2  */}\r\n                    <Path\r\n                        d={arcPathWithRoundedEnds({\r\n                            startAngle: handle2Angle,\r\n                            endAngle,\r\n                            ...arcBackgroundProps\r\n                        })}\r\n                        fill={strokeColor}\r\n                    />\r\n                    {/* Arc (render after background so it overlays it) */}\r\n                    <Path\r\n                        d={arcPathWithRoundedEnds({\r\n                            startAngle: handleAngle,\r\n                            endAngle: handle2Angle,\r\n                            ...arcProps\r\n                        })}\r\n                        fill={arcColor}\r\n                    />\r\n                </React.Fragment>\r\n            )}\r\n\r\n            <Text {...meterTextProps}>{meterText}</Text>\r\n            {numbers.map(value => <Line {...ticksProps(value)} />)}\r\n            {numbers.map(value => <Text {...numbersProps(value)}>{value}</Text>)}\r\n            {controllable && <React.Fragment>{createHandle(handlePosition)}</React.Fragment>}\r\n            {handle2Position && <React.Fragment>{createHandle(handle2Position)}</React.Fragment>}\r\n        </Svg>\r\n    )\r\n}","import {useTheme} from \"react-native-paper\";\r\nimport React from \"react\";\r\nimport {View} from \"react-native\";\r\nimport CircularSliderNative from \"../circular-slider/CircularSliderNative\";\r\n\r\n\r\nexport default function WindDirection({value, onChange}) {\r\n\r\n    const theme = useTheme()\r\n\r\n    const styles = {\r\n        container: {\r\n            // flex: 1,\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            paddingBottom: 40,\r\n        },\r\n        text: {\r\n            marginTop: -110,\r\n            fontWeight: \"bold\",\r\n            fontSize: 16,\r\n            textAlign: \"center\"\r\n        },\r\n        slider: {\r\n            padding: 5\r\n        },\r\n    }\r\n\r\n    const sliderProps = {\r\n        coerceToInt: true,\r\n        capMode: \"triangle\",\r\n\r\n        handleSize: 10,\r\n        arcWidth: 20,\r\n        strokeWidth: 20,\r\n        meterTextSize: 20,\r\n\r\n        handleColor: theme.colors.outline,\r\n        arcColor: theme.colors.secondaryContainer,\r\n        strokeColor: theme.colors.secondaryContainer,\r\n        meterTextColor: theme.colors.outline,\r\n    }\r\n\r\n    const sliderValues = {\r\n        minValue: 0,\r\n        maxValue: 12,\r\n        meterText: `${value * 30}° (${value}h)`\r\n    }\r\n\r\n    const sliderValueHandler = {\r\n        value: value,\r\n        onChange: onChange\r\n    }\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <CircularSliderNative\r\n                {...sliderValueHandler}\r\n                {...sliderProps}\r\n                {...sliderValues}\r\n                style={styles.slider}\r\n                dialDiameter={240}\r\n                angleType={{\r\n                    direction: \"cw\",\r\n                    axis: \"+y\"\r\n                }}\r\n            />\r\n        </View>\r\n    )\r\n}","import {Text} from \"react-native-paper\";\r\nimport {Col, Grid, Row} from \"react-native-paper-grid\";\r\nimport React, {useState} from \"react\";\r\nimport InputCard from \"./InputCard\";\r\nimport styleSheet from \"../../styles\";\r\nimport {SimpleDialog} from \"../dialogs\";\r\nimport {Unit, UnitProps} from \"js-ballistics\";\r\nimport WindDirectionPicker from \"../wind-dir-picker/WindDirPicker\";\r\nimport MeasureSliderModal from \"../measure-slider-modal/MeasureSliderModal\";\r\nimport {useTranslate} from \"../../translations/UseTranslate\";\r\n\r\n\r\nexport default function WindCard() {\r\n\r\n    const me = WindCard.name\r\n    const translator = useTranslate()\r\n    const tr = (str) => translator(me, str)\r\n\r\n    const fields = [\r\n        {\r\n            key: \"windSpeed\",\r\n            label: tr(\"Wind speed\"),\r\n            suffix: UnitProps[Unit.MPS].symbol,\r\n            icon: \"windsock\",\r\n            mode: \"float\" as const,\r\n            initialValue: 0,\r\n            maxValue: 100,\r\n            minValue: 0,\r\n            decimals: 1,\r\n        }\r\n    ]\r\n\r\n    const [curWindDir, setCurWindDir] = useState(0)\r\n    const [windDir, setWindDir] = useState(curWindDir / 30)\r\n\r\n    const onWindDirChange = (value) => {\r\n        setWindDir(value === 12 ? 0 : value)\r\n    }\r\n\r\n    const onWindAccept = () => {\r\n        setCurWindDir(windDir * 30)\r\n    }\r\n\r\n    const onWindDecline = () => {\r\n        setWindDir(curWindDir / 30)\r\n    }\r\n\r\n    const getWindIcon = () => {\r\n        switch (curWindDir / 30) {\r\n            case 12:\r\n                return \"clock-time-twelve-outline\";\r\n            case 11:\r\n                return \"clock-time-eleven-outline\";\r\n            case 10:\r\n                return \"clock-time-ten-outline\";\r\n            case 9:\r\n                return \"clock-time-nine-outline\";\r\n            case 8:\r\n                return \"clock-time-eight-outline\";\r\n            case 7:\r\n                return \"clock-time-seven-outline\";\r\n            case 6:\r\n                return \"clock-time-six-outline\";\r\n            case 5:\r\n                return \"clock-time-five-outline\";\r\n            case 4:\r\n                return \"clock-time-four-outline\";\r\n            case 3:\r\n                return \"clock-time-three-outline\";\r\n            case 2:\r\n                return \"clock-time-two-outline\";\r\n            case 1:\r\n                return \"clock-time-one-outline\";\r\n            case 0:\r\n                return \"clock-time-twelve-outline\";\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <InputCard title={tr(\"Current wind\")}>\r\n            <Grid style={styleSheet.grid.grid}>\r\n                {fields.map(field => <MeasureSliderModal key={field.key} field={field}/>)}\r\n\r\n\r\n                <Row style={styleSheet.grid.row}>\r\n                    <Col>\r\n                        <Text style={{fontSize: 16}}>{tr(\"Wind direction\")}</Text>\r\n                    </Col>\r\n                    <Col>\r\n                        <SimpleDialog label={`${tr(\"Wind direction\")}, ${\"degree\"}`}\r\n                                      text={`${curWindDir}° (${curWindDir / 30}h)`}\r\n                                      icon={getWindIcon()}\r\n                                      onAccept={onWindAccept}\r\n                                      onDecline={onWindDecline}>\r\n                            <WindDirectionPicker\r\n                                value={windDir}\r\n                                onChange={onWindDirChange}/>\r\n                        </SimpleDialog>\r\n                    </Col>\r\n                </Row>\r\n\r\n                {/*<Row>*/}\r\n                {/*    <Col>*/}\r\n                {/*        <Text>{\"Wind direction\"}</Text>*/}\r\n                {/*    </Col>*/}\r\n\r\n                {/*    <Col>*/}\r\n                {/*        <CircularSlider.tsx*/}\r\n                {/*            size={200}*/}\r\n                {/*            trackWidth={8}*/}\r\n                {/*            minValue={0}*/}\r\n                {/*            maxValue={12}*/}\r\n                {/*            startAngle={0}*/}\r\n                {/*            endAngle={360}*/}\r\n                {/*            angleType={{direction: \"cw\", axis: \"+y\"}}*/}\r\n                {/*            handleSize={10}*/}\r\n                {/*            handle1={{*/}\r\n                {/*                value: 50,*/}\r\n                {/*                onChange: () => {},*/}\r\n                {/*            }}*/}\r\n                {/*            arcBackgroundColor={\"white\"}*/}\r\n                {/*            arcColor={\"black\"}*/}\r\n                {/*            capMode={\"triangle\"}*/}\r\n                {/*        />*/}\r\n\r\n                {/*    </Col>*/}\r\n                {/*</Row>*/}\r\n\r\n            </Grid>\r\n        </InputCard>\r\n    )\r\n}","import {Text, SegmentedButtons, TextInput, useTheme} from \"react-native-paper\";\r\nimport {Col, Grid, Row} from \"react-native-paper-grid\";\r\nimport React, {useState} from \"react\";\r\nimport InputCard from \"./InputCard\";\r\nimport styleSheet from \"../../styles\";\r\nimport {SimpleDialog} from \"../dialogs\";\r\nimport MeasureSliderModal from \"../measure-slider-modal/MeasureSliderModal\";\r\nimport {Unit, UnitProps} from \"js-ballistics\";\r\nimport {useTranslate} from \"../../translations/UseTranslate\";\r\n\r\n\r\nexport default function ProjectileCard() {\r\n\r\n    const me = ProjectileCard.name\r\n    const translator = useTranslate()\r\n    const tr = (str) => translator(me, str)\r\n\r\n    const theme = useTheme()\r\n\r\n    const fields = [\r\n        {\r\n            key: \"mv\",\r\n            label: tr(\"Muzzle velocity\"),\r\n            suffix: UnitProps[Unit.MPS].symbol,\r\n            icon: \"speedometer\",\r\n            mode: \"int\" as const,\r\n            initialValue: 805,\r\n            maxValue: 2000,\r\n            minValue: 10,\r\n            decimals: 0,\r\n        },\r\n        {\r\n            key: \"powder_temp\",\r\n            label: tr(\"Powder temperature\"),\r\n            suffix: UnitProps[Unit.Celsius].symbol,\r\n            icon: \"thermometer\",\r\n            mode: \"int\" as const,\r\n            initialValue: 15,\r\n            maxValue: 50,\r\n            minValue: -50,\r\n            decimals: 0,\r\n        },\r\n        {\r\n            key: \"powder_sens\",\r\n            label: tr(\"Temperature coefficient\"),\r\n            suffix: \"/15°C\",\r\n            icon: \"percent\",\r\n            mode: \"float\" as const,\r\n            initialValue: 1,\r\n            maxValue: 5,\r\n            minValue: 0,\r\n            decimals: 2,\r\n        },\r\n    ]\r\n\r\n\r\n    const [curName, setCurName] = React.useState(\"My projectile\");\r\n    const [name, setName] = React.useState(curName);\r\n\r\n    const acceptName = () => {\r\n        setCurName(name)\r\n    }\r\n\r\n    const declineName = () => {\r\n        setName(curName)\r\n    }\r\n\r\n    return (\r\n\r\n        <InputCard title={tr(\"Projectile\")}>\r\n\r\n            <SimpleDialog label={tr(\"Name\")} icon={\"card-bulleted-outline\"}\r\n                          text={tr(curName)}\r\n                          onAccept={acceptName}\r\n                          onDecline={declineName}\r\n            >\r\n                <TextInput value={name} onChangeText={setName} />\r\n            </SimpleDialog>\r\n\r\n            <Grid style={styleSheet.grid.grid}>\r\n\r\n                {fields.map(field => <MeasureSliderModal key={field.key} field={field}/>)}\r\n\r\n            </Grid>\r\n        </InputCard>\r\n\r\n    )\r\n}","import { createNavigationContainerRef } from '@react-navigation/native';\r\n\r\nexport const navigationRef = createNavigationContainerRef()\r\n\r\nexport function navigate(name: string) {\r\n    if (navigationRef.isReady()) {\r\n        navigationRef.navigate(name);\r\n    }\r\n}\r\n\r\nexport function getCurrentRoute() {\r\n    if (navigationRef.isReady()) {\r\n        return navigationRef.getCurrentRoute();\r\n    }\r\n    return null;\r\n}\r\n","import {Text, TextInput, Chip} from \"react-native-paper\";\r\nimport {Col, Grid, Row} from \"react-native-paper-grid\";\r\nimport React from \"react\";\r\nimport InputCard from \"./InputCard\";\r\nimport styleSheet from \"../../styles\";\r\nimport {SimpleDialog} from \"../dialogs\";\r\nimport MeasureSliderModal from \"../measure-slider-modal/MeasureSliderModal\";\r\nimport {Unit, UnitProps} from \"js-ballistics\";\r\nimport {navigate} from \"../../RootNavigation\";\r\nimport {useTranslate} from \"../../translations/UseTranslate\";\r\n\r\n\r\nexport default function BulletCard() {\r\n\r\n    const me = BulletCard.name\r\n    const translator = useTranslate()\r\n    const tr = (str) => translator(me, str)\r\n\r\n    const fields = [\r\n        {\r\n            key: \"diameter\",\r\n            label: tr(\"Diameter\"),\r\n            suffix: UnitProps[Unit.Inch].symbol,\r\n            icon: \"diameter-variant\",\r\n            mode: \"float\" as const,\r\n            initialValue: 0.308,\r\n            maxValue: 22,\r\n            minValue: 0.001,\r\n            decimals: 3,\r\n        },\r\n        {\r\n            key: \"weight\",\r\n            label: tr(\"Weight\"),\r\n            suffix: UnitProps[Unit.Grain].symbol,\r\n            icon: \"weight\",\r\n            mode: \"float\" as const,\r\n            initialValue: 15,\r\n            maxValue: 50,\r\n            minValue: -50,\r\n            decimals: 1,\r\n        },\r\n        {\r\n            key: \"length\",\r\n            label: tr(\"Length\"),\r\n            suffix: UnitProps[Unit.Inch].symbol,\r\n            icon: \"arrow-expand-horizontal\",\r\n            // icon: \"⬌\",\r\n            mode: \"float\" as const,\r\n            initialValue: 1.7,\r\n            maxValue: 5,\r\n            minValue: 0,\r\n            decimals: 2,\r\n        },\r\n    ]\r\n\r\n    const [curName, setCurName] = React.useState(\"My bullet\");\r\n    const [name, setName] = React.useState(curName);\r\n\r\n    const acceptName = () => {\r\n        setCurName(name)\r\n    }\r\n\r\n    const declineName = () => {\r\n        setName(curName)\r\n    }\r\n\r\n    const editDragModel = () => {\r\n        navigate(\"DragModelScreen\")\r\n    }\r\n\r\n    return (\r\n\r\n        <InputCard title={tr(\"Bullet\")}>\r\n\r\n            <SimpleDialog label={tr(\"Name\")} icon={\"card-bulleted-outline\"}\r\n                          text={tr(curName)}\r\n                          onAccept={acceptName}\r\n                          onDecline={declineName}\r\n            >\r\n                <TextInput value={name} onChangeText={setName}/>\r\n            </SimpleDialog>\r\n\r\n            <Grid style={styleSheet.grid.grid}>\r\n\r\n                {fields.map(field => <MeasureSliderModal key={field.key} field={field}/>)}\r\n\r\n                <Row style={styleSheet.grid.row}>\r\n                    <Col size={8}>\r\n                        <Text style={{fontSize: 16}}>{tr(\"Drag model\")}</Text>\r\n                    </Col>\r\n                    <Col size={8}>\r\n\r\n                        <Chip icon={\"function\"} closeIcon=\"square-edit-outline\" style={{margin: 0}} textStyle={{fontSize: 16}}\r\n                              onPress={editDragModel}\r\n                              onClose={editDragModel}\r\n                        >\r\n                            {`0.318 G7`}\r\n                        </Chip>\r\n\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Grid>\r\n        </InputCard>\r\n\r\n    )\r\n}","import React from \"react\";\r\nimport {ScrollView} from 'react-native';\r\nimport {useTheme} from 'react-native-paper';\r\nimport {StyleSheet} from \"react-native\";\r\nimport {WeaponCard} from \"../../components/cards\";\r\nimport TabsCard from \"../../components/cards/TabsCard\";\r\nimport ProjectileCard from \"../../components/cards/ProjectileCard\";\r\nimport BulletCard from \"../../components/cards/BulletCard\";\r\n\r\n\r\nexport default function MunitionScreen({navigation}) {\r\n\r\n    const theme = useTheme();\r\n\r\n    const styles = StyleSheet.create({\r\n        scrollViewContainer: {\r\n            backgroundColor: theme.colors.background,\r\n            // height: Dimensions.get('window').height * 0.8, // Set the height as a percentage of the screen height\r\n            // marginBottom: 80\r\n        },\r\n    });\r\n\r\n    return (\r\n       <>\r\n            <ScrollView\r\n                style={styles.scrollViewContainer}\r\n                keyboardShouldPersistTaps=\"always\"\r\n                alwaysBounceVertical={false}\r\n                showsVerticalScrollIndicator={true}\r\n            >\r\n                <WeaponCard/>\r\n                <ProjectileCard />\r\n                <BulletCard />\r\n\r\n                {/*<TabsCard />*/}\r\n            </ScrollView>\r\n            {/*TODO: move fab to screen*/}\r\n            {/*<FAB*/}\r\n            {/*    mode=\"flat\"*/}\r\n            {/*    size=\"medium\"*/}\r\n            {/*    icon={\"plus\"}*/}\r\n            {/*    onPress={() => console.log(\"BigFabPressed\")}*/}\r\n            {/*    style={[*/}\r\n            {/*        styleSheet.fab,*/}\r\n            {/*        {bottom: (BOTTOM_APPBAR_HEIGHT - MEDIUM_FAB_HEIGHT) / 2},*/}\r\n            {/*    ]}*/}\r\n            {/*/>*/}\r\n        </>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport {ScrollView} from 'react-native';\r\nimport {useTheme} from 'react-native-paper';\r\nimport {StyleSheet} from \"react-native\";\r\nimport {AtmoCard, WindCard} from \"../../components/cards\";\r\n\r\n\r\nexport default function CurrentAtmo({ navigation }) {\r\n\r\n    const theme = useTheme();\r\n\r\n    const styles = StyleSheet.create({\r\n        scrollViewContainer: {\r\n            backgroundColor: theme.colors.background,\r\n        },\r\n    });\r\n\r\n    return (\r\n        <ScrollView\r\n            style={styles.scrollViewContainer}\r\n            keyboardShouldPersistTaps=\"always\"\r\n            alwaysBounceVertical={false}\r\n            showsVerticalScrollIndicator={true}\r\n        >\r\n            <AtmoCard />\r\n            <WindCard />\r\n        </ScrollView>\r\n    );\r\n}\r\n","import {ScrollView} from 'react-native';\r\nimport {useTheme} from 'react-native-paper';\r\nimport {SettingsUnitCard, SettingsGeneralCard} from \"../../components/cards\";\r\n\r\nexport default function SettingsScreen({props}) {\r\n\r\n    const theme = useTheme();\r\n\r\n    const styles = {\r\n        scrollViewContainer: {\r\n            backgroundColor: theme.colors.background,\r\n            // height: Dimensions.get('window').height * 0.8, // Set the height as a percentage of the screen height\r\n            // marginBottom: 80\r\n        },\r\n    }\r\n\r\n    return (\r\n        <ScrollView\r\n            style={styles.scrollViewContainer}\r\n            keyboardShouldPersistTaps=\"always\"\r\n            alwaysBounceVertical={false}\r\n            showsVerticalScrollIndicator={true}\r\n        >\r\n            <SettingsGeneralCard />\r\n            <SettingsUnitCard />\r\n        </ScrollView>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport Placeholder from \"../placeholder/Placeholder\";\r\n\r\n\r\nexport default function Calculate({ navigation }) {\r\n\r\n    return (\r\n        <Placeholder text={\"Calculator\\nnot implemented yet\"}/>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport Placeholder from \"../placeholder/Placeholder\";\r\n\r\n\r\nexport default function Trajectory({ navigation }) {\r\n\r\n    return (\r\n        <Placeholder text={\"Trajectory table\\nnot implemented yet\"}/>\r\n    );\r\n}\r\n","import {MeasureField} from \"../../measure-slider-modal/MeasureSliderModal\";\r\nimport {useState} from \"react\";\r\nimport {FloatPicker, IntPicker} from \"../../number-picker\";\r\nimport SimpleDialog from \"../../dialogs/SimpleDialog\";\r\n\r\n\r\nexport default function TableValuePicker({field}: MeasureField) {\r\n    const [curValue, setCurValue] = useState(field.initialValue);\r\n    const [value, setValue] = useState(curValue)\r\n\r\n    const onAccept = () => {\r\n        setCurValue(value)\r\n    }\r\n\r\n    const onDecline = () => {\r\n        setValue(value)\r\n    }\r\n\r\n    const pickerProps = {\r\n        ...field,\r\n        curValue: curValue,\r\n        onChange: setValue\r\n    }\r\n\r\n    const picker = field.mode === \"int\"\r\n        ? <IntPicker {...pickerProps}/>\r\n        : <FloatPicker {...pickerProps}/>\r\n\r\n            return (\r\n                <SimpleDialog icon={field.icon} label={`${field.label}` + (field.suffix ? `, ${field.suffix}` : \"\")}\r\n            text={`${curValue.toFixed(field.decimals)} ${field.suffix}`}\r\n            onAccept={onAccept}\r\n            onDecline={onDecline}>\r\n                {picker}\r\n                </SimpleDialog>\r\n        )\r\n}","import {DataTable} from 'react-native-paper';\r\nimport {MeasureField} from \"../../measure-slider-modal/MeasureSliderModal\";\r\nimport {Unit, UnitProps} from \"js-ballistics\";\r\nimport {useState} from \"react\";\r\nimport TableValuePicker from \"./TableValuePicker\";\r\n\r\n\r\nconst MBCTable = ({dragModelType}) => {\r\n\r\n    const from = 0;\r\n    const to = 5;\r\n\r\n    const initialData = [\r\n        {\r\n            key: 0, // Creating an incremental key and value\r\n            velocity: {\r\n                key: 0,\r\n                label: \"Velocity\",\r\n                suffix: \"\",\r\n                icon: \"\",\r\n                mode: \"int\" as const,\r\n                initialValue: 805,\r\n                maxValue: 2000,\r\n                minValue: 0,\r\n                decimals: 0,\r\n            },\r\n            bc: {\r\n                key: 0,\r\n                label: \"BC 1\",\r\n                suffix: \"\",\r\n                icon: null,\r\n                mode: \"float\" as const,\r\n                initialValue: dragModelType === 'G7' ? 0.381 : 0.768,  // FIXME\r\n                maxValue: 2,\r\n                minValue: 0,\r\n                decimals: 3,\r\n            }\r\n        }\r\n    ];\r\n    for (let i = from; i < to; i++) {\r\n        const obj = {\r\n            key: i + 1, // Creating an incremental key and value\r\n            velocity: {\r\n                key: i + 1,\r\n                label: \"Velocity\",\r\n                suffix: \"\",\r\n                icon: \"\",\r\n                mode: \"int\" as const,\r\n                initialValue: 0,\r\n                maxValue: 2000,\r\n                minValue: 0,\r\n                decimals: 0,\r\n            },\r\n            bc: {\r\n                key: i + 1,\r\n                label: `BC ${i + 2}`,\r\n                suffix: \"\",\r\n                icon: null,\r\n                mode: \"float\" as const,\r\n                initialValue: 0,\r\n                maxValue: 2,\r\n                minValue: 0,\r\n                decimals: 3,\r\n            }\r\n        };\r\n        initialData.push(obj);\r\n    }\r\n\r\n    const [items] = useState(initialData)\r\n\r\n    return (\r\n        <DataTable>\r\n            <DataTable.Header>\r\n                <DataTable.Title textStyle={{fontSize: 16}}>{`Velocity, mps`}</DataTable.Title>\r\n                <DataTable.Title textStyle={{fontSize: 16}}>{`BC, ${dragModelType}`}</DataTable.Title>\r\n            </DataTable.Header>\r\n\r\n            {items.slice(from, to).map((item) => (\r\n                <DataTable.Row key={item.key}>\r\n\r\n                    <DataTable.Cell>\r\n\r\n                        <TableValuePicker key={item.key} field={item.velocity}/>\r\n\r\n                    </DataTable.Cell>\r\n                    <DataTable.Cell>\r\n\r\n                        <TableValuePicker key={item.key} field={item.bc}/>\r\n\r\n                    </DataTable.Cell>\r\n                </DataTable.Row>\r\n            ))}\r\n\r\n        </DataTable>\r\n    );\r\n};\r\n\r\nexport default MBCTable;","import {DataTable, Icon, Text} from 'react-native-paper';\r\nimport {Unit, UnitProps} from \"js-ballistics\";\r\nimport {useState} from \"react\";\r\n\r\n\r\nconst CDMTable = () => {\r\n\r\n    const from = 0;\r\n    const to = 100;\r\n\r\n    const initialData = [\r\n        {\r\n            key: 0, // Creating an incremental key and value\r\n            mach: 1,\r\n            cd: 0.121\r\n        }\r\n    ];\r\n    for (let i = from; i < to; i++) {\r\n        const obj = {\r\n            key: i+1, // Creating an incremental key and value\r\n            mach: 0,\r\n            cd: 0\r\n        };\r\n        initialData.push(obj);\r\n    }\r\n\r\n    const [items] = useState(initialData)\r\n\r\n    return (\r\n        <DataTable>\r\n            <DataTable.Header>\r\n                <DataTable.Title textStyle={{fontSize: 16}}>{`Mach`}</DataTable.Title>\r\n                <DataTable.Title textStyle={{fontSize: 16}}>{`CD`}</DataTable.Title>\r\n            </DataTable.Header>\r\n\r\n            {items.slice(from, to).map((item) => (\r\n                <DataTable.Row key={item.key}>\r\n\r\n                    <DataTable.Cell textStyle={{fontSize: 16}}>\r\n                        {item.mach}\r\n                    </DataTable.Cell>\r\n                    <DataTable.Cell textStyle={{fontSize: 16}}>\r\n                        {item.cd}\r\n                    </DataTable.Cell>\r\n                </DataTable.Row>\r\n            ))}\r\n\r\n        </DataTable>\r\n    );\r\n};\r\n\r\nexport default CDMTable;","import DragModelCard from \"./DragModelCard\";\r\n\r\nexport default DragModelCard;\r\n","import React, {useState} from \"react\";\r\nimport {InputCard} from \"../index\";\r\nimport {SegmentedButtons, Text, useTheme} from \"react-native-paper\";\r\nimport MBCTable from \"./MBCTable\";\r\nimport CDMTable from \"./CDMTable\";\r\n\r\n\r\nexport default function DragModelCard() {\r\n\r\n    const theme = useTheme()\r\n\r\n    const dragTypeStates = [\r\n        {\r\n            value: 'G7',\r\n            label: 'G7',\r\n            icon: null,\r\n            showSelectedCheck: true,\r\n            checkedColor: theme.colors.primary\r\n        },\r\n        {\r\n            value: 'G1',\r\n            label: 'G1',\r\n            icon: null,\r\n            showSelectedCheck: true,\r\n            checkedColor: theme.colors.primary\r\n        },\r\n        {\r\n            value: 'CDM',\r\n            label: 'CDM',\r\n            icon: null,\r\n            showSelectedCheck: true,\r\n            checkedColor: theme.colors.primary\r\n        },\r\n    ]\r\n\r\n    const [dragType, setDragType] = useState(\"G7\");\r\n\r\n\r\n    return (\r\n        <InputCard title={\"Drag model\"}>\r\n\r\n            <SegmentedButtons\r\n                buttons={dragTypeStates} value={dragType} onValueChange={setDragType}/>\r\n\r\n            {\r\n                dragType == \"CDM\" ?\r\n                <CDMTable /> :\r\n                <MBCTable dragModelType={dragType}/>\r\n            }\r\n\r\n        </InputCard>\r\n    )\r\n}","import React from \"react\";\r\nimport {ScrollView} from 'react-native';\r\nimport {useTheme} from 'react-native-paper';\r\nimport {StyleSheet} from \"react-native\";\r\nimport {WeaponCard} from \"../../components/cards\";\r\nimport TabsCard from \"../../components/cards/TabsCard\";\r\nimport ProjectileCard from \"../../components/cards/ProjectileCard\";\r\nimport BulletCard from \"../../components/cards/BulletCard\";\r\nimport DragModelCard from \"../../components/cards/drag-model-card\";\r\n\r\n\r\nexport default function DragModelScreen({navigation}) {\r\n\r\n    const theme = useTheme();\r\n\r\n    const styles = StyleSheet.create({\r\n        scrollViewContainer: {\r\n            backgroundColor: theme.colors.background,\r\n            // height: Dimensions.get('window').height * 0.8, // Set the height as a percentage of the screen height\r\n            // marginBottom: 80\r\n        },\r\n    });\r\n\r\n    return (\r\n       <>\r\n            <ScrollView\r\n                style={styles.scrollViewContainer}\r\n                keyboardShouldPersistTaps=\"always\"\r\n                alwaysBounceVertical={false}\r\n                showsVerticalScrollIndicator={true}\r\n            >\r\n                <DragModelCard />\r\n\r\n            </ScrollView>\r\n        </>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport {ScrollView} from 'react-native';\r\nimport {useTheme} from 'react-native-paper';\r\nimport {StyleSheet} from \"react-native\";\r\nimport {WeaponCard} from \"../../components/cards\";\r\nimport TabsCard from \"../../components/cards/TabsCard\";\r\nimport ProjectileCard from \"../../components/cards/ProjectileCard\";\r\nimport BulletCard from \"../../components/cards/BulletCard\";\r\nimport Placeholder from \"../placeholder/Placeholder\";\r\n// import UserDataExample from \"../../user-data/UseUserDataHookExample\";\r\n\r\n\r\nexport default function HomeScreen({navigation}) {\r\n\r\n    const theme = useTheme();\r\n\r\n    const styles = StyleSheet.create({\r\n        scrollViewContainer: {\r\n            backgroundColor: theme.colors.background,\r\n        },\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <ScrollView\r\n                style={styles.scrollViewContainer}\r\n                keyboardShouldPersistTaps=\"always\"\r\n                alwaysBounceVertical={false}\r\n                showsVerticalScrollIndicator={true}\r\n            >\r\n\r\n            <Placeholder text={\"Here will be a list of profiles\\n\\nNot implemented yet\"} />\r\n            {/*<UserDataExample />*/}\r\n            </ScrollView>\r\n        </>\r\n    );\r\n}\r\n","\r\n\r\n\r\nimport React from 'react';\r\nimport {NavigationContainer} from '@react-navigation/native';\r\nimport {createNativeStackNavigator} from '@react-navigation/native-stack';\r\n\r\nimport {TopAppBar, BotAppBar} from \"./components/app-bars\";\r\nimport {MunitionScreen, CurrentAtmo, SettingsScreen, Calculate, Trajectory} from \"./screens\";\r\n\r\nimport {navigationRef} from \"./RootNavigation\";\r\nimport DragModelScreen from \"./screens/drag-model/DragModelScreen\";\r\nimport HomeScreen from \"./screens/home/HomeScreen\";\r\n\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\n\r\nexport default function RootScreenManager({...props}) {\r\n\r\n    const {nightMode, toggleNightMode} = props\r\n\r\n    return (\r\n\r\n                <NavigationContainer ref={navigationRef}>\r\n                    <Stack.Navigator\r\n                        initialRouteName=\"Munition\"\r\n                        screenOptions={{\r\n                            header: (props) => <TopAppBar {...props}\r\n                                                          params={{nightMode, toggleNightMode}}\r\n                            />,\r\n                        }}\r\n                    >\r\n\r\n                        <Stack.Screen name=\"Home\" component={HomeScreen}/>\r\n                        <Stack.Screen name=\"Munition\" component={MunitionScreen}/>\r\n                        <Stack.Screen name=\"Atmosphere\" component={CurrentAtmo}/>\r\n                        <Stack.Screen name=\"Calculate\" component={Calculate}/>\r\n                        <Stack.Screen name=\"Trajectory\" component={Trajectory}/>\r\n                        <Stack.Screen name=\"Settings\" component={SettingsScreen}/>\r\n                        <Stack.Screen name=\"DragModelScreen\" component={DragModelScreen}/>\r\n\r\n                    </Stack.Navigator>\r\n                    <BotAppBar/>\r\n\r\n                </NavigationContainer>\r\n\r\n    );\r\n}","import React from 'react';\r\nimport {Platform, Text} from \"react-native\";\r\nimport {useState} from 'react';\r\nimport {StatusBar} from 'expo-status-bar';\r\nimport {PaperProvider, MD3LightTheme, MD3DarkTheme} from 'react-native-paper';\r\nimport {SafeAreaProvider} from 'react-native-safe-area-context';\r\nimport {UserDataProvider} from \"./src/user-data/UserDataContext\";\r\n\r\nimport {NavigationContainer} from '@react-navigation/native';\r\nimport {createNativeStackNavigator} from '@react-navigation/native-stack';\r\n\r\nimport {TopAppBar, BotAppBar} from \"./src/components/app-bars\";\r\nimport {MunitionScreen, CurrentAtmo, SettingsScreen, Calculate, Trajectory} from \"./src/screens\";\r\n\r\nimport { isMobile } from 'react-device-detect';\r\n\r\n\r\n\r\nimport {navigationRef} from \"./src/RootNavigation\";\r\nimport Placeholder from \"./src/screens/placeholder/Placeholder\";\r\nimport RootScreenManager from \"./src/RootScreenManager\";\r\n\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\n\r\nexport default function App() {\r\n\r\n    const [nightMode, setNightmode] = useState(true);\r\n    const theme = nightMode ? MD3DarkTheme : MD3LightTheme\r\n\r\n    const toggleNightMode = () => {\r\n        setNightmode((prevNightMode) => !prevNightMode);\r\n    };\r\n\r\n    const styles = {\r\n        provider: {\r\n            flex: 1,\r\n            backgroundColor: theme.colors.background  // Theme Background Color\r\n        },\r\n    }\r\n\r\n    // TODO: make a design for browsers\r\n    if ((Platform.OS === \"web\") && (!isMobile)) {\r\n        return <Placeholder text={\"Oops! The app supports only mobile view\"}></Placeholder>\r\n    }\r\n\r\n    return (\r\n        <UserDataProvider>\r\n\r\n            <SafeAreaProvider style={styles.provider}>\r\n                <PaperProvider theme={theme}>\r\n\r\n                    <RootScreenManager nightMode={nightMode} toggleNightMode={toggleNightMode}/>\r\n\r\n                    <StatusBar style=\"auto\"/>\r\n                </PaperProvider>\r\n            </SafeAreaProvider>\r\n\r\n        </UserDataProvider>\r\n    );\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/ebalistyka/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [823], () => (__webpack_require__(6271)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["UserDataContext","createContext","useUserData","context","useContext","console","error","userData","saveUserData","UserDataProvider","_ref","children","_useState","useState","_useState2","_slicedToArray","setUserData","useEffect","loadUserData","_ref2","_asyncToGenerator","jsonValue","AsyncStorage","getItem","JSON","parse","e","apply","arguments","_ref3","data","stringify","setItem","_x","_jsx","Provider","value","Placeholder","text","theme","useTheme","styles","StyleSheet","create","scrollViewContainer","backgroundColor","colors","background","ScrollView","style","keyboardShouldPersistTaps","alwaysBounceVertical","showsVerticalScrollIndicator","contentContainerStyle","flex","justifyContent","Text","textAlign","grid","row","flexDirection","alignItems","col","card","margin","padding","content","marginHorizontal","paddingHorizontal","bottomBar","position","left","right","bottom","fab","chip","measure","display","measure_text","modal","simple","container","alignSelf","title","marginBottom","numberPicker","selectedIndicator","width","borderRadius","top","useSafeAreaInsets","navigation","useNavigation","currentRoute","setCurrentRoute","addListener","_navigation$getCurren","currentRouteName","getCurrentRoute","name","_jsxs","Appbar","elevated","styleSheet","height","elevation","level2","safeAreaInsets","Action","icon","onPress","navigate","_Fragment","FAB","mode","size","languages","UA","root","TopAppBar","SettingsGeneralCard","SettingsUnitCard","WeaponCard","ProjectileCard","BulletCard","AtmoCard","WindCard","useTranslate","str","_languages$lang","_languages$lang$conte","lang","language","log","MORE_ICON","Platform","OS","props","Object","assign","_objectDestructuringEmpty","route","options","back","params","nightMode","toggleNightMode","getHeaderTitle","me","translator","Header","BackAction","goBack","Content","Card","Title","titleVariant","label","_ref$icon","_ref$onAccept","onAccept","_ref$onDecline","onDecline","_React$useState","React","_React$useState2","visible","setVisible","showDialog","View","Chip","closeIcon","textStyle","fontSize","onClose","Portal","Dialog","onDismiss","Actions","variant","color","tertiary","scrollView","overflow","option","zIndex","index","visibleRest","currentScrollIndex","opacityFunction","rotationFunction","scaleFunction","relativeScrollIndex","Animated","subtract","translateY","interpolate","inputRange","range","i","unshift","push","outputRange","y","Math","sin","PI","j","opacity","x","scale","rotateX","transform","selectedIndex","onChange","_ref$selectedIndicato","selectedIndicatorStyle","_ref$containerStyle","containerStyle","_ref$itemStyle","itemStyle","_ref$itemTextStyle","itemTextStyle","_ref$itemHeight","itemHeight","_ref$scaleFunction","_ref$rotationFunction","pow","_ref$opacityFunction","_ref$visibleRest","_ref$decelerationRate","decelerationRate","_ref$containerProps","containerProps","_ref$flatListProps","flatListProps","flatListRef","useRef","Value","scrollY","lastScrollTimestamp","Date","getTime","containerHeight","_useState3","_useState4","scrollIndex","setScrollIndex","paddedOptions","useMemo","array","_toConsumableArray","offsets","Array","length","map","add","divide","Error","_flatListRef$current","current","scrollToIndex","animated","intervalID","setInterval","_flatListRef$current2","clearInterval","_objectSpread","FlatList","ref","onScroll","event","nativeEvent","contentOffset","useNativeDriver","listener","positionY","round","handleScroll","onMomentumScrollEnd","offsetY","min","max","floor","snapToOffsets","initialScrollIndex","getItemLayout","offset","keyExtractor","item","toString","renderItem","WheelPickerItem","IntegerWheelPicker","curValue","minValue","maxValue","wheelProps","intRange","WheelPicker","indexOf","DecimalWheelPicker","decimals","decimalFormat","toFixed","slice","decimalStep","decimalsOptions","list","createDecimalOptions","parseFloat","FloatPicker","onSecondary","secondary","fontWeight","secondaryContainer","marginTop","intWheelProps","borderTopLeftRadius","borderBottomLeftRadius","marginLeft","marginRight","paddingRight","decimalWheelProps","borderTopRightRadius","borderBottomRightRadius","paddingLeft","int","setInt","decimal","setDecimal","onValueChange","IntPicker","MeasureSliderModal","field","initialValue","setCurValue","setValue","pickerProps","picker","Row","Col","SimpleDialog","suffix","tr","fields","key","UnitProps","Unit","Celsius","symbol","MmHg","Meter","InputCard","Grid","RadioGroup","items","RadioButton","Group","Item","ScrollArea","_useUserData","curLanguage","setLanguage","SimpleScrollDialog","updatedData","setCurLanguage","get_unit_list","keys","Foot","Yard","def","MPS","FPS","Measure","Angular","Degree","Inch","Millimeter","Centimeter","Line","Weight","Grain","Fahrenheit","Pressure","PSI","Energy","Joule","MIL","UnitSelector","twistStates","showSelectedCheck","checkedColor","primary","curTwistDir","setCurTwistDir","twistDir","setTwistDir","curName","setCurName","_React$useState3","_React$useState4","setName","TextInput","onChangeText","SegmentedButtons","buttons","valueToAngle","startAngle","endAngle","convertAngle","degree","from","to","direction","axis","angleToPosition","angle","radius","svgSize","dX","dY","angleInRad","cos","arcPathWithRoundedEnds","opts","innerRadius","thickness","angleType","largeArc","outerRadius","innerArcStart","startPoint","innerArcEnd","innerArc","outerArcStart","firstButt","outerArcEnd","CircularSliderNative","_props$dialDiameter","dialDiameter","_props$strokeWidth","strokeWidth","handle2","_props$handleSize","handleSize","_props$maxValue","_props$minValue","_props$startAngle","_props$endAngle","_props$angleType","disabled","_props$arcColor","arcColor","_props$strokeColor","strokeColor","_props$handleMode","handleMode","_props$handleColor","handleColor","_props$arcWidth","arcWidth","_props$meterText","meterText","_props$meterTextColor","meterTextColor","_props$meterTextSize","meterTextSize","_props$coerceToInt","coerceToInt","onControlFinished","onTouch","ev","touches","type","rect","currentTarget","getBoundingClientRect","touch","changedTouches","clientX","clientY","locationX","locationY","processSelection","theta","atan2","positionToAngle","_value","angleToValue","abs","trackInnerRadius","handleAngle","handle2Angle","handlePosition","handle2Position","controllable","Boolean","createHandle","triangleRotation","step","Polygon","points","fill","Circle","r","cx","cy","stepRad","numX","numY","numbers","svgRootProps","onClick","stopPropagation","onTouchStart","onTouchEnd","onTouchMove","onTouchCancel","touchAction","meterTextProps","textAnchor","pathProps","arcBackgroundProps","arcProps","Svg","undefined","Path","d","x1","y1","x2","y2","stroke","ticksProps","numbersProps","WindDirection","paddingBottom","slider","sliderProps","capMode","outline","sliderValues","sliderValueHandler","curWindDir","setCurWindDir","windDir","setWindDir","getWindIcon","WindDirectionPicker","navigationRef","createNavigationContainerRef","editDragModel","isReady","MunitionScreen","CurrentAtmo","SettingsScreen","Calculate","Trajectory","TableValuePicker","dragModelType","initialData","velocity","bc","obj","DataTable","Cell","mach","cd","dragTypeStates","dragType","setDragType","CDMTable","MBCTable","DragModelScreen","DragModelCard","HomeScreen","Stack","createNativeStackNavigator","RootScreenManager","NavigationContainer","Navigator","initialRouteName","screenOptions","header","Screen","component","BotAppBar","App","setNightmode","MD3DarkTheme","MD3LightTheme","provider","isMobile","SafeAreaProvider","PaperProvider","prevNightMode","StatusBar","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","amdO","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","every","splice","n","getter","__esModule","a","definition","o","defineProperty","enumerable","get","g","globalThis","this","Function","window","prop","prototype","hasOwnProperty","Symbol","toStringTag","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","id","chunkLoadingGlobal","self","forEach","bind","__webpack_exports__"],"sourceRoot":""}