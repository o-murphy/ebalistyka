{"version":3,"file":"static/js/main.e165cc24.js","mappings":"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","sources":["src/screens/placeholder/Placeholder.tsx","src/styles/stylesheet.ts","src/styles/index.ts","src/components/app-bars/BotAppBar.tsx","src/components/app-bars/TopAppBar.tsx","src/components/cards/InputCard.tsx","src/components/dialogs/SimpleDialog.tsx","src/components/wheely/WheelPicker.styles.ts","src/components/wheely/WheelPickerItem.tsx","src/components/wheely/WheelPicker.tsx","src/components/wheely/index.ts","src/components/number-picker/FloatPicker.tsx","src/components/number-picker/IntPicker.tsx","src/components/measure-slider-modal/MeasureSliderModal.tsx","src/components/cards/AtmoCard.tsx","src/components/radio-group/RadioGroup.tsx","src/components/dialogs/SimpleScrollDialog.tsx","src/components/cards/SettingsGeneralCard.tsx","src/components/cards/SettingsUnitCard.tsx","src/components/cards/WeaponCard.tsx","src/components/circular-slider/CircularSliderNative.tsx","src/components/circular-slider/web/circularGeometry.ts","src/components/circular-slider/web/svgPaths.ts","src/components/circular-slider/web/CircularSlider.tsx","src/components/circular-slider/web/index.tsx","src/components/wind-dir-picker/WindDirPicker.tsx","src/components/cards/WindCard.tsx","src/screens/home/HomeScreen.tsx","src/screens/atmo/CurrentAtmo.tsx","src/screens/settings/SettingsScreen.tsx","src/screens/calculate/Calculate.tsx","src/screens/trajectory/Trajectory.tsx","src/RootNavigation.tsx","src/RootScreenManager.tsx","App.tsx","webpack/bootstrap","webpack/runtime/amd options","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import React from \"react\";\r\nimport {ScrollView} from 'react-native';\r\nimport {useTheme, Text} from 'react-native-paper';\r\nimport {StyleSheet} from \"react-native\";\r\n\r\n\r\nexport default function Placeholder({text}: { text?: string }) {\r\n\r\n    const theme = useTheme();\r\n\r\n    const styles = StyleSheet.create({\r\n        scrollViewContainer: {\r\n            backgroundColor: theme.colors.background,\r\n        },\r\n    });\r\n\r\n    return (\r\n        <ScrollView\r\n            style={styles.scrollViewContainer}\r\n            keyboardShouldPersistTaps=\"always\"\r\n            alwaysBounceVertical={false}\r\n            showsVerticalScrollIndicator={true}\r\n\r\n            contentContainerStyle={{\r\n                flex: 1,\r\n                justifyContent: 'center',\r\n            }}\r\n        >\r\n            <Text style={{textAlign: \"center\"}}>{text ? text : \"Not implemented yet\"}</Text>\r\n        </ScrollView>\r\n    );\r\n}\r\n","const styleSheet = {\r\n    grid: {\r\n        grid: {\r\n            flex: 1,\r\n        },\r\n        row: {\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n        },\r\n        col: {\r\n            flex: 1,\r\n        },\r\n    },\r\n    card: {\r\n        card: {\r\n            margin: 15,\r\n            padding: 10\r\n        },\r\n        content: {\r\n            marginHorizontal: 0,\r\n            paddingHorizontal: 10\r\n        },\r\n    },\r\n    bottomBar: {\r\n        backgroundColor: 'aquamarine',\r\n        position: 'absolute',\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n    },\r\n    fab: {\r\n        position: 'absolute',\r\n        right: 16\r\n    },\r\n    chip: {\r\n        measure: {\r\n            display: \"flex\",\r\n            // marginLeft: \"auto\",\r\n        },\r\n        measure_text: {\r\n            textAlign: \"right\"\r\n        }\r\n    },\r\n    modal: {\r\n        simple: {\r\n            container: {\r\n                display: \"flex\",\r\n                alignSelf: \"center\",\r\n                // minWidth: 280,\r\n                margin: 20,\r\n                padding: 20\r\n            },\r\n            title: {\r\n                textAlign: \"center\",\r\n                marginBottom: 10\r\n            },\r\n        },\r\n    },\r\n    numberPicker: {\r\n        container: {\r\n            position: 'relative',\r\n        },\r\n        selectedIndicator: {\r\n            position: 'absolute',\r\n            width: '100%',\r\n            backgroundColor: 'hsl(200, 8%, 94%)',\r\n            borderRadius: 5,\r\n            top: '50%',\r\n        },\r\n    }\r\n}\r\n\r\nexport default styleSheet;","import styleSheet from \"./stylesheet\";\r\n\r\nexport default styleSheet;","import React, {useEffect, useState} from 'react';\r\nimport {Appbar, FAB, useTheme} from 'react-native-paper';\r\nimport {useSafeAreaInsets} from 'react-native-safe-area-context';\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport styleSheet from \"../../styles\";\r\n\r\n\r\nconst BOTTOM_APPBAR_HEIGHT = 80;\r\nconst MEDIUM_FAB_HEIGHT = 56;\r\n\r\nconst BotAppBar = () => {\r\n    const {bottom} = useSafeAreaInsets();\r\n    const theme = useTheme();\r\n\r\n    const navigation: any = useNavigation()\r\n\r\n    const [currentRoute, setCurrentRoute] = useState('');\r\n    useEffect(() => {\r\n        return navigation.addListener('state', () => {\r\n            const currentRouteName = navigation.getCurrentRoute()?.name || '';\r\n            setCurrentRoute(currentRouteName);\r\n        });\r\n    }, [navigation]);\r\n\r\n    const onFabPress = () => {\r\n        if (!(currentRoute === \"Home\")) {\r\n            navigation.navigate(\"Home\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Appbar\r\n            elevated={true}\r\n            style={[\r\n                styleSheet.bottomBar.position,\r\n                {\r\n                    height: BOTTOM_APPBAR_HEIGHT + bottom,\r\n                    backgroundColor: theme.colors.elevation.level2,\r\n                },\r\n            ]}\r\n            safeAreaInsets={{bottom}}\r\n        >\r\n\r\n            <Appbar.Action icon=\"weather-partly-cloudy\" onPress={() => navigation.navigate(\"Atmosphere\")}/>\r\n            <Appbar.Action icon=\"calculator\" onPress={() => navigation.navigate(\"Calculate\")}/>\r\n            <Appbar.Action icon=\"table-large\" onPress={() => navigation.navigate(\"Trajectory\")}/>\r\n            <Appbar.Action icon=\"cog-outline\" onPress={() => navigation.navigate(\"Settings\")}/>\r\n\r\n            <FAB\r\n                mode=\"flat\"\r\n                size=\"medium\"\r\n                icon={currentRoute === \"Home\" ? \"plus\" : \"home\"}\r\n                onPress={onFabPress}\r\n                style={[\r\n                    styleSheet.fab,\r\n                    {top: (BOTTOM_APPBAR_HEIGHT - MEDIUM_FAB_HEIGHT) / 2},\r\n                ]}\r\n            />\r\n\r\n        </Appbar>\r\n    );\r\n};\r\n\r\n\r\nexport default BotAppBar;","import { Appbar } from 'react-native-paper';\r\nimport { Platform } from 'react-native';\r\nimport { getHeaderTitle } from '@react-navigation/elements';\r\n\r\nconst MORE_ICON = Platform.OS === 'ios' ? 'dots-horizontal' : 'dots-vertical';\r\n\r\n\r\nexport default function TopAppBar({...props}) {\r\n    const {navigation, route, options, back, params} = props;\r\n    const { nightMode, toggleNightMode } = params;\r\n    const title = getHeaderTitle(options, route.name);\r\n\r\n    return (\r\n        <Appbar.Header elevated={true} >\r\n            {back ? <Appbar.BackAction onPress={navigation.goBack} /> : null}\r\n            <Appbar.Content title={title} />\r\n            <Appbar.Action\r\n                icon={nightMode ? \"brightness-7\" : \"brightness-3\"}\r\n                onPress={() => toggleNightMode(!nightMode)}\r\n            />\r\n            {/*{route.name === \"Home\" ? <Appbar.Action icon='cog' onPress={() => navigation.navigate('Settings')} /> : null}*/}\r\n            <Appbar.Action icon={MORE_ICON} onPress={() => { }} />\r\n\r\n\r\n        </Appbar.Header>\r\n    );\r\n\r\n}\r\n","import {Card} from \"react-native-paper\";\r\nimport React from \"react\";\r\nimport styleSheet from \"../../styles\";\r\n\r\n\r\n\r\nconst InputCard = ({children, title}) => {\r\n\r\n    return (\r\n        <Card mode=\"elevated\" elevation={1}\r\n              style={[styleSheet.card.card]}\r\n        >\r\n            <Card.Title titleVariant={\"titleLarge\"} title={title}></Card.Title>\r\n            <Card.Content style={styleSheet.card.content}>\r\n                {children}\r\n            </Card.Content>\r\n        </Card>\r\n    )\r\n}\r\n\r\n\r\nexport default InputCard;","import * as React from 'react';\r\nimport {Portal, Chip, useTheme, Button, Dialog, Text, FAB, Icon} from 'react-native-paper';\r\nimport {View} from \"react-native\";\r\n\r\n\r\nconst SimpleDialog = ({\r\n                         children,\r\n                         label,\r\n                         text,\r\n                         icon = null,\r\n                         onAccept = null,\r\n                         onDecline = null\r\n                     }) => {\r\n\r\n    const [visible, setVisible] = React.useState(false);\r\n\r\n    const showDialog = () => setVisible(true);\r\n    const hideDialog = () => {\r\n        setVisible(false);\r\n    };\r\n\r\n    const onAcceptBtn = () => {\r\n        if (onAccept) onAccept();\r\n        setVisible(false);\r\n    }\r\n\r\n    const onDeclineBtn = () => {\r\n        if (onDecline) onDecline();\r\n        setVisible(false);\r\n    }\r\n\r\n    return (\r\n        <View style={{display: \"flex\", justifyContent: \"center\"}}>\r\n            <Chip icon={icon} closeIcon=\"square-edit-outline\" style={{margin: 0}} textStyle={{fontSize: 16}}\r\n                  onPress={showDialog}\r\n                  onClose={showDialog}\r\n            >\r\n                {text}\r\n            </Chip>\r\n            <Portal>\r\n\r\n                <Dialog visible={visible} onDismiss={hideDialog} style={{justifyContent: \"center\"}}>\r\n                    <Dialog.Title>{label}</Dialog.Title>\r\n\r\n                    <Dialog.Content>{children}</Dialog.Content>\r\n\r\n                    <Dialog.Actions>\r\n                        <FAB icon=\"close\" mode={\"flat\"} size={'small'} onPress={onDeclineBtn}\r\n                             variant={'tertiary'} color={useTheme().colors.tertiary}/>\r\n                        <FAB icon=\"check\" mode={\"flat\"} size={'small'} onPress={onAcceptBtn}/>\r\n                    </Dialog.Actions>\r\n                </Dialog>\r\n\r\n            </Portal>\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default SimpleDialog;","import { StyleSheet } from 'react-native';\r\n\r\nexport default StyleSheet.create({\r\n  container: {\r\n    position: 'relative',\r\n  },\r\n  selectedIndicator: {\r\n    position: 'absolute',\r\n    width: '100%',\r\n    backgroundColor: 'hsl(200, 8%, 94%)',\r\n    borderRadius: 5,\r\n    top: '50%',\r\n  },\r\n  scrollView: {\r\n    overflow: 'hidden',\r\n    flex: 1,\r\n  },\r\n  option: {\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    paddingHorizontal: 16,\r\n    zIndex: 100,\r\n  },\r\n});\r\n","import React from 'react';\r\nimport { StyleProp, TextStyle, Animated, Text, ViewStyle } from 'react-native';\r\nimport styles from './WheelPicker.styles';\r\n\r\ninterface ItemProps {\r\n  textStyle: StyleProp<TextStyle>;\r\n  style: StyleProp<ViewStyle>;\r\n  option: string | null;\r\n  height: number;\r\n  index: number;\r\n  currentScrollIndex: Animated.AnimatedAddition<any>;\r\n  visibleRest: number;\r\n  rotationFunction: (x: number) => number;\r\n  opacityFunction: (x: number) => number;\r\n  scaleFunction: (x: number) => number;\r\n}\r\n\r\nconst WheelPickerItem: React.FC<ItemProps> = ({\r\n  textStyle,\r\n  style,\r\n  height,\r\n  option,\r\n  index,\r\n  visibleRest,\r\n  currentScrollIndex,\r\n  opacityFunction,\r\n  rotationFunction,\r\n  scaleFunction\r\n}) => {\r\n  const relativeScrollIndex = Animated.subtract(index, currentScrollIndex);\r\n\r\n  const translateY = relativeScrollIndex.interpolate({\r\n    inputRange: (() => {\r\n      const range = [0];\r\n      for (let i = 1; i <= visibleRest + 1; i++) {\r\n        range.unshift(-i);\r\n        range.push(i);\r\n      }\r\n      return range;\r\n    })(),\r\n    outputRange: (() => {\r\n      const range = [0];\r\n      for (let i = 1; i <= visibleRest + 1; i++) {\r\n        let y =\r\n          (height / 2) * (1 - Math.sin(Math.PI / 2 - rotationFunction(i)));\r\n        for (let j = 1; j < i; j++) {\r\n          y += height * (1 - Math.sin(Math.PI / 2 - rotationFunction(j)));\r\n        }\r\n        range.unshift(y);\r\n        range.push(-y);\r\n      }\r\n      return range;\r\n    })(),\r\n  });\r\n\r\n  const opacity = relativeScrollIndex.interpolate({\r\n    inputRange: (() => {\r\n      const range = [0];\r\n      for (let i = 1; i <= visibleRest + 1; i++) {\r\n        range.unshift(-i);\r\n        range.push(i);\r\n      }\r\n      return range;\r\n    })(),\r\n    outputRange: (() => {\r\n      const range = [1];\r\n      for (let x = 1; x <= visibleRest + 1; x++) {\r\n        const y = opacityFunction(x);\r\n        range.unshift(y);\r\n        range.push(y);\r\n      }\r\n      return range;\r\n    })(),\r\n  });\r\n\r\n  const scale = relativeScrollIndex.interpolate({\r\n    inputRange: (() => {\r\n      const range = [0];\r\n      for (let i = 1; i <= visibleRest + 1; i++) {\r\n        range.unshift(-i);\r\n        range.push(i);\r\n      }\r\n      return range;\r\n    })(),\r\n    outputRange: (() => {\r\n      const range = [1.0];\r\n      for (let x = 1; x <= visibleRest + 1; x++) {\r\n        const y = scaleFunction(x);\r\n        range.unshift(y);\r\n        range.push(y);\r\n      }\r\n      return range;\r\n    })(),\r\n  });\r\n\r\n  const rotateX = relativeScrollIndex.interpolate({\r\n    inputRange: (() => {\r\n      const range = [0];\r\n      for (let i = 1; i <= visibleRest + 1; i++) {\r\n        range.unshift(-i);\r\n        range.push(i);\r\n      }\r\n      return range;\r\n    })(),\r\n    outputRange: (() => {\r\n      const range = ['0deg'];\r\n      for (let x = 1; x <= visibleRest + 1; x++) {\r\n        const y = rotationFunction(x);\r\n        range.unshift(`${y}deg`);\r\n        range.push(`${y}deg`);\r\n      }\r\n      return range;\r\n    })(),\r\n  });\r\n\r\n  return (\r\n    <Animated.View\r\n      style={[\r\n        styles.option,\r\n        style,\r\n        {  height, opacity, transform: [{ translateY }, { rotateX }, { scale }]},\r\n      ]}\r\n    >\r\n      <Text style={textStyle}>{option}</Text>\r\n    </Animated.View>\r\n  );\r\n};\r\n\r\nexport default React.memo(\r\n  WheelPickerItem,\r\n  /**\r\n   * We enforce that this component will not rerender after the initial render.\r\n   * Therefore props that change on every render like style objects or functions\r\n   * do not need to be wrapped into useMemo and useCallback.\r\n   */\r\n  () => true,\r\n);\r\n","import React, { useEffect, useMemo, useRef, useState } from 'react';\r\nimport {\r\n  StyleProp,\r\n  TextStyle,\r\n  NativeSyntheticEvent,\r\n  NativeScrollEvent,\r\n  Animated,\r\n  ViewStyle,\r\n  View,\r\n  ViewProps,\r\n  FlatListProps,\r\n  FlatList,\r\n  Platform\r\n} from 'react-native';\r\nimport styles from './WheelPicker.styles';\r\nimport WheelPickerItem from './WheelPickerItem';\r\n\r\ninterface Props {\r\n  selectedIndex: number;\r\n  options: string[];\r\n  onChange: (index: number) => void;\r\n  selectedIndicatorStyle?: StyleProp<ViewStyle>;\r\n  itemTextStyle?: TextStyle;\r\n  itemStyle?: ViewStyle;\r\n  itemHeight?: number;\r\n  containerStyle?: ViewStyle;\r\n  containerProps?: Omit<ViewProps, 'style'>;\r\n  scaleFunction?: (x: number) => number;\r\n  rotationFunction?: (x: number) => number;\r\n  opacityFunction?: (x: number) => number;\r\n  visibleRest?: number;\r\n  decelerationRate?: 'normal' | 'fast' | number;\r\n  flatListProps?: Omit<FlatListProps<string | null>, 'data' | 'renderItem'>;\r\n}\r\n\r\nconst WheelPicker: React.FC<Props> = ({\r\n  selectedIndex,\r\n  options,\r\n  onChange,\r\n  selectedIndicatorStyle = {},\r\n  containerStyle = {},\r\n  itemStyle = {},\r\n  itemTextStyle = {},\r\n  itemHeight = 40,\r\n  scaleFunction = (x: number) => 1.0 ** x,\r\n  rotationFunction = (x: number) => 1 - Math.pow(1 / 2, x),\r\n  opacityFunction = (x: number) => Math.pow(1 / 3, x),\r\n  visibleRest = 2,\r\n  decelerationRate = 'fast',\r\n  containerProps = {},\r\n  flatListProps = {},\r\n}) => {\r\n  const flatListRef = useRef<FlatList>(null);\r\n  const [scrollY] = useState(new Animated.Value(0));\r\n\r\n  const lastScrollTimestamp = useRef(new Date().getTime());\r\n\r\n\r\n  const containerHeight = (1 + visibleRest * 2) * itemHeight;\r\n  const [scrollIndex, setScrollIndex] = useState(selectedIndex);\r\n  const paddedOptions = useMemo(() => {\r\n    const array: (string | null)[] = [...options];\r\n    for (let i = 0; i < visibleRest; i++) {\r\n      array.unshift(null);\r\n      array.push(null);\r\n    }\r\n    return array;\r\n  }, [options, visibleRest]);\r\n\r\n  const offsets = useMemo(\r\n    () => [...Array(paddedOptions.length)].map((x, i) => i * itemHeight),\r\n    [paddedOptions, itemHeight],\r\n  );\r\n\r\n  const currentScrollIndex = useMemo(\r\n    () => Animated.add(Animated.divide(scrollY, itemHeight), visibleRest),\r\n    [visibleRest, scrollY, itemHeight],\r\n  );\r\n\r\n  const handleMomentumScrollEnd = (\r\n    event: NativeSyntheticEvent<NativeScrollEvent>,\r\n  ) => {\r\n    // Due to list bounciness when scrolling to the start or the end of the list\r\n    // the offset might be negative or over the last item.\r\n    // We therefore clamp the offset to the supported range.\r\n    const offsetY = Math.min(\r\n      itemHeight * (options.length - 1),\r\n      Math.max(event.nativeEvent.contentOffset.y, 0),\r\n    );\r\n\r\n    let index = Math.floor(Math.floor(offsetY) / itemHeight);\r\n    const last = Math.floor(offsetY % itemHeight);\r\n    if (last > itemHeight / 2) index++;\r\n\r\n    if (index !== selectedIndex) {\r\n      onChange(index);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (selectedIndex < 0 || selectedIndex >= options.length) {\r\n      throw new Error(\r\n        `Selected index ${selectedIndex} is out of bounds [0, ${\r\n          options.length - 1\r\n        }]`,\r\n      );\r\n    }\r\n  }, [selectedIndex, options]);\r\n\r\n  /**\r\n   * If selectedIndex is changed from outside (not via onChange) we need to scroll to the specified index.\r\n   * This ensures that what the user sees as selected in the picker always corresponds to the value state.\r\n   */\r\n  useEffect(() => {\r\n    flatListRef.current?.scrollToIndex({\r\n      index: selectedIndex,\r\n      animated: false,\r\n    });\r\n  }, [selectedIndex]);\r\n\r\n  useEffect(() => {\r\n    if (Platform.OS === 'web') {\r\n      const SCROLL_COOLDOWN_MILLISECONDS = 100;\r\n      const SCROLL_DID_STOP_TIMEOUT = 500;\r\n      const intervalID = setInterval(() => {\r\n        const time = new Date().getTime();\r\n        const difference = time - lastScrollTimestamp.current;\r\n        if (difference > SCROLL_DID_STOP_TIMEOUT) {\r\n          flatListRef.current?.scrollToIndex({\r\n            index: scrollIndex,\r\n            animated: true,\r\n          });\r\n        }\r\n      }, SCROLL_COOLDOWN_MILLISECONDS);\r\n      return () => {\r\n        clearInterval(intervalID);\r\n      };\r\n    }\r\n  }, [scrollIndex]);\r\n\r\n  useEffect(() => {\r\n    if (Platform.OS === 'web') {\r\n      onChange(scrollIndex);\r\n    }\r\n  }, [scrollIndex, onChange]);\r\n\r\n  const handleScroll = (event: NativeSyntheticEvent<any>) => {\r\n    if (Platform.OS === 'web') {\r\n      const positionY = event.nativeEvent.contentOffset.y;\r\n      const index = Math.round(positionY / itemHeight);\r\n      setScrollIndex(index);\r\n      lastScrollTimestamp.current = new Date().getTime();\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <View\r\n      style={[styles.container, { height: containerHeight }, containerStyle]}\r\n      {...containerProps}\r\n    >\r\n      <View\r\n        style={[\r\n          styles.selectedIndicator,\r\n          selectedIndicatorStyle,\r\n          {\r\n            transform: [{ translateY: -itemHeight / 2 }],\r\n            height: itemHeight,\r\n          },\r\n        ]}\r\n      />\r\n      <Animated.FlatList<string | null>\r\n        {...flatListProps}\r\n        ref={flatListRef}\r\n        style={styles.scrollView}\r\n        showsVerticalScrollIndicator={false}\r\n        onScroll={Animated.event(\r\n          [{ nativeEvent: { contentOffset: { y: scrollY } } }],\r\n          {\r\n            useNativeDriver: true,\r\n            listener: (event: NativeSyntheticEvent<any>\r\n            ) => handleScroll(event),\r\n          },\r\n        )}\r\n        onMomentumScrollEnd={handleMomentumScrollEnd}\r\n        snapToOffsets={offsets}\r\n        decelerationRate={decelerationRate}\r\n        initialScrollIndex={selectedIndex}\r\n        getItemLayout={(data, index) => ({\r\n          length: itemHeight,\r\n          offset: itemHeight * index,\r\n          index,\r\n        })}\r\n        data={paddedOptions}\r\n        keyExtractor={(item, index) => index.toString()}\r\n        renderItem={({ item: option, index }) => (\r\n          <WheelPickerItem\r\n            key={`option-${index}`}\r\n            index={index}\r\n            option={option}\r\n            style={itemStyle}\r\n            textStyle={itemTextStyle}\r\n            height={itemHeight}\r\n            currentScrollIndex={currentScrollIndex}\r\n            scaleFunction={scaleFunction}\r\n            rotationFunction={rotationFunction}\r\n            opacityFunction={opacityFunction}\r\n            visibleRest={visibleRest}\r\n          />\r\n        )}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default WheelPicker;\r\n","import WheelPicker from './WheelPicker';\r\n\r\nexport default WheelPicker;","import React, {useState} from 'react';\r\nimport WheelPicker from '../wheely';\r\nimport styleSheet from \"../../styles\";\r\nimport {useTheme} from \"react-native-paper\";\r\nimport {View} from \"react-native\";\r\nimport type {NumberPickerProps} from \"./NumberPickerProps\";\r\n\r\n\r\nconst IntegerWheelPicker = ({...props}: NumberPickerProps) => {\r\n    const {curValue, minValue, maxValue, onChange, wheelProps} = props\r\n\r\n    const intRange: number[] = []\r\n    for (let i = Math.floor(minValue); i <= Math.floor(maxValue); i++) {\r\n        intRange.push(i)\r\n    }\r\n\r\n    const onIndexChange = (index: number): void => {\r\n        onChange(intRange[index]);\r\n    }\r\n\r\n    return (\r\n        <WheelPicker\r\n            {...wheelProps}\r\n            selectedIndex={intRange.indexOf(curValue)}\r\n            options={intRange.map(item => `${item}`)}\r\n            onChange={onIndexChange}\r\n        />\r\n    )\r\n}\r\n\r\n\r\nconst DecimalWheelPicker = ({...props}: NumberPickerProps) => {\r\n\r\n    const {curValue, decimals, onChange, wheelProps} = props\r\n\r\n    const decimalFormat = (value: number): string => (value % 1).toFixed(decimals).slice(1);\r\n    const decimalStep = 1 / (10 ** decimals)\r\n    const createDecimalOptions = (): string[] => {\r\n        let list = []\r\n        for (let i = 0; i < 1; i += decimalStep) {\r\n            list.push(decimalFormat(i))\r\n        }\r\n        return list\r\n    }\r\n\r\n    const decimalsOptions: string[] = createDecimalOptions()\r\n\r\n    const onDecimalChange = (index: number): void => {\r\n        onChange(parseFloat(decimalsOptions[index]));\r\n    }\r\n\r\n    return (\r\n        <WheelPicker\r\n            {...wheelProps}\r\n            selectedIndex={decimalsOptions.indexOf(decimalFormat(curValue))}\r\n            options={decimalsOptions}\r\n            onChange={onDecimalChange}\r\n        />\r\n    )\r\n}\r\n\r\n\r\nexport default function FloatPicker({...props}: NumberPickerProps) {\r\n\r\n    const {curValue, minValue, maxValue, decimals, onChange} = props\r\n\r\n    const theme = useTheme()\r\n\r\n    const style = {\r\n        selectedIndicatorStyle: {\r\n            ...styleSheet.numberPicker.selectedIndicator,\r\n            borderRadius: 0, backgroundColor: theme.colors.onSecondary\r\n        },\r\n        itemTextStyle: {color: theme.colors.secondary, fontWeight: \"bold\", fontSize: 24},\r\n        containerStyle: {\r\n            ...styleSheet.numberPicker.container,\r\n            backgroundColor: theme.colors.secondaryContainer,\r\n            marginTop: 10\r\n        }\r\n    }\r\n\r\n    const intWheelProps = {\r\n        ...style,\r\n        containerStyle: {...style.containerStyle, borderTopLeftRadius: 24, borderBottomLeftRadius: 24},\r\n        itemStyle: {marginLeft: \"auto\", marginRight: 0, paddingRight: 5},\r\n    }\r\n\r\n    const decimalWheelProps = {\r\n        ...style,\r\n        containerStyle: {...style.containerStyle, borderTopRightRadius: 24, borderBottomRightRadius: 24},\r\n        itemStyle: {marginLeft: 0, marginRight: \"auto\", paddingLeft: 5},\r\n    }\r\n\r\n    const [int, setInt] = useState(Math.floor(curValue))\r\n    const [decimal, setDecimal] = useState(curValue % 1)\r\n    const onValueChange = (value: number) => {\r\n        onChange ? onChange(value + decimal) : null\r\n    }\r\n\r\n    const onIntChange = (value) => {\r\n        setInt(value)\r\n        onValueChange(value + decimal)\r\n    }\r\n\r\n    const onDecimalChange = (value) => {\r\n        setDecimal(value)\r\n        onValueChange(value + int)\r\n    }\r\n\r\n    return (\r\n        <View style={{flexDirection: \"row\", justifyContent: 'center'}}>\r\n            <IntegerWheelPicker\r\n                wheelProps={intWheelProps}\r\n                {...{...props, curValue: int}}\r\n                onChange={onIntChange}\r\n            />\r\n\r\n            <DecimalWheelPicker\r\n                wheelProps={decimalWheelProps}\r\n                {...{...props, curValue: decimal}}\r\n                onChange={onDecimalChange}\r\n            />\r\n        </View>\r\n    );\r\n}","import React from 'react';\r\nimport WheelPicker from '../wheely';\r\nimport styleSheet from \"../../styles\";\r\nimport {useTheme} from \"react-native-paper\";\r\nimport {View} from \"react-native\";\r\nimport type {NumberPickerProps} from \"./NumberPickerProps\";\r\n\r\n\r\nexport default function IntPicker({...props}: NumberPickerProps) {\r\n    const {maxValue, minValue, onChange, curValue} = props\r\n\r\n    const theme = useTheme()\r\n\r\n    const range = []\r\n    for (let i = minValue; i <= maxValue; i++) {\r\n        range.push(i)\r\n    }\r\n\r\n    const onValueChange = (index: number) => {\r\n        if (onChange) onChange(range[index]);\r\n    }\r\n\r\n    const style: any = {\r\n        selectedIndicatorStyle: {\r\n            ...styleSheet.numberPicker.selectedIndicator,\r\n            borderRadius: 0,\r\n            backgroundColor: theme.colors.onSecondary\r\n        },\r\n        containerStyle: {\r\n            ...styleSheet.numberPicker.container,\r\n            backgroundColor: theme.colors.secondaryContainer,\r\n            borderRadius: 24,\r\n            marginTop: 10\r\n        },\r\n        itemTextStyle: {color: theme.colors.secondary, fontWeight: \"bold\", fontSize: 24},\r\n    }\r\n\r\n    return (\r\n        <View style={{flexDirection: \"row\", justifyContent: 'center'}}>\r\n            <WheelPicker\r\n                {...style}\r\n                selectedIndex={range.indexOf(curValue)}\r\n                options={range}\r\n                onChange={onValueChange}\r\n            />\r\n        </View>\r\n    );\r\n}","import React, {useState} from \"react\";\r\nimport {Col, Row} from \"react-native-paper-grid\";\r\nimport styleSheet from \"../../styles\";\r\nimport {Text} from \"react-native-paper\";\r\nimport SimpleDialog from \"../dialogs/SimpleDialog\";\r\nimport {IntPicker, FloatPicker} from \"../number-picker\";\r\n\r\n\r\nexport interface MeasureField {\r\n    field: {\r\n        key: any\r\n        label: string\r\n        suffix: string\r\n        icon: string\r\n        mode: (\"int\" | \"float\")\r\n        initialValue: number\r\n        maxValue: number\r\n        minValue: number\r\n        decimals: number\r\n    }\r\n}\r\n\r\n\r\nexport default function MeasureSliderModal({field}: MeasureField) {\r\n    const [curValue, setCurValue] = useState(field.initialValue);\r\n    const [value, setValue] = useState(curValue)\r\n\r\n    const onAccept = () => {\r\n        setCurValue(value)\r\n    }\r\n\r\n    const onDecline = () => {\r\n        setValue(value)\r\n    }\r\n\r\n    const pickerProps = {\r\n        ...field,\r\n        curValue: curValue,\r\n        onChange: setValue\r\n    }\r\n\r\n    const picker =  field.mode === \"int\"\r\n        ? <IntPicker {...pickerProps}/>\r\n        : <FloatPicker {...pickerProps}/>\r\n\r\n    return (\r\n        <Row style={styleSheet.grid.row}>\r\n            <Col size={8}>\r\n                <Text style={{fontSize: 16}}>{field.label}</Text>\r\n            </Col>\r\n            <Col size={8}>\r\n                <SimpleDialog icon={field.icon} label={`${field.label}, ${field.suffix}`}\r\n                              text={`${curValue.toFixed(field.decimals)} ${field.suffix}`}\r\n                              onAccept={onAccept}\r\n                              onDecline={onDecline}>\r\n                    {picker}\r\n                </SimpleDialog>\r\n            </Col>\r\n        </Row>)\r\n}","import {Grid} from \"react-native-paper-grid\";\r\nimport React from \"react\";\r\nimport InputCard from \"./InputCard\";\r\nimport styleSheet from \"../../styles\";\r\nimport {Unit, UnitProps} from \"js-ballistics\";\r\nimport MeasureSliderModal from \"../measure-slider-modal/MeasureSliderModal\";\r\n\r\n\r\nexport default function AtmoCard() {\r\n\r\n    const fields = [\r\n        {\r\n            key: \"temp\",\r\n            label: \"Temperature\",\r\n            suffix: UnitProps[Unit.Celsius].symbol,\r\n            icon: \"thermometer\",\r\n            mode: \"int\" as const,\r\n            initialValue: 15,\r\n            maxValue: 50,\r\n            minValue: -50,\r\n            decimals: 0\r\n        },\r\n        {\r\n            key: \"pressure\",\r\n            label: \"Pressure\",\r\n            suffix: UnitProps[Unit.MmHg].symbol,\r\n            icon: \"speedometer\",\r\n            mode: \"int\" as const,\r\n            initialValue: 760,\r\n            maxValue: 1000,\r\n            minValue: 700,\r\n            decimals: 0\r\n        },\r\n        {\r\n            key: \"humidity\",\r\n            label: \"Humidity\",\r\n            suffix: \"%\",\r\n            icon: \"water\",\r\n            mode: \"int\" as const,\r\n            initialValue: 78,\r\n            maxValue: 100,\r\n            minValue: 0,\r\n            decimals: 0\r\n        },\r\n        {\r\n            key: \"altitude\",\r\n            label: \"Altitude\",\r\n            suffix: UnitProps[Unit.Meter].symbol,\r\n            icon: \"ruler\",\r\n            mode: \"int\" as const,\r\n            initialValue: 150,\r\n            maxValue: 3000,\r\n            minValue: 0,\r\n            decimals: 0,\r\n        },\r\n    ]\r\n\r\n    return (\r\n        <InputCard title={\"Current atmosphere\"}>\r\n            <Grid style={styleSheet.grid.grid}>\r\n                {fields.map(field => <MeasureSliderModal key={field.key} field={field}/>)}\r\n            </Grid>\r\n        </InputCard>\r\n    )\r\n}","import React, {useState} from \"react\";\r\nimport {List, RadioButton} from \"react-native-paper\";\r\n\r\ntype RadioItem = {\r\n    label: string\r\n    key: any\r\n    value: any\r\n}\r\n\r\n\r\ntype RadioProps = {\r\n    initialValue: any\r\n    onChange: Function|any\r\n    items: RadioItem[]\r\n}\r\n\r\n\r\nexport default function RadioGroup({initialValue, onChange, items}: RadioProps) {\r\n\r\n    const [value, setValue] = useState(initialValue);\r\n\r\n    const onValueChange = (value: number) => {\r\n        setValue(value);\r\n        if (onChange) onChange(value);\r\n    }\r\n\r\n    return (\r\n            <RadioButton.Group onValueChange={onValueChange} value={value}>\r\n                {items.map(item =>\r\n                        <RadioButton.Item key={item.value} label={item.label} value={item.value}/>\r\n                )}\r\n            </RadioButton.Group>\r\n    );\r\n\r\n}","import * as React from 'react';\r\nimport {Portal, Chip, useTheme, Button, Dialog, Text, FAB} from 'react-native-paper';\r\nimport {ScrollView, View} from \"react-native\";\r\n\r\n\r\nconst SimpleScrollDialog = ({\r\n                         children,\r\n                         title,\r\n                         text,\r\n                         icon = null,\r\n                         onAccept = null,\r\n                         onDecline = null\r\n                     }) => {\r\n\r\n    const [visible, setVisible] = React.useState(false);\r\n\r\n    const showDialog = () => setVisible(true);\r\n    const hideDialog = () => {\r\n        setVisible(false);\r\n    };\r\n\r\n    const onAcceptBtn = () => {\r\n        if (onAccept) onAccept();\r\n        setVisible(false);\r\n    }\r\n\r\n    const onDeclineBtn = () => {\r\n        if (onDecline) onDecline();\r\n        setVisible(false);\r\n    }\r\n\r\n    return (\r\n        <View style={{display: \"flex\", justifyContent: \"center\"}}>\r\n            <Chip icon={icon} closeIcon=\"square-edit-outline\" style={{margin: 0}} textStyle={{fontSize: 16}}\r\n                  onPress={showDialog}\r\n                  onClose={showDialog}\r\n                // textStyle={{fontSize: 18}}\r\n            >\r\n                {text}\r\n            </Chip>\r\n            <Portal>\r\n\r\n                <Dialog visible={visible} onDismiss={hideDialog} style={{justifyContent: \"center\"}}>\r\n                    <Dialog.Title>{title}</Dialog.Title>\r\n\r\n                    <Dialog.ScrollArea>\r\n                        <ScrollView contentContainerStyle={{padding: 24}}>\r\n                            {children}\r\n                        </ScrollView>\r\n                    </Dialog.ScrollArea>\r\n\r\n                    <Dialog.Actions>\r\n                        <FAB icon=\"close\" mode={\"flat\"} size={'small'} onPress={onDeclineBtn}\r\n                             variant={'tertiary'} color={useTheme().colors.tertiary}/>\r\n                        <FAB icon=\"check\" mode={\"flat\"} size={'small'} onPress={onAcceptBtn}/>\r\n                    </Dialog.Actions>\r\n                </Dialog>\r\n\r\n            </Portal>\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default SimpleScrollDialog;","import {Text} from \"react-native-paper\"\r\nimport {Col, Grid, Row} from \"react-native-paper-grid\";\r\nimport InputCard from \"./InputCard\";\r\nimport styleSheet from \"../../styles\";\r\n\r\nimport {useState} from \"react\";\r\nimport RadioGroup from \"../radio-group/RadioGroup\";\r\nimport {SimpleScrollDialog} from \"../dialogs\";\r\n\r\nexport default function SettingsGeneralCard() {\r\n\r\n    const languageList = [\r\n        {\r\n            label: \"English\",\r\n            value: \"EN\",\r\n            key: \"EN\"\r\n        },\r\n        {\r\n            label: \"Ukrainian\",\r\n            value: \"UA\",\r\n            key: \"UA\"\r\n        },\r\n    ];\r\n\r\n    const [curLanguage, setCurLanguage] = useState(\"EN\");\r\n    const [language, setLanguage] = useState(curLanguage);\r\n\r\n    const onAccept = () => {\r\n        setCurLanguage(language)\r\n    }\r\n\r\n    const onDecline = () => {\r\n        setLanguage(curLanguage)\r\n    }\r\n\r\n    return (\r\n        <InputCard title={\"General\"}>\r\n            <Grid style={styleSheet.grid.grid}>\r\n\r\n                <Row style={styleSheet.grid.row}>\r\n                    <Col size={9}>\r\n                        <Text style={{fontSize: 16}}>{\"Language\"}</Text>\r\n                    </Col>\r\n                    <Col size={7}>\r\n                        <SimpleScrollDialog title={\"Language\"} text={curLanguage} icon={\"translate\"}\r\n                                      onAccept={onAccept}\r\n                                      onDecline={onDecline}>\r\n                            <RadioGroup initialValue={language} onChange={setLanguage} items={languageList} />\r\n                        </SimpleScrollDialog>\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Grid>\r\n        </InputCard>\r\n    )\r\n\r\n}","import {Text} from \"react-native-paper\"\r\nimport {Col, Grid, Row} from \"react-native-paper-grid\";\r\nimport InputCard from \"./InputCard\";\r\nimport styleSheet from \"../../styles\";\r\n\r\n\r\nimport {\r\n    Unit,\r\n    UnitProps,\r\n    Measure,\r\n} from \"js-ballistics\"\r\nimport {SimpleScrollDialog} from \"../dialogs\";\r\nimport {useState} from \"react\";\r\nimport RadioGroup from \"../radio-group/RadioGroup\";\r\n\r\n\r\nconst get_unit_list = (measure: Object) =>\r\n    Object.keys(measure).map((key: string): { label: string, value: Unit } => {\r\n        return {label: UnitProps[measure[key]].name, value: measure[key]}\r\n    })\r\n\r\nconst fields = [\r\n    {\r\n        key: \"distance\",\r\n        label: \"Distance\",\r\n        list: [\r\n            {label: UnitProps[Unit.Meter].name, value: Unit.Meter},\r\n            {label: UnitProps[Unit.Foot].name, value: Unit.Foot},\r\n            {label: UnitProps[Unit.Yard].name, value: Unit.Yard},\r\n        ],\r\n        def: Unit.Meter,\r\n    },\r\n    {\r\n        key: \"velocity\",\r\n        label: \"Velocity\",\r\n        list: [\r\n            {label: UnitProps[Unit.MPS].name, value: Unit.MPS},\r\n            {label: UnitProps[Unit.FPS].name, value: Unit.FPS},\r\n        ],\r\n        def: Unit.MPS\r\n    },\r\n    {\r\n        key: \"angular\",\r\n        label: \"Angular\",\r\n        list: get_unit_list(Measure.Angular),\r\n        def: Unit.Degree\r\n    },\r\n    {\r\n      key: \"sizes\",\r\n      label: \"Sizes\",\r\n    list: [\r\n        {label: UnitProps[Unit.Inch].name, value: Unit.Inch},\r\n        {label: UnitProps[Unit.Millimeter].name, value: Unit.Millimeter},\r\n        {label: UnitProps[Unit.Centimeter].name, value: Unit.Centimeter},\r\n        {label: UnitProps[Unit.Centimeter].name, value: Unit.Line},\r\n    ],\r\n      def: Unit.Inch\r\n    },\r\n    {\r\n        key: \"weight\",\r\n        label: \"Weight\",\r\n        list: get_unit_list(Measure.Weight),\r\n        def: Unit.Grain\r\n    },\r\n    {\r\n        key: \"temperature\",\r\n        label: \"Temperature\",\r\n        list: [\r\n            {label: UnitProps[Unit.Celsius].name, value: Unit.Celsius},\r\n            {label: UnitProps[Unit.Fahrenheit].name, value: Unit.Fahrenheit},\r\n        ],\r\n        def: Unit.Celsius\r\n    },\r\n    {\r\n        key: \"pressure\",\r\n        label: \"Pressure\",\r\n        list: get_unit_list(Measure.Pressure),\r\n        def: Unit.PSI\r\n    },\r\n    {\r\n        key: \"energy\",\r\n        label: \"Energy\",\r\n        list: get_unit_list(Measure.Energy),\r\n        def: Unit.Joule\r\n    },\r\n    {\r\n        key: \"adjustment\",\r\n        label: \"Adjustment\",\r\n        list: get_unit_list(Measure.Angular),\r\n        def: Unit.MIL\r\n    },\r\n]\r\n\r\n\r\nexport default function SettingsUnitCard() {\r\n\r\n    const UnitSelector = ({field}) => {\r\n\r\n        const [curValue, setCurValue] = useState(field.def);\r\n        const [value, setValue] = useState(curValue)\r\n\r\n        const onAccept = () => {\r\n            setCurValue(value)\r\n        }\r\n\r\n        return (\r\n            <Row style={styleSheet.grid.row} key={field.key}>\r\n                <Col size={9}>\r\n                    <Text style={{fontSize: 16}}>{field.label}</Text>\r\n                </Col>\r\n                <Col size={7}>\r\n                    <SimpleScrollDialog title={field.label} text={UnitProps[curValue].name} onAccept={onAccept}>\r\n                        <RadioGroup initialValue={curValue} onChange={setValue} items={field.list} />\r\n                    </SimpleScrollDialog>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <InputCard title=\"Units of measurement\">\r\n            <Grid style={styleSheet.grid.grid}>\r\n                {fields.map(field => <UnitSelector key={field.key} field={field}/>)}\r\n            </Grid>\r\n        </InputCard>\r\n    )\r\n\r\n}","import {Text, SegmentedButtons, TextInput, useTheme} from \"react-native-paper\";\r\nimport {Col, Grid, Row} from \"react-native-paper-grid\";\r\nimport React, {useState} from \"react\";\r\nimport InputCard from \"./InputCard\";\r\nimport styleSheet from \"../../styles\";\r\nimport {SimpleDialog} from \"../dialogs\";\r\nimport MeasureSliderModal from \"../measure-slider-modal/MeasureSliderModal\";\r\n\r\n\r\nexport default function WeaponCard() {\r\n\r\n    const theme = useTheme()\r\n\r\n    const fields = [\r\n        {\r\n            key: \"diameter\",\r\n            label: \"Diameter\",\r\n            suffix: \"in\",\r\n            icon: \"diameter-variant\",\r\n            mode: \"float\" as const,\r\n            initialValue: 0.308,\r\n            maxValue: 22,\r\n            minValue: 0.001,\r\n            decimals: 3,\r\n        },\r\n        {\r\n            key: \"twist\",\r\n            label: \"Twist\",\r\n            suffix: \"in\",\r\n            icon: \"screw-flat-top\",\r\n            mode: \"float\" as const,\r\n            initialValue: 11,\r\n            maxValue: 20,\r\n            minValue: -20,\r\n            decimals: 2,\r\n        },\r\n    ]\r\n\r\n    const twistStates = [\r\n        {\r\n            value: 'Right',\r\n            label: 'Right',\r\n            icon: \"rotate-right\",\r\n            showSelectedCheck: true,\r\n            checkedColor: theme.colors.primary\r\n        },\r\n        {value: 'Left', label: 'Left', icon: \"rotate-left\", showSelectedCheck: true, checkedColor: theme.colors.primary}\r\n    ]\r\n\r\n    const [curTwistDir, setCurTwistDir] = useState(\"Right\");\r\n    const [twistDir, setTwistDir] = useState(curTwistDir);\r\n\r\n    const [curName, setCurName] = React.useState(\"My rifle\");\r\n    const [name, setName] = React.useState(curName);\r\n\r\n    const acceptTwistDir = (): void => {\r\n        setCurTwistDir(twistDir)\r\n    }\r\n\r\n    const acceptName = () => {\r\n        setCurName(name)\r\n    }\r\n\r\n    const declineName = () => {\r\n        setName(curName)\r\n    }\r\n\r\n    return (\r\n\r\n        <InputCard title={\"Weapon\"}>\r\n\r\n            <SimpleDialog label={\"Name\"} icon={\"card-bulleted-outline\"}\r\n                          text={curName}\r\n                          onAccept={acceptName}\r\n                          onDecline={declineName}\r\n            >\r\n                <TextInput value={name} onChangeText={setName} />\r\n            </SimpleDialog>\r\n\r\n            <Grid style={styleSheet.grid.grid}>\r\n\r\n                {fields.map(field => <MeasureSliderModal key={field.key} field={field}/>)}\r\n\r\n                <Row style={styleSheet.grid.row}>\r\n                    <Col size={8}>\r\n                        <Text style={{fontSize: 16}}>Twist direction</Text>\r\n                    </Col>\r\n                    <Col size={8}>\r\n                        <SimpleDialog label={\"Twist\"} icon={curTwistDir === \"Right\" ? \"rotate-right\" : \"rotate-left\"}\r\n                                      text={curTwistDir} onAccept={acceptTwistDir}>\r\n                            <SegmentedButtons\r\n                                buttons={twistStates} value={twistDir} onValueChange={setTwistDir}/>\r\n                        </SimpleDialog>\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Grid>\r\n        </InputCard>\r\n\r\n    )\r\n}","import React, {FC, useState, useRef, useCallback} from \"react\";\r\nimport {PanResponder, Dimensions, type ColorValue} from \"react-native\";\r\nimport Svg, {Path, Circle, G, Text, Polygon} from \"react-native-svg\";\r\n\r\ninterface Props {\r\n    btnRadius?: number;\r\n    btnColor?: string;\r\n    dialRadius?: number;\r\n    dialWidth?: number;\r\n    meterColor?: string;\r\n    textColor?: string;\r\n    fillColor?: string;\r\n    strokeColor?: string;\r\n    strokeWidth?: number;\r\n    textSize?: number;\r\n    value?: number;\r\n    minAngle?: number;\r\n    maxAngle?: number;\r\n    minValue?: number;\r\n    maxValue?: number;\r\n    xCenter?: number;\r\n    yCenter?: number;\r\n    onValueChange?: (x: number) => number;\r\n    coerceToInt?: boolean;\r\n}\r\n\r\nconst CircularSliderNative: FC<Props> = ({\r\n                                     btnRadius = 15,\r\n                                     btnColor = \"#0cd\",\r\n                                     dialRadius = 130,\r\n                                     dialWidth = 5,\r\n                                     meterColor = \"#0cd\",\r\n                                     textColor = \"#fff\",\r\n                                     fillColor = \"none\",\r\n                                     strokeColor = \"#fff\",\r\n                                     strokeWidth = 0.5,\r\n                                     textSize = 10,\r\n                                     value = 0,\r\n                                     minAngle = 0,\r\n                                     maxAngle = 360,\r\n                                     minValue=0,\r\n                                     maxValue=360,\r\n                                     xCenter = Dimensions.get(\"window\").width / 2,\r\n                                     yCenter = Dimensions.get(\"window\").height / 2,\r\n                                     onValueChange = (x) => x,\r\n                                     coerceToInt = false\r\n                                 }) => {\r\n    const step = (maxAngle-minAngle) / (maxValue-minValue)\r\n\r\n    const [angle, setAngle] = useState(value * step);\r\n\r\n    console.log(step)\r\n    const onChange = (value) => {\r\n        value = value / step\r\n        onValueChange(value)\r\n        return value\r\n    }\r\n\r\n    const panResponder = useRef(\r\n        PanResponder.create({\r\n            onStartShouldSetPanResponder: (e, gs) => true,\r\n            onStartShouldSetPanResponderCapture: (e, gs) => true,\r\n            onMoveShouldSetPanResponder: (e, gs) => true,\r\n            onMoveShouldSetPanResponderCapture: (e, gs) => true,\r\n            onPanResponderMove: (e, gs) => {\r\n                let xOrigin = xCenter - (dialRadius + btnRadius);\r\n                let yOrigin = yCenter - (dialRadius + btnRadius);\r\n                let a = cartesianToPolar(gs.moveX - xOrigin, gs.moveY - yOrigin);\r\n\r\n                if (a <= minAngle) {\r\n                    setAngle(minAngle);\r\n                } else if (a >= maxAngle) {\r\n                    setAngle(maxAngle);\r\n                } else {\r\n\r\n                    if (coerceToInt) {\r\n                        a = Math.round(a / step) * step\r\n                    }\r\n                    setAngle(a);\r\n                }\r\n            },\r\n        })\r\n    ).current;\r\n\r\n    const polarToCartesian = useCallback(\r\n        (angle) => {\r\n            let r = dialRadius;\r\n            let hC = dialRadius + btnRadius;\r\n            let a = ((angle - 90) * Math.PI) / 180.0;\r\n\r\n            let x = hC + r * Math.cos(a);\r\n            let y = hC + r * Math.sin(a);\r\n            return {x, y};\r\n        },\r\n        [dialRadius, btnRadius]\r\n    );\r\n\r\n    const cartesianToPolar = useCallback(\r\n        (x, y) => {\r\n            let hC = dialRadius + btnRadius;\r\n\r\n            if (x === 0) {\r\n                return y > hC ? 0 : 180;\r\n            } else if (y === 0) {\r\n                return x > hC ? 90 : 270;\r\n            } else {\r\n                return (\r\n                    Math.round((Math.atan((y - hC) / (x - hC)) * 180) / Math.PI) +\r\n                    (x > hC ? 90 : 270)\r\n                );\r\n            }\r\n        },\r\n        [dialRadius, btnRadius]\r\n    );\r\n\r\n    const width = (dialRadius + btnRadius) * 2;\r\n    const bR = btnRadius;\r\n    const dR = dialRadius;\r\n    const startCoord = polarToCartesian(0);\r\n    let endCoord = polarToCartesian(angle);\r\n\r\n    return (\r\n        <Svg width={width} height={width}>\r\n            <Circle\r\n                r={dR}\r\n                cx={width / 2}\r\n                cy={width / 2}\r\n                stroke={strokeColor}\r\n                strokeWidth={strokeWidth}\r\n                fill={fillColor}\r\n            />\r\n\r\n            <Path\r\n                stroke={meterColor}\r\n                strokeWidth={dialWidth}\r\n                fill=\"none\"\r\n                d={`M${startCoord.x} ${startCoord.y} A ${dR} ${dR} 0 ${\r\n                    angle > 180 ? 1 : 0\r\n                } 1 ${endCoord.x} ${endCoord.y}`}\r\n            />\r\n\r\n            <G x={endCoord.x - bR} y={endCoord.y - bR}>\r\n                {/*<Circle*/}\r\n                {/*    r={bR}*/}\r\n                {/*    cx={bR}*/}\r\n                {/*    cy={bR}*/}\r\n                {/*    fill={btnColor}*/}\r\n                {/*    {...panResponder.panHandlers}*/}\r\n                {/*/>*/}\r\n\r\n                <Polygon\r\n                    points={`\r\n                     ${bR},${bR + width / 4}\r\n                     ${bR + 1.5 * btnRadius},${bR} \r\n                     ${bR - 1.5 * btnRadius},${bR} \r\n                    `}\r\n                    fill={btnColor}\r\n                    transform={`rotate(${angle} ${bR} ${bR})`}\r\n                    {...panResponder.panHandlers}\r\n                >\r\n                    {onChange(angle) + \"\"}\r\n                </Polygon>\r\n\r\n                {/*<Polygon*/}\r\n                {/*    points={`*/}\r\n                {/*     ${bR - btnRadius},${bR+width/2 - 5*btnRadius} */}\r\n                {/*     ${bR},${bR+width/2 - btnRadius}*/}\r\n                {/*     ${bR + btnRadius},${bR+width/2 - 5*btnRadius} */}\r\n                {/*     ${bR + btnRadius},${bR} */}\r\n                {/*     ${bR - btnRadius},${bR} */}\r\n                {/*    `}*/}\r\n                {/*    fill={btnColor}*/}\r\n                {/*    transform={`rotate(${angle} ${bR} ${bR})`}*/}\r\n                {/*    {...panResponder.panHandlers}*/}\r\n                {/*>*/}\r\n                {/*    {onChange(angle) + \"\"}*/}\r\n                {/*</Polygon>*/}\r\n\r\n                {/*<Polygon*/}\r\n                {/*    points={`${bR},${bR+btnRadius} */}\r\n                {/*     ${bR + btnRadius},${bR - btnRadius} */}\r\n                {/*     ${bR - btnRadius},${bR - btnRadius} `}*/}\r\n                {/*    fill={btnColor}*/}\r\n                {/*    transform={`rotate(${angle} ${bR} ${bR})`}*/}\r\n                {/*    {...panResponder.panHandlers}*/}\r\n\r\n                {/*>*/}\r\n                {/*{onChange(angle) + \"\"}*/}\r\n                {/*</Polygon>*/}\r\n\r\n\r\n                {/*<Text*/}\r\n                {/*    x={bR - btnRadius}*/}\r\n                {/*    y={bR + textSize / 2 - btnRadius}*/}\r\n                {/*    fontSize={textSize}*/}\r\n                {/*    fill={textColor}*/}\r\n                {/*    textAnchor=\"middle\"*/}\r\n                {/*>*/}\r\n                {/*    {onChange(angle) + \"\"}*/}\r\n                {/*</Text>*/}\r\n            </G>\r\n        </Svg>\r\n    );\r\n};\r\n\r\nexport default React.memo(CircularSliderNative);","export function angleToValue(params: {\n    angle: number;\n    minValue: number;\n    maxValue: number;\n    startAngle: number;\n    endAngle: number;\n}) {\n    const { angle, minValue, maxValue, startAngle, endAngle } = params;\n    if (endAngle <= startAngle) {\n        // math assumes endAngle > startAngle\n        throw new Error(\"endAngle must be greater than startAngle\");\n    }\n\n    if (angle < startAngle) {\n        return minValue;\n    } else if (angle > endAngle) {\n        return maxValue;\n    } else {\n        const ratio = (angle - startAngle) / (endAngle - startAngle);\n        const value = ratio * (maxValue - minValue) + minValue;\n        return value;\n    }\n}\n\nexport function valueToAngle(params: {\n    value: number;\n    minValue: number;\n    maxValue: number;\n    startAngle: number;\n    endAngle: number;\n}) {\n    const { value, minValue, maxValue, startAngle, endAngle } = params;\n    if (endAngle <= startAngle) {\n        // math assumes endAngle > startAngle\n        throw new Error(\"endAngle must be greater than startAngle\");\n    }\n    const ratio = (value - minValue) / (maxValue - minValue);\n    const angle = ratio * (endAngle - startAngle) + startAngle;\n    return angle;\n}\n\nexport type AngleDescription = {\n    direction: \"cw\" | \"ccw\";\n    axis: \"+x\" | \"-x\" | \"+y\" | \"-y\";\n};\n\nexport type AngleWithDescription = {\n    degree: number;\n} & AngleDescription;\n\nfunction convertAngle(\n    degree: number,\n    from: AngleDescription,\n    to?: AngleDescription\n) {\n    to = to || { direction: \"ccw\", axis: \"+x\" };\n\n    if (from.direction !== to.direction) {\n        degree = degree === 0 ? 0 : 360 - degree;\n    }\n\n    if (from.axis === to.axis) {\n        // e.g. +x to +x\n        return degree;\n    }\n\n    if (from.axis[1] === to.axis[1]) {\n        // e.g. +x to -x\n        return (180 + degree) % 360;\n    }\n\n    switch (to.direction + from.axis + to.axis) {\n        case \"ccw+x-y\":\n        case \"ccw-x+y\":\n        case \"ccw+y+x\":\n        case \"ccw-y-x\":\n        case \"cw+y-x\":\n        case \"cw-y+x\":\n        case \"cw-x-y\":\n        case \"cw+x+y\":\n            return (90 + degree) % 360;\n        case \"ccw+y-x\":\n        case \"ccw-y+x\":\n        case \"ccw+x+y\":\n        case \"ccw-x-y\":\n        case \"cw+x-y\":\n        case \"cw-x+y\":\n        case \"cw+y+x\":\n        case \"cw-y-x\":\n            return (270 + degree) % 360;\n        default:\n            // This is impossible, just for TS\n            throw new Error(\"Unhandled conversion\");\n    }\n}\n\nexport function angleToPosition(\n    angle: AngleWithDescription,\n    radius: number,\n    svgSize: number\n) {\n    // js functions need radians, counterclockwise from positive x axis\n    const angleConverted = convertAngle(angle.degree, angle, {\n        direction: \"ccw\",\n        axis: \"+x\",\n    });\n    const angleInRad = (angleConverted / 180) * Math.PI;\n    let dX: number;\n    let dY: number;\n\n    if (angleInRad <= Math.PI) {\n        // we are in the upper two quadrants\n        if (angleInRad <= Math.PI / 2) {\n            dY = Math.sin(angleInRad) * radius;\n            dX = Math.cos(angleInRad) * radius;\n        } else {\n            dY = Math.sin(Math.PI - angleInRad) * radius;\n            dX = Math.cos(Math.PI - angleInRad) * radius * -1;\n        }\n    } else {\n        // we are in the lower two quadrants\n        if (angleInRad <= Math.PI * 1.5) {\n            dY = Math.sin(angleInRad - Math.PI) * radius * -1;\n            dX = Math.cos(angleInRad - Math.PI) * radius * -1;\n        } else {\n            dY = Math.sin(2 * Math.PI - angleInRad) * radius * -1;\n            dX = Math.cos(2 * Math.PI - angleInRad) * radius;\n        }\n    }\n\n    // dX and dY are calculated based on having (0, 0) at the center\n    // Now, translate dX and dY to svg coordinates, where (0, 0) is at the top left\n    const x = dX + svgSize / 2;\n    const y = svgSize / 2 - dY;\n\n    return { x, y };\n}\n\nexport function positionToAngle(\n    position: { x: number; y: number },\n    svgSize: number,\n    angleType: AngleDescription\n) {\n    const dX = position.x - svgSize / 2;\n    const dY = svgSize / 2 - position.y; // position.y increases downwards in svg\n    let theta = Math.atan2(dY, dX); // radians, counterclockwise from positive x axis\n    if (theta < 0) {\n        theta = theta + 2 * Math.PI;\n    }\n    const degree = (theta / Math.PI) * 180; // degrees, counterclockwise from positive x axis\n    return convertAngle(\n        degree,\n        {\n            direction: \"ccw\",\n            axis: \"+x\",\n        },\n        angleType\n    );\n}\n\nexport function semiCircle(opts: {\n    startAngle: number;\n    endAngle: number;\n    angleType: AngleDescription;\n    radius: number;\n    svgSize: number;\n    direction: \"cw\" | \"ccw\";\n}) {\n    const { startAngle, endAngle, radius, svgSize, direction, angleType } = opts;\n    const startPosition = angleToPosition(\n        { degree: startAngle, ...angleType },\n        radius,\n        svgSize\n    );\n    const endPosition = angleToPosition(\n        { degree: endAngle, ...angleType },\n        radius,\n        svgSize\n    );\n    return `\n    M ${svgSize / 2},${svgSize / 2}\n    L ${startPosition.x},${startPosition.y}\n    A ${radius} ${radius} 0 ${direction === \"cw\" ? \"1 1\" : \"0 0\"}\n      ${endPosition.x} ${endPosition.y}\n    Z\n  `;\n}","import { AngleDescription, angleToPosition } from \"./circularGeometry\";\n\nfunction getStartAndEndPosition(opts: {\n    startAngle: number;\n    endAngle: number;\n    angleType: AngleDescription;\n    radius: number;\n    svgSize: number;\n}) {\n    const { startAngle, endAngle, radius, svgSize, angleType } = opts;\n\n    let isCircle = false;\n    if (startAngle !== endAngle && startAngle % 360 === endAngle % 360) {\n        // if it's a full circle, we can't naively draw an arc...\n        // https://stackoverflow.com/questions/5737975/circle-drawing-with-svgs-arc-path\n        isCircle = true;\n    }\n\n    const startPosition = angleToPosition(\n        { degree: startAngle, ...angleType },\n        radius,\n        svgSize\n    );\n    const endPosition = angleToPosition(\n        { degree: isCircle ? endAngle - 0.001 : endAngle, ...angleType },\n        radius,\n        svgSize\n    );\n\n    return { startPosition, endPosition, isCircle };\n}\n\nexport function pieShapedPath(opts: {\n    startAngle: number;\n    endAngle: number;\n    angleType: AngleDescription;\n    radius: number;\n    svgSize: number;\n    direction: \"cw\" | \"ccw\";\n}) {\n    const { radius, svgSize, direction } = opts;\n    const { startPosition, endPosition } = getStartAndEndPosition(opts);\n    return `\n    M ${svgSize / 2},${svgSize / 2}\n    L ${startPosition.x},${startPosition.y}\n    A ${radius} ${radius} 0 ${direction === \"cw\" ? \"1 1\" : \"0 0\"}\n      ${endPosition.x} ${endPosition.y}\n    Z\n  `;\n}\n\nexport function arcShapedPath(opts: {\n    startAngle: number;\n    endAngle: number;\n    angleType: AngleDescription;\n    radius: number;\n    svgSize: number;\n    direction: \"cw\" | \"ccw\";\n}) {\n    const { startAngle, endAngle, radius, direction } = opts;\n    const { startPosition, endPosition, isCircle } = getStartAndEndPosition(opts);\n\n    const largeArc = endAngle - startAngle >= 180;\n\n    return `\n      M ${startPosition.x},${startPosition.y}\n      A ${radius} ${radius} 0\n        ${largeArc ? \"1\" : \"0\"}\n        ${direction === \"cw\" ? \"1\" : \"0\"}\n        ${endPosition.x} ${endPosition.y}\n        ${isCircle ? \"Z\" : \"\"}\n    `;\n}\n\nexport function arcPathWithRoundedEnds(opts: {\n    startAngle: number;\n    endAngle: number;\n    angleType: AngleDescription;\n    innerRadius: number;\n    thickness: number;\n    svgSize: number;\n    direction: \"cw\" | \"ccw\";\n}) {\n    const { startAngle, innerRadius, thickness, direction, angleType, svgSize } =\n        opts;\n    let { endAngle } = opts;\n\n    if (startAngle % 360 === endAngle % 360 && startAngle !== endAngle) {\n        // Drawing a full circle, slightly offset end angle\n        // https://stackoverflow.com/questions/5737975/circle-drawing-with-svgs-arc-path\n        endAngle = endAngle - 0.001;\n    }\n    const largeArc = endAngle - startAngle >= 180;\n    const outerRadius = innerRadius + thickness;\n\n    const innerArcStart = angleToPosition(\n        { degree: startAngle, ...angleType },\n        innerRadius,\n        svgSize\n    );\n    const startPoint = `\n    M ${innerArcStart.x},${innerArcStart.y}\n  `;\n\n    const innerArcEnd = angleToPosition(\n        { degree: endAngle, ...angleType },\n        innerRadius,\n        svgSize\n    );\n    const innerArc = `\n    A ${innerRadius} ${innerRadius} 0\n      ${largeArc ? \"1\" : \"0\"}\n      ${direction === \"cw\" ? \"1\" : \"0\"}\n      ${innerArcEnd.x} ${innerArcEnd.y}\n  `;\n\n    const outerArcStart = angleToPosition(\n        { degree: endAngle, ...angleType },\n        outerRadius,\n        svgSize\n    );\n    const firstButt = `\n    A ${thickness / 2} ${thickness / 2} 0\n      ${largeArc ? \"1\" : \"0\"}\n      ${direction === \"cw\" ? \"0\" : \"1\"}\n      ${outerArcStart.x} ${outerArcStart.y}\n  `;\n\n    const outerArcEnd = angleToPosition(\n        { degree: startAngle, ...angleType },\n        outerRadius,\n        svgSize\n    );\n    const outerArc = `\n    A ${outerRadius} ${outerRadius} 0\n      ${largeArc ? \"1\" : \"0\"}\n      ${direction === \"cw\" ? \"0\" : \"1\"}\n      ${outerArcEnd.x} ${outerArcEnd.y}\n  `;\n\n    const secondButt = `\n    A ${thickness / 2} ${thickness / 2} 0\n      ${largeArc ? \"1\" : \"0\"}\n      ${direction === \"cw\" ? \"0\" : \"1\"}\n      ${innerArcStart.x} ${innerArcStart.y}\n  `;\n\n    return startPoint + innerArc + firstButt + outerArc + secondButt + \" Z\";\n}\n\n\nexport function arcPathWithTriangleEnd(opts: {\n    startAngle: number;\n    endAngle: number;\n    angleType: AngleDescription;\n    innerRadius: number;\n    thickness: number;\n    svgSize: number;\n    direction: \"cw\" | \"ccw\";\n}) {\n    const { startAngle, innerRadius, thickness, direction, angleType, svgSize } =\n        opts;\n    let { endAngle } = opts;\n\n    if (startAngle % 360 === endAngle % 360 && startAngle !== endAngle) {\n        // Drawing a full circle, slightly offset end angle\n        // https://stackoverflow.com/questions/5737975/circle-drawing-with-svgs-arc-path\n        endAngle = endAngle - 0.001;\n    }\n    const largeArc = endAngle - startAngle >= 180;\n    const outerRadius = innerRadius + thickness;\n\n    const innerArcStart = angleToPosition(\n        { degree: startAngle, ...angleType },\n        innerRadius,\n        svgSize\n    );\n\n    const innerArcEnd = angleToPosition(\n        { degree: endAngle, ...angleType },\n        innerRadius,\n        svgSize\n    );\n\n    const triangleEnd = `\n    L ${innerArcEnd.x},${innerArcEnd.y}  // Line to the end point of the arc\n    L ${innerArcEnd.x - 5},${innerArcEnd.y + 10}  // Line to a point of the triangle\n    L ${innerArcEnd.x + 5},${innerArcEnd.y + 10}  // Line to another point of the triangle\n    Z  // Close the path to complete the triangle\n  `;\n\n    return `\n    M ${innerArcStart.x},${innerArcStart.y}\n    A ${innerRadius} ${innerRadius} 0\n      ${largeArc ? \"1\" : \"0\"}\n      ${direction === \"cw\" ? \"1\" : \"0\"}\n      ${innerArcEnd.x} ${innerArcEnd.y}\n    ${triangleEnd}\n  `;\n}\n","import * as React from \"react\";\r\nimport {\r\n    angleToPosition,\r\n    positionToAngle,\r\n    AngleDescription,\r\n    valueToAngle,\r\n    angleToValue,\r\n} from \"./circularGeometry\";\r\nimport { arcPathWithRoundedEnds } from \"./svgPaths\";\r\n\r\ntype Props = {\r\n    size: number;\r\n    trackWidth: number;\r\n    minValue: number;\r\n    maxValue: number;\r\n    startAngle: number; // 0 - 360 degrees\r\n    endAngle: number; // 0 - 360 degrees\r\n    angleType: AngleDescription;\r\n    handleSize: number;\r\n    handle1: {\r\n        value: number;\r\n        onChange?: (value: number) => void;\r\n    };\r\n    handle2?: {\r\n        value: number;\r\n        onChange: (value: number) => void;\r\n    };\r\n    onControlFinished?: () => void;\r\n    disabled?: boolean;\r\n    arcColor: string;\r\n    arcBackgroundColor: string;\r\n    coerceToInt?: boolean;\r\n    outerShadow?: boolean;\r\n    capMode?: \"circle\" | \"triangle\"\r\n    btnRadius?: number;\r\n    btnColor?: string;\r\n};\r\n\r\nexport class CircularSlider extends React.Component<\r\n    React.PropsWithChildren<Props>\r\n> {\r\n    static defaultProps: Pick<\r\n        Props,\r\n        | \"size\"\r\n        | \"trackWidth\"\r\n        | \"minValue\"\r\n        | \"maxValue\"\r\n        | \"startAngle\"\r\n        | \"endAngle\"\r\n        | \"angleType\"\r\n        | \"arcBackgroundColor\"\r\n        | \"handleSize\"\r\n        | \"capMode\"\r\n        | \"btnColor\"\r\n    > = {\r\n        size: 200,\r\n        trackWidth: 4,\r\n        minValue: 0,\r\n        maxValue: 100,\r\n        startAngle: 0,\r\n        endAngle: 360,\r\n        angleType: {\r\n            direction: \"cw\",\r\n            axis: \"-y\",\r\n        },\r\n        handleSize: 8,\r\n        arcBackgroundColor: \"#aaa\",\r\n        capMode: \"triangle\",\r\n        btnColor: \"#0cd\",\r\n    };\r\n    svgRef = React.createRef<SVGSVGElement>();\r\n\r\n    onMouseEnter = (ev: React.MouseEvent<SVGSVGElement>) => {\r\n        if (ev.buttons === 1) {\r\n            // The left mouse button is pressed, act as though user clicked us\r\n            this.onMouseDown(ev);\r\n        }\r\n    };\r\n\r\n    onMouseDown = (ev: React.MouseEvent<SVGSVGElement>) => {\r\n        const svgRef = this.svgRef.current;\r\n        if (svgRef) {\r\n            svgRef.addEventListener(\"mousemove\", this.handleMousePosition);\r\n            svgRef.addEventListener(\"mouseleave\", this.removeMouseListeners);\r\n            svgRef.addEventListener(\"mouseup\", this.removeMouseListeners);\r\n        }\r\n        this.handleMousePosition(ev);\r\n    };\r\n\r\n    removeMouseListeners = () => {\r\n        const svgRef = this.svgRef.current;\r\n        if (svgRef) {\r\n            svgRef.removeEventListener(\"mousemove\", this.handleMousePosition);\r\n            svgRef.removeEventListener(\"mouseleave\", this.removeMouseListeners);\r\n            svgRef.removeEventListener(\"mouseup\", this.removeMouseListeners);\r\n        }\r\n        if (this.props.onControlFinished) {\r\n            this.props.onControlFinished();\r\n        }\r\n    };\r\n\r\n    handleMousePosition = (ev: React.MouseEvent<SVGSVGElement> | MouseEvent) => {\r\n        const x = ev.clientX;\r\n        const y = ev.clientY;\r\n        this.processSelection(x, y);\r\n    };\r\n\r\n    onTouch = (ev: React.TouchEvent<SVGSVGElement>) => {\r\n        /* This is a very simplistic touch handler. Some optimzations might be:\r\n            - Right now, the bounding box for a touch is the entire element. Having the bounding box\r\n              for touched be circular at a fixed distance around the slider would be more intuitive.\r\n            - Similarly, don't set `touchAction: 'none'` in CSS. Instead, call `ev.preventDefault()`\r\n              only when the touch is within X distance from the slider\r\n        */\r\n\r\n        // This simple touch handler can't handle multiple touches. Therefore, bail if there are either:\r\n        // - more than 1 touches currently active\r\n        // - a touchEnd event, but there is still another touch active\r\n        if (\r\n            ev.touches.length > 1 ||\r\n            (ev.type === \"touchend\" && ev.touches.length > 0)\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        // Process the new position\r\n        const touch = ev.changedTouches[0];\r\n        const x = touch.clientX;\r\n        const y = touch.clientY;\r\n        this.processSelection(x, y);\r\n\r\n        // If the touch is ending, fire onControlFinished\r\n        if (ev.type === \"touchend\" || ev.type === \"touchcancel\") {\r\n            if (this.props.onControlFinished) {\r\n                this.props.onControlFinished();\r\n            }\r\n        }\r\n    };\r\n\r\n    processSelection = (x: number, y: number) => {\r\n        const {\r\n            size,\r\n            maxValue,\r\n            minValue,\r\n            angleType,\r\n            startAngle,\r\n            endAngle,\r\n            handle1,\r\n            disabled,\r\n            handle2,\r\n            coerceToInt,\r\n        } = this.props;\r\n        if (!handle1.onChange) {\r\n            // Read-only, don't bother doing calculations\r\n            return;\r\n        }\r\n        const svgRef = this.svgRef.current;\r\n        if (!svgRef) {\r\n            return;\r\n        }\r\n        // Find the coordinates with respect to the SVG\r\n        const svgPoint = svgRef.createSVGPoint();\r\n        svgPoint.x = x;\r\n        svgPoint.y = y;\r\n        const coordsInSvg = svgPoint.matrixTransform(\r\n            svgRef.getScreenCTM()?.inverse()\r\n        );\r\n\r\n        const angle = positionToAngle(coordsInSvg, size, angleType);\r\n        let value = angleToValue({\r\n            angle,\r\n            minValue,\r\n            maxValue,\r\n            startAngle,\r\n            endAngle,\r\n        });\r\n        if (coerceToInt) {\r\n            value = Math.round(value);\r\n        }\r\n\r\n        if (!disabled) {\r\n            if (\r\n                handle2 &&\r\n                handle2.onChange &&\r\n                // make sure we're closer to handle 2 -- i.e. controlling handle2\r\n                Math.abs(value - handle2.value) < Math.abs(value - handle1.value)\r\n            ) {\r\n                handle2.onChange(value);\r\n            } else {\r\n                handle1.onChange(value);\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            size,\r\n            trackWidth,\r\n            handle1,\r\n            handle2,\r\n            handleSize,\r\n            maxValue,\r\n            minValue,\r\n            startAngle,\r\n            endAngle,\r\n            angleType,\r\n            disabled,\r\n            arcColor,\r\n            arcBackgroundColor,\r\n            outerShadow,\r\n            capMode,\r\n            btnColor\r\n        } = this.props;\r\n        const shadowWidth = 20;\r\n        const trackInnerRadius = size / 2 - trackWidth - shadowWidth;\r\n        const handle1Angle = valueToAngle({\r\n            value: handle1.value,\r\n            minValue,\r\n            maxValue,\r\n            startAngle,\r\n            endAngle,\r\n        });\r\n        const handle2Angle =\r\n            handle2 &&\r\n            valueToAngle({\r\n                value: handle2.value,\r\n                minValue,\r\n                maxValue,\r\n                startAngle,\r\n                endAngle,\r\n            });\r\n        const handle1Position = angleToPosition(\r\n            { degree: handle1Angle, ...angleType },\r\n            trackInnerRadius + trackWidth / 2,\r\n            size\r\n        );\r\n        const handle2Position =\r\n            handle2Angle &&\r\n            angleToPosition(\r\n                { degree: handle2Angle, ...angleType },\r\n                trackInnerRadius + trackWidth / 2,\r\n                size\r\n            );\r\n\r\n        const controllable = !disabled && Boolean(handle1.onChange);\r\n\r\n        const createCap = () => {\r\n            const triangleRotationArg = (endAngle - startAngle) / (maxValue - minValue)\r\n            const triangleRotation = handle1.value * triangleRotationArg + 180\r\n\r\n            if (capMode === \"triangle\") {\r\n                return (\r\n                    <polygon\r\n                        points={`${handle1Position.x},${handle1Position.y - handleSize} \r\n             ${handle1Position.x - handleSize},${handle1Position.y + handleSize} \r\n             ${handle1Position.x + handleSize},${handle1Position.y + handleSize}`}\r\n                        fill={btnColor}\r\n                        filter=\"url(#handleShadow)\"\r\n                        transform={`rotate(${triangleRotation} ${handle1Position.x} ${handle1Position.y})`}\r\n                    />\r\n                )\r\n            } else {\r\n                return(\r\n                    <circle\r\n                        r={handleSize}\r\n                        cx={handle1Position.x}\r\n                        cy={handle1Position.y}\r\n                        // fill=\"#ffffff\"\r\n                        fill=\"#ffffff\"\r\n                        filter=\"url(#handleShadow)\"\r\n                    />\r\n                )\r\n            }\r\n        }\r\n\r\n\r\n        return (\r\n            <svg\r\n                width={size}\r\n                height={size}\r\n                ref={this.svgRef}\r\n                onMouseDown={this.onMouseDown}\r\n                onMouseEnter={this.onMouseEnter}\r\n                onClick={\r\n                    /* TODO: be smarter about this -- for example, we could run this through our\r\n                    calculation and determine how close we are to the arc, and use that to decide\r\n                    if we propagate the click. */\r\n                    (ev) => controllable && ev.stopPropagation()\r\n                }\r\n                onTouchStart={this.onTouch}\r\n                onTouchEnd={this.onTouch}\r\n                onTouchMove={this.onTouch}\r\n                onTouchCancel={this.onTouch}\r\n                style={{ touchAction: \"none\" }}\r\n            >\r\n                {\r\n                    /* Shadow */\r\n                    outerShadow && (\r\n                        <React.Fragment>\r\n                            <radialGradient id=\"outerShadow\">\r\n                                <stop offset=\"90%\" stopColor={arcColor} />\r\n                                <stop offset=\"100%\" stopColor=\"white\" />\r\n                            </radialGradient>\r\n\r\n                            <circle\r\n                                fill=\"none\"\r\n                                stroke=\"url(#outerShadow)\"\r\n                                cx={size / 2}\r\n                                cy={size / 2}\r\n                                // Subtract an extra pixel to ensure there's never any gap between slider and shadow\r\n                                r={trackInnerRadius + trackWidth + shadowWidth / 2 - 1}\r\n                                strokeWidth={shadowWidth}\r\n                            />\r\n                        </React.Fragment>\r\n                    )\r\n                }\r\n\r\n                {handle2Angle === undefined ? (\r\n                    /* One-handle mode */\r\n                    <React.Fragment>\r\n                        {/* Arc Background  */}\r\n                        <path\r\n                            d={arcPathWithRoundedEnds({\r\n                                startAngle: handle1Angle,\r\n                                endAngle,\r\n                                angleType,\r\n                                innerRadius: trackInnerRadius,\r\n                                thickness: trackWidth,\r\n                                svgSize: size,\r\n                                direction: angleType.direction,\r\n                            })}\r\n                            fill={arcBackgroundColor}\r\n                        />\r\n                        {/* Arc (render after background so it overlays it) */}\r\n                        <path\r\n                            d={arcPathWithRoundedEnds({\r\n                                startAngle,\r\n                                endAngle: handle1Angle,\r\n                                angleType,\r\n                                innerRadius: trackInnerRadius,\r\n                                thickness: trackWidth,\r\n                                svgSize: size,\r\n                                direction: angleType.direction,\r\n                            })}\r\n                            fill={arcColor}\r\n                        />\r\n                    </React.Fragment>\r\n                ) : (\r\n                    /* Two-handle mode */\r\n                    <React.Fragment>\r\n                        {/* Arc Background Part 1  */}\r\n                        <path\r\n                            d={arcPathWithRoundedEnds({\r\n                                startAngle,\r\n                                endAngle: handle1Angle,\r\n                                angleType,\r\n                                innerRadius: trackInnerRadius,\r\n                                thickness: trackWidth,\r\n                                svgSize: size,\r\n                                direction: angleType.direction,\r\n                            })}\r\n                            fill={arcBackgroundColor}\r\n                        />\r\n                        {/* Arc Background Part 2  */}\r\n                        <path\r\n                            d={arcPathWithRoundedEnds({\r\n                                startAngle: handle2Angle,\r\n                                endAngle,\r\n                                angleType,\r\n                                innerRadius: trackInnerRadius,\r\n                                thickness: trackWidth,\r\n                                svgSize: size,\r\n                                direction: angleType.direction,\r\n                            })}\r\n                            fill={arcBackgroundColor}\r\n                        />\r\n                        {/* Arc (render after background so it overlays it) */}\r\n                        <path\r\n                            d={arcPathWithRoundedEnds({\r\n                                startAngle: handle1Angle,\r\n                                endAngle: handle2Angle,\r\n                                angleType,\r\n                                innerRadius: trackInnerRadius,\r\n                                thickness: trackWidth,\r\n                                svgSize: size,\r\n                                direction: angleType.direction,\r\n                            })}\r\n                            fill={arcColor}\r\n                        />\r\n                    </React.Fragment>\r\n                )}\r\n\r\n                {\r\n                    /* Handle 1 */\r\n                    controllable && (\r\n                        <React.Fragment>\r\n                            <filter\r\n                                id=\"handleShadow\"\r\n                                x=\"-50%\"\r\n                                y=\"-50%\"\r\n                                width=\"16\"\r\n                                height=\"16\"\r\n                            >\r\n                                <feOffset result=\"offOut\" in=\"SourceGraphic\" dx=\"0\" dy=\"0\"/>\r\n                                <feColorMatrix\r\n                                    result=\"matrixOut\"\r\n                                    in=\"offOut\"\r\n                                    type=\"matrix\"\r\n                                    values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0\"\r\n                                />\r\n                                <feGaussianBlur\r\n                                    result=\"blurOut\"\r\n                                    in=\"matrixOut\"\r\n                                    stdDeviation=\"5\"\r\n                                />\r\n                                <feBlend in=\"SourceGraphic\" in2=\"blurOut\" mode=\"normal\"/>\r\n                            </filter>\r\n                            {createCap()}\r\n                        </React.Fragment>\r\n                    )\r\n                }\r\n\r\n                {\r\n                    /* Handle 2 */\r\n                    handle2Position && (\r\n                        <React.Fragment>\r\n                            <circle\r\n                                r={handleSize}\r\n                                cx={handle2Position.x}\r\n                                cy={handle2Position.y}\r\n                                fill=\"#ffffff\"\r\n                                filter=\"url(#handleShadow)\"\r\n                            />\r\n                        </React.Fragment>\r\n                    )\r\n                }\r\n            </svg>\r\n        );\r\n    }\r\n}\r\n\r\nexport class CircularSliderWithChildren extends React.Component<\r\n    React.PropsWithChildren<Props>\r\n> {\r\n    static defaultProps = CircularSlider.defaultProps;\r\n    render() {\r\n        const { size } = this.props;\r\n        return (\r\n            <div\r\n                style={{\r\n                    width: size,\r\n                    height: size,\r\n                    position: \"relative\",\r\n                }}\r\n            >\r\n                <CircularSlider {...this.props} />\r\n                <div\r\n                    style={{\r\n                        position: \"absolute\",\r\n                        top: \"25%\",\r\n                        left: \"50%\",\r\n                        transform: \"translateX(-50%)\",\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                    }}\r\n                >\r\n                    {this.props.children}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CircularSlider;","import CircularSlider from \"./CircularSlider\";\n\n\nexport default CircularSlider;","import {Text, useTheme} from \"react-native-paper\";\r\nimport React from \"react\";\r\nimport {View} from \"react-native\";\r\nimport CircularSliderNative from \"../circular-slider/CircularSliderNative\";\r\nimport CircularSlider from \"../circular-slider/web\";\r\n\r\nimport {Platform} from \"react-native\";\r\n\r\n\r\nexport default function WindDirection({curValue, onChange}) {\r\n    const theme = useTheme()\r\n\r\n    const styles = {\r\n        container: {\r\n            // flex: 1,\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            paddingBottom: 40,\r\n        },\r\n        text: {\r\n            marginTop: -110,\r\n            fontWeight: \"bold\",\r\n            fontSize: 16,\r\n            textAlign: \"center\"\r\n        },\r\n        slider: {\r\n            padding: 5\r\n        },\r\n    }\r\n\r\n    return (\r\n\r\n        <View style={styles.container}>\r\n\r\n            {Platform.OS === \"web\"\r\n                ?\r\n                <CircularSlider\r\n                    size={240}\r\n                    trackWidth={20}\r\n                    minValue={0}\r\n                    maxValue={12}\r\n                    startAngle={0}\r\n                    endAngle={360}\r\n                    angleType={{\r\n                        direction: \"cw\",\r\n                        axis: \"+y\"\r\n                    }}\r\n                    handle1={{\r\n                        value: curValue,\r\n                        onChange: onChange\r\n                    }}\r\n                    coerceToInt={true}\r\n                    // arcColor={theme.colors.onSecondaryContainer}\r\n                    arcColor={theme.colors.secondaryContainer}\r\n                    arcBackgroundColor={theme.colors.secondaryContainer}\r\n                    btnColor={theme.colors.outline}\r\n                />\r\n                :\r\n                <CircularSliderNative\r\n                    value={curValue}\r\n                    dialRadius={80}\r\n                    btnRadius={15}\r\n                    btnColor={theme.colors.outline}\r\n                    minAngle={0}\r\n                    maxAngle={360}\r\n                    minValue={0}\r\n                    maxValue={12}\r\n                    dialWidth={15}\r\n                    meterColor={theme.colors.secondaryContainer}\r\n                    textColor={theme.colors.onSecondaryContainer}\r\n                    // fillColor={theme.colors.secondaryContainer}\r\n                    strokeColor={theme.colors.secondaryContainer}\r\n                    strokeWidth={20}\r\n                    textSize={0}\r\n                    onValueChange={onChange}\r\n                    style={styles.slider}\r\n                    coerceToInt={true}\r\n                />\r\n            }\r\n\r\n\r\n            <Text style={styles.text}>{`${curValue * 30}°\\n(${curValue}h)`}</Text>\r\n\r\n\r\n        </View>\r\n    )\r\n}","import {Text} from \"react-native-paper\";\r\nimport {Col, Grid, Row} from \"react-native-paper-grid\";\r\nimport React, {useState} from \"react\";\r\nimport InputCard from \"./InputCard\";\r\nimport styleSheet from \"../../styles\";\r\nimport {SimpleDialog} from \"../dialogs\";\r\nimport {Unit, UnitProps} from \"js-ballistics\";\r\nimport WindDirectionPicker from \"../wind-dir-picker/WindDirPicker\";\r\nimport MeasureSliderModal from \"../measure-slider-modal/MeasureSliderModal\";\r\n\r\n\r\nexport default function WindCard() {\r\n\r\n    const fields = [\r\n        {\r\n            key: \"windSpeed\",\r\n            label: \"Wind speed\",\r\n            suffix: UnitProps[Unit.MPS].symbol,\r\n            icon: \"windsock\",\r\n            mode: \"float\" as const,\r\n            initialValue: 0,\r\n            maxValue: 100,\r\n            minValue: 0,\r\n            decimals: 1,\r\n        }\r\n    ]\r\n\r\n    const [curWindDir, setCurWindDir] = useState(0)\r\n    const [windDir, setWindDir] = useState(curWindDir / 30)\r\n\r\n    const onWindDirChange = (value) => {\r\n        setWindDir(value === 12 ? 0 : value)\r\n    }\r\n\r\n    const onWindAccept = () => {\r\n        setCurWindDir(windDir * 30)\r\n    }\r\n\r\n    const onWindDecline = () => {\r\n        setWindDir(curWindDir / 30)\r\n    }\r\n\r\n    const getWindIcon = () => {\r\n        switch (curWindDir / 30) {\r\n            case 12:\r\n                return \"clock-time-twelve-outline\";\r\n            case 11:\r\n                return \"clock-time-eleven-outline\";\r\n            case 10:\r\n                return \"clock-time-ten-outline\";\r\n            case 9:\r\n                return \"clock-time-nine-outline\";\r\n            case 8:\r\n                return \"clock-time-eight-outline\";\r\n            case 7:\r\n                return \"clock-time-seven-outline\";\r\n            case 6:\r\n                return \"clock-time-six-outline\";\r\n            case 5:\r\n                return \"clock-time-five-outline\";\r\n            case 4:\r\n                return \"clock-time-four-outline\";\r\n            case 3:\r\n                return \"clock-time-three-outline\";\r\n            case 2:\r\n                return \"clock-time-two-outline\";\r\n            case 1:\r\n                return \"clock-time-one-outline\";\r\n            case 0:\r\n                return \"clock-time-twelve-outline\";\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <InputCard title={\"Current wind\"}>\r\n            <Grid style={styleSheet.grid.grid}>\r\n                {fields.map(field => <MeasureSliderModal key={field.key} field={field}/>)}\r\n\r\n\r\n                <Row style={styleSheet.grid.row}>\r\n                    <Col>\r\n                        <Text style={{fontSize: 16}}>{\"Wind direction\"}</Text>\r\n                    </Col>\r\n                    <Col>\r\n                        <SimpleDialog label={`Wind direction, degree`}\r\n                                      text={`${curWindDir}° (${curWindDir / 30}h)`}\r\n                                      icon={getWindIcon()}\r\n                                      onAccept={onWindAccept}\r\n                                      onDecline={onWindDecline}>\r\n                            <WindDirectionPicker\r\n                                curValue={windDir}\r\n                                onChange={onWindDirChange}/>\r\n                        </SimpleDialog>\r\n                    </Col>\r\n                </Row>\r\n\r\n                {/*<Row>*/}\r\n                {/*    <Col>*/}\r\n                {/*        <Text>{\"Wind direction\"}</Text>*/}\r\n                {/*    </Col>*/}\r\n\r\n                {/*    <Col>*/}\r\n                {/*        <CircularSlider.tsx*/}\r\n                {/*            size={200}*/}\r\n                {/*            trackWidth={8}*/}\r\n                {/*            minValue={0}*/}\r\n                {/*            maxValue={12}*/}\r\n                {/*            startAngle={0}*/}\r\n                {/*            endAngle={360}*/}\r\n                {/*            angleType={{direction: \"cw\", axis: \"+y\"}}*/}\r\n                {/*            handleSize={10}*/}\r\n                {/*            handle1={{*/}\r\n                {/*                value: 50,*/}\r\n                {/*                onChange: () => {},*/}\r\n                {/*            }}*/}\r\n                {/*            arcBackgroundColor={\"white\"}*/}\r\n                {/*            arcColor={\"black\"}*/}\r\n                {/*            capMode={\"triangle\"}*/}\r\n                {/*        />*/}\r\n\r\n                {/*    </Col>*/}\r\n                {/*</Row>*/}\r\n\r\n            </Grid>\r\n        </InputCard>\r\n    )\r\n}","import React from \"react\";\r\nimport {ScrollView} from 'react-native';\r\nimport {useTheme} from 'react-native-paper';\r\nimport {StyleSheet} from \"react-native\";\r\nimport {WeaponCard} from \"../../components/cards\";\r\nimport TabsCard from \"../../components/cards/TabsCard\";\r\n\r\n\r\nexport default function HomeScreen({navigation}) {\r\n\r\n    const theme = useTheme();\r\n\r\n    const styles = StyleSheet.create({\r\n        scrollViewContainer: {\r\n            backgroundColor: theme.colors.background,\r\n            // height: Dimensions.get('window').height * 0.8, // Set the height as a percentage of the screen height\r\n            // marginBottom: 80\r\n        },\r\n    });\r\n\r\n    return (\r\n       <>\r\n            <ScrollView\r\n                style={styles.scrollViewContainer}\r\n                keyboardShouldPersistTaps=\"always\"\r\n                alwaysBounceVertical={false}\r\n                showsVerticalScrollIndicator={true}\r\n            >\r\n                <WeaponCard/>\r\n\r\n                {/*<TabsCard />*/}\r\n            </ScrollView>\r\n            {/*TODO: move fab to screen*/}\r\n            {/*<FAB*/}\r\n            {/*    mode=\"flat\"*/}\r\n            {/*    size=\"medium\"*/}\r\n            {/*    icon={\"plus\"}*/}\r\n            {/*    onPress={() => console.log(\"BigFabPressed\")}*/}\r\n            {/*    style={[*/}\r\n            {/*        styleSheet.fab,*/}\r\n            {/*        {bottom: (BOTTOM_APPBAR_HEIGHT - MEDIUM_FAB_HEIGHT) / 2},*/}\r\n            {/*    ]}*/}\r\n            {/*/>*/}\r\n        </>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport {ScrollView} from 'react-native';\r\nimport {useTheme} from 'react-native-paper';\r\nimport {StyleSheet} from \"react-native\";\r\nimport {AtmoCard, WindCard} from \"../../components/cards\";\r\n\r\n\r\nexport default function CurrentAtmo({ navigation }) {\r\n\r\n    const theme = useTheme();\r\n\r\n    const styles = StyleSheet.create({\r\n        scrollViewContainer: {\r\n            backgroundColor: theme.colors.background,\r\n        },\r\n    });\r\n\r\n    return (\r\n        <ScrollView\r\n            style={styles.scrollViewContainer}\r\n            keyboardShouldPersistTaps=\"always\"\r\n            alwaysBounceVertical={false}\r\n            showsVerticalScrollIndicator={true}\r\n        >\r\n            <AtmoCard />\r\n            <WindCard />\r\n        </ScrollView>\r\n    );\r\n}\r\n","import {ScrollView} from 'react-native';\r\nimport {useTheme} from 'react-native-paper';\r\nimport {SettingsUnitCard, SettingsGeneralCard} from \"../../components/cards\";\r\n\r\nexport default function SettingsScreen({props}) {\r\n\r\n    const theme = useTheme();\r\n\r\n    const styles = {\r\n        scrollViewContainer: {\r\n            backgroundColor: theme.colors.background,\r\n            // height: Dimensions.get('window').height * 0.8, // Set the height as a percentage of the screen height\r\n            // marginBottom: 80\r\n        },\r\n    }\r\n\r\n    return (\r\n        <ScrollView\r\n            style={styles.scrollViewContainer}\r\n            keyboardShouldPersistTaps=\"always\"\r\n            alwaysBounceVertical={false}\r\n            showsVerticalScrollIndicator={true}\r\n        >\r\n            <SettingsGeneralCard />\r\n            <SettingsUnitCard />\r\n        </ScrollView>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport Placeholder from \"../placeholder/Placeholder\";\r\n\r\n\r\nexport default function Calculate({ navigation }) {\r\n\r\n    return (\r\n        <Placeholder text={\"Calculator\\nnot implemented yet\"}/>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport Placeholder from \"../placeholder/Placeholder\";\r\n\r\n\r\nexport default function Trajectory({ navigation }) {\r\n\r\n    return (\r\n        <Placeholder text={\"Trajectory table\\nnot implemented yet\"}/>\r\n    );\r\n}\r\n","import { createNavigationContainerRef } from '@react-navigation/native';\r\n\r\nexport const navigationRef = createNavigationContainerRef()\r\n\r\nexport function navigate(name: never) {\r\n    if (navigationRef.isReady()) {\r\n        navigationRef.navigate(name);\r\n    }\r\n}\r\n\r\nexport function getCurrentRoute() {\r\n    if (navigationRef.isReady()) {\r\n        return navigationRef.getCurrentRoute();\r\n    }\r\n    return null;\r\n}\r\n","\r\n\r\n\r\nimport React from 'react';\r\nimport {NavigationContainer} from '@react-navigation/native';\r\nimport {createNativeStackNavigator} from '@react-navigation/native-stack';\r\n\r\nimport {TopAppBar, BotAppBar} from \"./components/app-bars\";\r\nimport {HomeScreen, CurrentAtmo, SettingsScreen, Calculate, Trajectory} from \"./screens\";\r\n\r\nimport {navigationRef} from \"./RootNavigation\";\r\n\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\n\r\nexport default function RootScreenManager({...props}) {\r\n\r\n    const {nightMode, toggleNightMode} = props\r\n\r\n    return (\r\n\r\n                <NavigationContainer ref={navigationRef}>\r\n                    <Stack.Navigator\r\n                        initialRouteName=\"Home\"\r\n                        screenOptions={{\r\n                            header: (props) => <TopAppBar {...props}\r\n                                                          params={{nightMode, toggleNightMode}}\r\n                            />,\r\n                        }}\r\n                    >\r\n\r\n                        <Stack.Screen name=\"Home\" component={HomeScreen}/>\r\n                        <Stack.Screen name=\"Atmosphere\" component={CurrentAtmo}/>\r\n                        <Stack.Screen name=\"Calculate\" component={Calculate}/>\r\n                        <Stack.Screen name=\"Trajectory\" component={Trajectory}/>\r\n                        <Stack.Screen name=\"Settings\" component={SettingsScreen}/>\r\n\r\n\r\n                    </Stack.Navigator>\r\n                    <BotAppBar/>\r\n\r\n                </NavigationContainer>\r\n\r\n    );\r\n}","import React from 'react';\r\nimport {Platform, Text} from \"react-native\";\r\nimport {useState} from 'react';\r\nimport {StatusBar} from 'expo-status-bar';\r\nimport {PaperProvider, MD3LightTheme, MD3DarkTheme} from 'react-native-paper';\r\nimport {SafeAreaProvider} from 'react-native-safe-area-context';\r\n\r\nimport {NavigationContainer} from '@react-navigation/native';\r\nimport {createNativeStackNavigator} from '@react-navigation/native-stack';\r\n\r\nimport {TopAppBar, BotAppBar} from \"./src/components/app-bars\";\r\nimport {HomeScreen, CurrentAtmo, SettingsScreen, Calculate, Trajectory} from \"./src/screens\";\r\n\r\nimport { isMobile } from 'react-device-detect';\r\n\r\n\r\n\r\nimport {navigationRef} from \"./src/RootNavigation\";\r\nimport Placeholder from \"./src/screens/placeholder/Placeholder\";\r\nimport RootScreenManager from \"./src/RootScreenManager\";\r\n\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\n\r\nexport default function App() {\r\n\r\n    const [nightMode, setNightmode] = useState(true);\r\n    const theme = nightMode ? MD3DarkTheme : MD3LightTheme\r\n\r\n    const toggleNightMode = () => {\r\n        setNightmode((prevNightMode) => !prevNightMode);\r\n    };\r\n\r\n    const styles = {\r\n        provider: {\r\n            flex: 1,\r\n            backgroundColor: theme.colors.background  // Theme Background Color\r\n        },\r\n    }\r\n\r\n    // TODO: make a design for browsers\r\n    if ((Platform.OS === \"web\") && (!isMobile)) {\r\n        return <Placeholder text={\"Oops! The app supports only mobile view\"}></Placeholder>\r\n    }\r\n\r\n    return (\r\n        <SafeAreaProvider style={styles.provider}>\r\n            <PaperProvider theme={theme}>\r\n\r\n                <RootScreenManager nightMode={nightMode} toggleNightMode={toggleNightMode}/>\r\n\r\n                {/*<NavigationContainer ref={navigationRef}>*/}\r\n                {/*    <Stack.Navigator*/}\r\n                {/*        initialRouteName=\"Home\"*/}\r\n                {/*        screenOptions={{*/}\r\n                {/*            header: (props) => <TopAppBar {...props}*/}\r\n                {/*                                          params={{nightMode, toggleNightMode}}*/}\r\n                {/*            />,*/}\r\n                {/*        }}*/}\r\n                {/*    >*/}\r\n\r\n                {/*        <Stack.Screen name=\"Home\" component={HomeScreen}/>*/}\r\n                {/*        <Stack.Screen name=\"Atmosphere\" component={CurrentAtmo}/>*/}\r\n                {/*        <Stack.Screen name=\"Calculate\" component={Calculate}/>*/}\r\n                {/*        <Stack.Screen name=\"Trajectory\" component={Trajectory}/>*/}\r\n                {/*        <Stack.Screen name=\"Settings\" component={SettingsScreen}/>*/}\r\n\r\n\r\n                {/*    </Stack.Navigator>*/}\r\n                {/*    <BotAppBar/>*/}\r\n\r\n                {/*</NavigationContainer>*/}\r\n\r\n\r\n                <StatusBar style=\"auto\"/>\r\n            </PaperProvider>\r\n        </SafeAreaProvider>\r\n    );\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/ebalistyka/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [36], () => (__webpack_require__(6271)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["Placeholder","_ref","text","theme","useTheme","styles","StyleSheet","create","scrollViewContainer","backgroundColor","colors","background","_jsx","ScrollView","style","keyboardShouldPersistTaps","alwaysBounceVertical","showsVerticalScrollIndicator","contentContainerStyle","flex","justifyContent","children","Text","textAlign","grid","row","flexDirection","alignItems","col","card","margin","padding","content","marginHorizontal","paddingHorizontal","bottomBar","position","left","right","bottom","fab","chip","measure","display","measure_text","modal","simple","container","alignSelf","title","marginBottom","numberPicker","selectedIndicator","width","borderRadius","top","useSafeAreaInsets","navigation","useNavigation","_useState","useState","_useState2","_slicedToArray","currentRoute","setCurrentRoute","useEffect","addListener","_navigation$getCurren","currentRouteName","getCurrentRoute","name","_jsxs","Appbar","elevated","styleSheet","height","elevation","level2","safeAreaInsets","Action","icon","onPress","navigate","FAB","mode","size","MORE_ICON","Platform","OS","TopAppBar","props","Object","assign","_objectDestructuringEmpty","route","options","back","params","nightMode","toggleNightMode","getHeaderTitle","Header","BackAction","goBack","Content","Card","Title","titleVariant","label","_ref$icon","_ref$onAccept","onAccept","_ref$onDecline","onDecline","_React$useState","React","_React$useState2","visible","setVisible","showDialog","View","Chip","closeIcon","textStyle","fontSize","onClose","Portal","Dialog","onDismiss","Actions","variant","color","tertiary","scrollView","overflow","option","zIndex","index","visibleRest","currentScrollIndex","opacityFunction","rotationFunction","scaleFunction","relativeScrollIndex","Animated","subtract","translateY","interpolate","inputRange","range","i","unshift","push","outputRange","y","Math","sin","PI","j","opacity","x","scale","rotateX","transform","selectedIndex","onChange","_ref$selectedIndicato","selectedIndicatorStyle","_ref$containerStyle","containerStyle","_ref$itemStyle","itemStyle","_ref$itemTextStyle","itemTextStyle","_ref$itemHeight","itemHeight","_ref$scaleFunction","_ref$rotationFunction","pow","_ref$opacityFunction","_ref$visibleRest","_ref$decelerationRate","decelerationRate","_ref$containerProps","containerProps","_ref$flatListProps","flatListProps","flatListRef","useRef","Value","scrollY","lastScrollTimestamp","Date","getTime","containerHeight","_useState3","_useState4","scrollIndex","setScrollIndex","paddedOptions","useMemo","array","_toConsumableArray","offsets","Array","length","map","add","divide","Error","_flatListRef$current","current","scrollToIndex","animated","intervalID","setInterval","_flatListRef$current2","clearInterval","_objectSpread","FlatList","ref","onScroll","event","nativeEvent","contentOffset","useNativeDriver","listener","positionY","round","handleScroll","onMomentumScrollEnd","offsetY","min","max","floor","snapToOffsets","initialScrollIndex","getItemLayout","data","offset","keyExtractor","item","toString","renderItem","_ref2","WheelPickerItem","IntegerWheelPicker","curValue","minValue","maxValue","wheelProps","intRange","WheelPicker","indexOf","DecimalWheelPicker","decimals","decimalFormat","value","toFixed","slice","decimalStep","decimalsOptions","list","createDecimalOptions","parseFloat","FloatPicker","_ref3","onSecondary","secondary","fontWeight","secondaryContainer","marginTop","intWheelProps","borderTopLeftRadius","borderBottomLeftRadius","marginLeft","marginRight","paddingRight","decimalWheelProps","borderTopRightRadius","borderBottomRightRadius","paddingLeft","int","setInt","decimal","setDecimal","onValueChange","IntPicker","MeasureSliderModal","field","initialValue","setCurValue","setValue","pickerProps","picker","Row","Col","SimpleDialog","suffix","AtmoCard","fields","key","UnitProps","Unit","Celsius","symbol","MmHg","Meter","InputCard","Grid","RadioGroup","items","RadioButton","Group","Item","ScrollArea","SettingsGeneralCard","curLanguage","setCurLanguage","language","setLanguage","SimpleScrollDialog","get_unit_list","keys","Foot","Yard","def","MPS","FPS","Measure","Angular","Degree","Inch","Millimeter","Centimeter","Line","Weight","Grain","Fahrenheit","Pressure","PSI","Energy","Joule","MIL","SettingsUnitCard","UnitSelector","WeaponCard","twistStates","showSelectedCheck","checkedColor","primary","curTwistDir","setCurTwistDir","twistDir","setTwistDir","curName","setCurName","_React$useState3","_React$useState4","setName","TextInput","onChangeText","SegmentedButtons","buttons","_ref$btnRadius","btnRadius","_ref$btnColor","btnColor","_ref$dialRadius","dialRadius","_ref$dialWidth","dialWidth","_ref$meterColor","meterColor","_ref$fillColor","textColor","fillColor","_ref$strokeColor","strokeColor","_ref$strokeWidth","strokeWidth","_ref$value","textSize","_ref$minAngle","minAngle","_ref$maxAngle","maxAngle","_ref$minValue","_ref$maxValue","_ref$xCenter","xCenter","Dimensions","get","_ref$yCenter","yCenter","_ref$onValueChange","_ref$coerceToInt","coerceToInt","step","angle","setAngle","console","log","panResponder","PanResponder","onStartShouldSetPanResponder","e","gs","onStartShouldSetPanResponderCapture","onMoveShouldSetPanResponder","onMoveShouldSetPanResponderCapture","onPanResponderMove","xOrigin","yOrigin","a","cartesianToPolar","moveX","moveY","polarToCartesian","useCallback","r","hC","cos","atan","bR","dR","startCoord","endCoord","Svg","Circle","cx","cy","stroke","fill","Path","d","G","Polygon","points","panHandlers","valueToAngle","startAngle","endAngle","convertAngle","degree","from","to","direction","axis","angleToPosition","radius","svgSize","dX","dY","angleInRad","arcPathWithRoundedEnds","opts","innerRadius","thickness","angleType","largeArc","outerRadius","innerArcStart","startPoint","innerArcEnd","innerArc","outerArcStart","firstButt","outerArcEnd","CircularSlider","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","args","_key","call","apply","concat","svgRef","onMouseEnter","ev","onMouseDown","addEventListener","handleMousePosition","removeMouseListeners","removeEventListener","onControlFinished","clientX","clientY","processSelection","onTouch","touches","type","touch","changedTouches","_svgRef$getScreenCTM","_this$props","handle1","disabled","handle2","svgPoint","createSVGPoint","theta","atan2","positionToAngle","matrixTransform","getScreenCTM","inverse","angleToValue","abs","_createClass","_this$props2","this","trackWidth","handleSize","arcColor","arcBackgroundColor","outerShadow","capMode","trackInnerRadius","handle1Angle","handle2Angle","handle1Position","handle2Position","controllable","Boolean","onClick","stopPropagation","onTouchStart","onTouchEnd","onTouchMove","onTouchCancel","touchAction","id","stopColor","shadowWidth","undefined","result","in","dx","dy","values","stdDeviation","in2","triangleRotationArg","triangleRotation","filter","createCap","defaultProps","_React$Component2","CircularSliderWithChildren","_super2","WindDirection","paddingBottom","slider","outline","CircularSliderNative","onSecondaryContainer","WindCard","curWindDir","setCurWindDir","windDir","setWindDir","getWindIcon","WindDirectionPicker","HomeScreen","_Fragment","CurrentAtmo","SettingsScreen","Calculate","Trajectory","navigationRef","createNavigationContainerRef","Stack","createNativeStackNavigator","RootScreenManager","NavigationContainer","Navigator","initialRouteName","screenOptions","header","Screen","component","BotAppBar","App","setNightmode","MD3DarkTheme","MD3LightTheme","provider","isMobile","SafeAreaProvider","PaperProvider","prevNightMode","StatusBar","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","m","amdO","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","every","splice","n","getter","__esModule","definition","o","defineProperty","enumerable","g","globalThis","Function","window","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","forEach","bind","__webpack_exports__"],"sourceRoot":""}